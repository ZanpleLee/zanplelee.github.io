<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Addendum</title>
  
  
  <link href="http://www.zanple.top/atom.xml" rel="self"/>
  
  <link href="http://www.zanple.top/"/>
  <updated>2020-10-01T08:45:26.451Z</updated>
  <id>http://www.zanple.top/</id>
  
  <author>
    <name>Zanple</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>游戏资源常见贴图类型</title>
    <link href="http://www.zanple.top/2020/10/01/gaming-texture/"/>
    <id>http://www.zanple.top/2020/10/01/gaming-texture/</id>
    <published>2020-10-01T08:10:37.000Z</published>
    <updated>2020-10-01T08:45:26.451Z</updated>
    
    <content type="html"><![CDATA[<p>游戏模型制作中用到了很多贴图类型，通过不同类型贴图的组合使用以达到最终需要得到的模型效果。最常见的类型有<strong>Diffuse</strong>、<strong>Emissive</strong>、<strong>Normal</strong>、<strong>Opacity</strong>、<strong>Specular</strong>、<strong>Roughness</strong>。游戏制作中根据项目资产的需要使用不同的贴图类型。<a id="more"></a></p><p><img src="2workflow.jpg" alt="金属/粗糙度和高光反射/光泽度工作流程"></p><p>在基于物理纹理的渲染（PBR）中，有两种最常见的工作流程，即<em>金属/粗糙度</em>和<em>高光反射/光泽度</em>。在使用过程中，两种工作流程各有利弊（详见<a href="https://academy.substance3d.com/courses/the-pbr-guide-part2-zh">PBR-Guide</a>）。</p><hr><h1 id="1-颜色贴图"><a href="#1-颜色贴图" class="headerlink" title="1. 颜色贴图"></a>1. 颜色贴图</h1><p>颜色贴图主要为Diffuse、Albedo、Base Color三种。一般认为这三者是等同的。</p><h2 id="1-1-Diffuse"><a href="#1-1-Diffuse" class="headerlink" title="1.1 Diffuse"></a>1.1 Diffuse</h2><p>光照模型在Lambertian（兰伯特材质球）着色器中会把颜色贴图叫做<strong>Diffuse Map</strong>（也叫颜色贴图），通常在绘制这张Diffuse Map的时候会把物体的结构阴影信息也绘制进去。在传统工作流中，Diffuse Map是带着光影信息的。</p><p><img src="Diffuse.jpg" alt="不同工作流中的Diffuse"></p><p><strong>Diffuse Map</strong>（漫反射颜色）应该表示物体表面的颜色，在Unity中叫做Albedo。在Specular/Glossiness工作流程中，对于金属材质而言它没有漫反射(或者说比较少)，所以使用黑色来填充。而非金属材质反射光少于金属材质，并且它折射的光只有较少的吸收通常重新折射回表面，因此对于非金属材质，使用的是漫反射颜色来填充。<strong>需要特别注意的是，漫反射纹理不应该包含任何光照信息，因为将基于（环境）添加光照到物体的纹理上。</strong></p><h2 id="1-2-Albedo"><a href="#1-2-Albedo" class="headerlink" title="1.2 Albedo"></a>1.2 Albedo</h2><p>主要体现模型的纹理和颜色。Unity的Shader（着色器）中，把颜色贴图叫做<strong>Albedo</strong>。</p><h2 id="1-3-Base-Color"><a href="#1-3-Base-Color" class="headerlink" title="1.3 Base Color"></a>1.3 Base Color</h2><p><strong>Base Color</strong>是把颜色贴图剔除光影变化后，我们看到的最基础的颜色。在PBR工作流中颜色贴图叫做Base Color， 其中包含了<em>电介质的反射颜色</em>和金属的反射率值这两种类型的数据。因为Base Color Map中带了金属的反射率值，所以需要配合上Metallic Map一起使用的。</p><blockquote><p><img src="BaseColorandDiffuse.jpg" alt="BaseColor和Diffuse"></p><p>比较容易造成混淆的是<strong>金属/粗糙度</strong>工作流中的Base Color和<strong>高光反射/光泽度</strong>工作流中的Diffuse(Albedo)的区别，两种工作流使用了不同的贴图方法来处理颜色。实际上，<strong>金属/粗糙度工作流中的Base Color本质上是高光反射/光泽度工作流中的Diffuse和Specular的结合</strong>，这也是有时候通过先创建金属/粗糙度材质再将其转化为高光反射/光泽度的原因之一。</p><div align=center><p><img src="TextureMapComparison.gif" alt="BaseColor包含了Diffuse中的介电材质值和Specular中的金属材质值"></p></div><p>在高光反射/光泽度工作流中，Diffuse贴图严格影响着材质的基本颜色而对材质的其他特征（如发射率）没有影响。对于介电材质而言，其材质颜色来自Diffuse贴图；对于金属材质而言，大部分颜色来自Specular高光贴图。</p><p>在金属/粗糙度工作流中，BaseColor贴图实则包含了漫反射和高光贴图的信息。而Metallic贴图这决定了有多少BaseColor被解释为漫反射或者高光。</p></blockquote><h2 id="1-4-Gradient-amp-ColorLUT"><a href="#1-4-Gradient-amp-ColorLUT" class="headerlink" title="*1.4 Gradient&amp;ColorLUT"></a>*1.4 Gradient&amp;ColorLUT</h2><p><strong>Gradient Map</strong>（渐变图）和ColorLUT（颜色查找表）也可以认为是颜色贴图的一种，这类贴图通过在一维或二维的方式将一种颜色映射到另一种颜色。且通常作为全局资源使用（不是特定于某一模型）。</p><div align=center><p><img src="TeamFortress2.jpg" alt="使用渐变纹理来控制漫反射光照"></p></div><p>Valve在<a href="https://cdn.cloudflare.steamstatic.com/apps/valve/2007/NPAR07_IllustrativeRenderingInTeamFortress2.pdf">Team Fortress 2</a>中使用渐变纹理来控制漫反射光照，渲染游戏中具有插画风格的角色。</p><p><img src="ColorLUT.jpg" alt="ColorLUT"></p><p>ColorLUT是预先生成的一张结果纹理，可用于优化复杂光照的渲染，如皮肤、毛发等。</p><h1 id="2-凹凸贴图"><a href="#2-凹凸贴图" class="headerlink" title="2. 凹凸贴图"></a>2. 凹凸贴图</h1><p>凹凸贴图主要为<strong>Bump</strong>、<strong>Normal</strong>和<strong>Displacement</strong>三种，三种贴图都是为模型提供更多的细节。其中Displacement有时用于改变模型的顶点位置（作为Parallax视差贴图使用），而Bump和Normal则<strong>不会</strong>改变模型的顶点位置。</p><p><img src="bumpnordis.jpg" alt="凹凸贴图对比"></p><p><em>就实现复杂度/质量与性能开销而言，Dispalcement&gt;Normal&gt;Bump(&gt;Reflection)。</em></p><h2 id="2-1-Bump"><a href="#2-1-Bump" class="headerlink" title="2.1 Bump"></a>2.1 Bump</h2><p><strong>Bump Map</strong>（凹凸贴图 ）是一个类似于法线贴图的概念，有时也称为<strong>Height</strong>（高度图）。但是凹凸贴图只包含高度信息而不包含角度信息。凹凸贴图的优点是可以很直观地看出模型表面的凹凸情况（颜色越浅表明该位置的表面越像外凸起，反之亦然），但是计算更复杂，因此更性能开销更大。高度图通常与法线贴图结合使用，用于给出表面凹凸的额外信息。</p><blockquote><p>Substance Painter、Substance Designer导出的Height高度图等同于Bump凹凸贴图，而不是Displacement置换贴图的信息。</p></blockquote><h2 id="2-2-Normal"><a href="#2-2-Normal" class="headerlink" title="2.2 Normal"></a>2.2 Normal</h2><p><strong>Normal Map</strong>（法线贴图）是凹凸映射技术的另一种应用。法线贴图包含角度信息而不包含任何高度信息，其R、G、B三个通道储存的信息表示了斜面的方向和陡峭程度。</p><p><img src="softedge.jpg" alt="法线贴图与凹凸贴图对比"></p><p>这一特征使得我们可以使用法线贴图储存的角度信息来柔化尖锐的边缘（仅使用Bump高度信息无法做到这一点，因为只有高度信息无法知道边缘应该沿着哪个方向弯曲）。柔化边缘不仅可以让物体看起来更真实，还能进一步突出物体的形状（尤其是在游戏对象在屏幕上占比较小的时候）。</p><p><img src="3normal.jpg" alt="不同空间下的法线贴图"></p><p>由于法线贴图存储的是表面的法线方向，而方向是相对于坐标空间而言的。因此存在三种不同的空间法线贴图：<em>Tangent切线空间</em>、<em>Object对象空间</em>、<em>World世界空间</em>，三种法线贴图都有各自的优缺点且能达到相同的效果，只是计算方式有所不同。</p><h3 id="2-2-1-Tangent-Space"><a href="#2-2-1-Tangent-Space" class="headerlink" title="2.2.1 Tangent Space"></a>2.2.1 Tangent Space</h3><p><img src="TanNormal.jpg" alt="切线空间下的法线贴图"></p><p><strong>Tangent Space</strong>（切线空间），顾名思义，切线空间法线是基于每个面的切线方向。切线空间下的法线贴图是最常见的法线贴图形式，大部分看起来都是浅蓝紫色的。其中，<strong>B通道</strong>表示法线方向的斜率；<strong>R通道</strong>表示左右切线方向的斜率；<strong>G通道</strong>表示切线方向向上或向下的斜率（<strong>OpenGl向上，DirectX向下</strong>）。</p><h3 id="2-2-2-Object-Space"><a href="#2-2-2-Object-Space" class="headerlink" title="2.2.2 Object Space"></a>2.2.2 Object Space</h3><p><img src="ObjNormal.jpg" alt="模型空间下的法线贴图"></p><p><strong>Object Space</strong>（对象空间或模型空间）法线贴图基于整个对象而不是每个面，大部分看起来都是五颜六色的。对象空间法线贴图在渲染上较快，但由于其无法镜像任何UV，在对称模型上会浪费大量纹理空间，且无法进行UV动画。因此在很多情况下切线空间较优于对象空间。</p><h3 id="2-2-3-World-Space"><a href="#2-2-3-World-Space" class="headerlink" title="2.2.3 World Space"></a>2.2.3 World Space</h3><div align=center><p><img src="WldNormal.png" alt="世界空间下的法线贴图"></p></div><p><strong>World Space</strong>（世界空间）是基于全局坐标的法线贴图，也是三种法线贴图中最不灵活的一种。 这种类型的法线贴图一般仅用于环境这类大型，静态和非对称的物体，或者临时用于诸如Substance Painter、Substance Designer之类软件中作为计算特殊效果（如风化效果）的一种方法。</p><h2 id="2-3-Displacement"><a href="#2-3-Displacement" class="headerlink" title="2.3 Displacement"></a>2.3 Displacement</h2><p><strong>Displacement Map</strong>（置换贴图，也叫移位贴图）可以改变模型对象的几何形状，因此在提供最真实的效果的同时也会大幅增加渲染性能的开销。</p><p><img src="rocksdisp.jpg" alt="置换贴图效果"></p><p>置换贴图能实现很多仅仅通过Bump和Normal无法实现的效果（尤其是模型对象的轮廓表现）。</p><div align=center><p><img src="image05.jpg" alt="结合凹凸贴图使用"></p></div><p>置换贴图也常作为高度图来生成地形，并结合凹凸贴图实现丰富的地形效果。</p><h3 id="2-3-1-Parallax-Map"><a href="#2-3-1-Parallax-Map" class="headerlink" title="2.3.1 Parallax Map"></a>2.3.1 Parallax Map</h3><p>置换贴图的另一个用途是作为<strong>Parallax Map</strong>（视差贴图，也称为Virtual Displacement Map虚拟置换贴图）使用。</p><p>![视差贴图效果](Comparison Parallax.png)</p><p>视差贴图是一种更高级的技术，能够提供比凹凸贴图更多的深度。视差贴图通过偏移每个像素的纹理坐标以达到更好的视觉表现，但仍不如性能开销更大的<strong>Relief Map</strong>（浮雕贴图）。</p><h3 id="2-3-2-Relief-Map"><a href="#2-3-2-Relief-Map" class="headerlink" title="2.3.2 Relief Map"></a>2.3.2 Relief Map</h3><p><strong>Relief Map</strong>（浮雕贴图，也称为Parallax Occlusion Map视差遮挡贴图）能够实现比视差贴图更深的凹凸深度，并能实现自阴影和遮挡效果。</p><div align=center><p><img src="CrysisParallax.jpg" alt="孤岛危机中的浮雕映射效果"></p></div><h3 id="2-3-3-Vector-Displacement"><a href="#2-3-3-Vector-Displacement" class="headerlink" title="2.3.3 Vector Displacement"></a>2.3.3 Vector Displacement</h3><p><strong>Vector Displacement Map</strong>（矢量置换贴图）是高度贴图的扩展，与传统Displacement（置换贴图）不同的是矢量置换贴图记录了模型上各点的高度和方向信息，并储存为16/32位浮点颜色信息。</p><p><img src="VectorDisp02.jpg" alt="矢量置换贴图与传统置换贴图"></p><p>传统的置换贴图使用的是低模的UV坐标，贴图记录了高模和低模之间的差异。而矢量置换贴图在使用类似映射方法的同时，而另一个模型最近的顶点之间的距离，还能在空间中移动顶点。因此也能记录复杂的凹面下（如蘑菇、耳朵等）的顶点信息，将雕刻细节从一个模型转移到另一个模型。</p><h1 id="3-反射贴图"><a href="#3-反射贴图" class="headerlink" title="3. 反射贴图"></a>3. 反射贴图</h1><p>与颜色贴图中的Diffuse和Base Color一样，反射贴图中根据工作流的不同也有不一样的贴图类型。</p><h2 id="3-1-Metal-Roughness"><a href="#3-1-Metal-Roughness" class="headerlink" title="3.1 Metal - Roughness"></a>3.1 Metal - Roughness</h2><p><img src="MetRoug.jpg" alt="金属/粗糙度工作流"></p><p>在<em>金属/粗糙度</em>工作流中，使用的反射贴图为<strong>Metallic</strong>和<strong>Roughness</strong>。</p><h3 id="3-1-1-Metallic"><a href="#3-1-1-Metallic" class="headerlink" title="3.1.1 Metallic"></a>3.1.1 Metallic</h3><p><strong>Metallic</strong>（金属贴图）起到类似于蒙版的作用，区分固有色贴图中的金属和绝缘体数据。在金属性贴图中，0（黑色-0 sRGB）表示绝缘体，而1（白-255 sRGB）表示金属。</p><div align=center><p><img src="Metallic.jpg" alt="金属贴图"></p></div><p><strong>金属贴图的运行方式类似于掩码的运作方式，因为该贴图向着色器阐释如何分析基础色中的数据。</strong>金属感对象的光泽度由粗糙度控制。 材质越粗糙，其光泽度就会越低， 而缺少粗糙度将使金属显得非常有光泽。</p><h3 id="3-1-2-Roughness"><a href="#3-1-2-Roughness" class="headerlink" title="3.1.2 Roughness"></a>3.1.2 Roughness</h3><p><strong>Roughness</strong>（粗糙度贴图）定义材质得粗糙度信息，0（黑色-0 sRGB）表示光滑，1（白-255 sRGB）表示粗糙。粗粗糙度是指造成光漫射的表面不规则状况，反射方向根据表面粗糙度自由变化。这改变了光的方向，但是光强度保持恒定不变。表面越粗糙，高光越散越暗。表面越光滑，高光反射集中，尽管反射的光的总量是一点的，表面也会更亮，光会更强。</p><div align=center><p><img src="Roughness.jpg" alt="粗糙度贴图"></p></div><p>Roughness粗糙度贴图 与Glossiness Map光泽度贴图是<strong>相反的</strong>。Roughness 反向就变成Glossiness Map 。</p><h2 id="3-2-Specular-Glossiness"><a href="#3-2-Specular-Glossiness" class="headerlink" title="3.2 Specular - Glossiness"></a>3.2 Specular - Glossiness</h2><p><img src="SpeGlos.jpg" alt="高光反射/光泽度工作流"></p><p>在<em>高光反射/光泽度</em>工作流中，使用的反射贴图为<strong>Specular</strong>和<strong>Glossiness</strong>。</p><h3 id="3-2-1-Specular"><a href="#3-2-1-Specular" class="headerlink" title="3.2.1 Specular"></a>3.2.1 Specular</h3><p><strong>Specular</strong>（高光贴图）表示高光得范围、强度、颜色，在<strong>Specular工作流中，</strong>颜色越亮高光越强，黑色表示没有高光。</p><div align=center><p><img src="Specular.jpg" alt="高光贴图"></p></div><p>高光反射规定了金属的反射率值和非金属的F0。使用RGB贴图可以在贴图中创建不同反射率的电介质材质。</p><p><strong>高光度也可影响材质的光泽度。</strong> 将“高光度（Specular）”值调整到接近1时，将使材质的反射和反射高光显得特别强特别显眼， 而将该值减小到接近0会弱化反射及反射高光，直到它们几乎不存在为止。</p><p><strong>高光度（Specular）也深受粗糙度影响。</strong> 即使“高光度（Specular）”输入设置为1，通过将“粗糙度（Roughness）”的值设置为1，也可以取消高光度效果。 另外，如果启用了金属感，那么调整高光度不会影响材质。</p><h3 id="3-2-2-Glossiness"><a href="#3-2-2-Glossiness" class="headerlink" title="3.2.2 Glossiness"></a>3.2.2 Glossiness</h3><p><strong>Glossiness</strong>（缩写Gloss，光泽度贴图），定义材质得粗糙度信息，跟Roughness相反，0（黑色-0 sRGB）表示粗糙，1（白-255 sRGB）表示光滑。</p><div align=center><p><img src="Glossiness.jpg" alt="光泽度贴图"></p></div><p>光泽度无非是指表面反射光线的能力。 表面能够反射的光线越多，光泽度越高。 表面能够反射的光线越少，光泽度越低。 表面反射光线的能力受环境中各种因素的影响，例如落在对象上的那些非常小颗粒的灰尘，以及接触对象时从手上沾染到对象上的油污， 所有这一切都会影响表面反射光线的能力。</p><h2 id="3-3-Anisotropic-Map"><a href="#3-3-Anisotropic-Map" class="headerlink" title="*3.3 Anisotropic Map"></a>*3.3 Anisotropic Map</h2><div align=center><p><img src="brushmore.jpg" alt="各向异性贴图"></p></div><p><strong>Anisotropic Map</strong>（各向异性贴图）是一种特殊的反射贴图。拉丝金属通常具有各向异性的高光，这是由表面的微划痕引起的。有时使用各项异性贴图去制作拉丝金属的效果。</p><h1 id="4-结构贴图"><a href="#4-结构贴图" class="headerlink" title="4. 结构贴图"></a>4. 结构贴图</h1><h2 id="4-1-Ambient-Occlusion"><a href="#4-1-Ambient-Occlusion" class="headerlink" title="4.1 Ambient Occlusion"></a>4.1 Ambient Occlusion</h2><p><strong>Ambient Occlusion</strong>（AO，环境光遮蔽贴图）描述了较大尺度的光线遮蔽信息，通常由高模烘培得到。指表面某点能获得多少环境中的光，用来模拟物体之间所产生的阴影，在不打光的时候增加体积感。</p><p><img src="AO.jpg" alt="AO图"></p><p>环境光遮蔽贴图基于物体与其他物体越接近的区域，受到反射光线的照明越弱这一现象来模拟现实照明的一部分效果。<strong>该贴图只影响漫反射分配，不影响高光反射分配。</strong></p><h2 id="4-2-Cavity"><a href="#4-2-Cavity" class="headerlink" title="4.2 Cavity"></a>4.2 Cavity</h2><p><strong>Cavity Map</strong>（缝隙图）描述了比AO图更小尺度的光线遮蔽信息，通常由高模或者法线贴图烘培得到。</p><p><img src="Cav.jpg" alt="缝隙图"></p><p>缝隙图只包含模型对象表面的凹面区域而不包括凸面区域，因此缝隙图通常大部分都是白色的，只有凹陷区域是深色的。<strong>与AO图不同的是，缝隙图影响不仅会影响漫反射，还会影响高光反射部分。</strong></p><h2 id="4-3-Bent-Normal"><a href="#4-3-Bent-Normal" class="headerlink" title="4.3 Bent Normal"></a>4.3 Bent Normal</h2><p><strong>Bent Normal Map</strong>（环境法线贴图）有助于减少照明构建之后发生的漏光现象。</p><p><img src="BentNormal.jpg" alt="环境法线贴图"></p><p>环境法线贴图能够和AO图结合使用以改善漫反射间接照明，通过将环境发现代替法线用于间接照明来使漫反射间接照明更接近于全局光照。</p><h2 id="4-4-Curvature"><a href="#4-4-Curvature" class="headerlink" title="4.4 Curvature"></a>4.4 Curvature</h2><p><strong>Curvature</strong>（曲率贴图）是存储网格的凸度/凹度的纹理，可用于遮盖表面会出现更多磨损的地方或可能发生次表面散射的地方（凸面），可能积累更多污垢（凹面）的地方，以检查表面的连续性等。</p><p><img src="Cur.jpg" alt="曲率贴图"></p><p>曲率贴图允许提取和存储凹凸信息。黑色的值代表了凹区域，白色的值代表了凸区域，灰色值表示中性/平坦区域。。</p><h2 id="4-5-Thickness"><a href="#4-5-Thickness" class="headerlink" title="4.5 Thickness"></a>4.5 Thickness</h2><p><strong>Thickness</strong>（厚度贴图）记录了表面厚度信息，可以用于辅助制作表面散射(SSS，简称3S材质)材质，或直接扩散/反照率假装SSS的效果。 </p><p><img src="Thi.jpg" alt="厚度贴图"></p><p>其黑色代表薄的地方、白色代表厚的地方。</p><h1 id="5-光照与环境贴图"><a href="#5-光照与环境贴图" class="headerlink" title="5. 光照与环境贴图"></a>5. 光照与环境贴图</h1><h2 id="5-1-Light-Map"><a href="#5-1-Light-Map" class="headerlink" title="5.1 Light Map"></a>5.1 Light Map</h2><p><strong>Light Map</strong>（光照贴图）用来存储预渲染的光照信息，用于静态模型上的间接光照，解决实时动态光源效果不好且消耗性能的问题。</p><div align=center><p><img src="Lightmapping.jpg" alt="光照贴图"></p></div><p>光照贴图通常存储了静态烘培光源的颜色和亮度，由于光照贴图是预渲染的，因此可以使用如光能传递等非实时方法来得到更真实的效果。</p><h2 id="5-2-Spherical-Environment-Map"><a href="#5-2-Spherical-Environment-Map" class="headerlink" title="5.2 Spherical Environment Map"></a>5.2 Spherical Environment Map</h2><p><strong>Spherical Environment Map</strong>（球面环境贴图）是最简单的反射映射技术之一。球面环境贴图将环境光存储在球面上，然后用环境光去渲染整个的物体。</p><p><img src="Snipaste_2020-09-30_23-50-35.jpg" alt="球面环境贴图"></p><p><img src="Snipaste_2020-09-30_23-50-53.jpg" alt="球面环境贴图的缺陷"></p><p>由于是通过球体来存储环境信息，这就导致了描述的不是均匀的信息，<strong>会在靠近极点的地方出现扭曲</strong>（墨卡托投影：将地球进行投影到平面，维度高的地方在平面地图上看起来会更大）</p><h2 id="5-2-Cube-Map"><a href="#5-2-Cube-Map" class="headerlink" title="5.2 Cube Map"></a>5.2 Cube Map</h2><p><strong>Cube Map</strong>（立方体贴图）是环境映射的一种实现方法。环境映射可以模拟物体周围的环境，而使用了环境映射的物体可以看起来像镀了层金属一样反射出周围的环境。</p><p><img src="Snipaste_2020-09-30_23-51-12.jpg" alt="立方体贴图"></p><p>立方体贴图包含了6张图像，对应着立方体的6个面，每个面表示沿着世界空间下的轴向观察所得的图像。</p><p><img src="Snipaste_2020-09-30_23-51-42.jpg" alt="立方体贴图"></p><p>立方体贴图解决了球面环境贴图图像扭曲的问题，<strong>但立方体贴图不能模拟多次反射的结果。</strong></p><h2 id="5-3-Radiosity-Normal-Map"><a href="#5-3-Radiosity-Normal-Map" class="headerlink" title="5.3 Radiosity Normal Map"></a>5.3 Radiosity Normal Map</h2><p><strong>Radiosity Normal Map</strong>（辐射度法线贴图）是光贴图和法线贴图的特殊混合。可以将照明作为一组三个光照贴图进行烘焙，以存储照明矢量，而不仅仅是亮度/颜色。这使表面法线贴图可以接收定向照明，因此，通过烘焙的照明信息可以更准确地照明凹凸。</p><div align=center><p><img src="RadiosityNormalMap.jpg" alt="Half-Life®2/ Valve Source™Shading"></p></div><p>Valve在Half-Life 2中广泛使用了此方法，他们在GDC 2004论文*<a href="http://www.decew.net/OSS/References/D3DTutorial10_Half-Life2_Shading.pdf">Half-Life®2/ Valve Source™Shading</a>*中将其称为“辐射度法线贴图” 。</p><h1 id="6-其他贴图"><a href="#6-其他贴图" class="headerlink" title="6. 其他贴图"></a>6. 其他贴图</h1><h2 id="6-1-ID-Mask"><a href="#6-1-ID-Mask" class="headerlink" title="6.1 ID/Mask"></a>6.1 ID/Mask</h2><p><strong>ID/Mask Map</strong>（ID、遮罩贴图）用于选择不同的区域，进行分别绘制。</p><p><img src="ID.jpg" alt="ID/遮罩贴图"></p><h2 id="6-2-Emissive"><a href="#6-2-Emissive" class="headerlink" title="6.2 Emissive"></a>6.2 Emissive</h2><p><strong>Emissive Map</strong>（自发光贴图）控制表面发射光的颜色和亮度。当场景中使用了自发光材质时，它看起来像一个可见光。物体将呈现发光效果。</p><p><img src="EmissionOn.jpg" alt="自发光贴图"></p><p>自发光材质通常用于某些部位应该从内部照亮的物体上，例如监视器屏幕、高速制动的汽车盘式制动器、控制面板上的发光按钮，或黑暗中仍然可见的怪物眼睛。简单的自发光材质可以通过一个颜色和亮度来定义。</p><h2 id="6-3-Opacity"><a href="#6-3-Opacity" class="headerlink" title="6.3 Opacity"></a>6.3 Opacity</h2><p><strong>Opacity</strong>（透明贴图）定义贴图的不透明度，用于裁剪表面的一部分。黑色是透明的部分，白色为不透明的部分，灰色为半透明的部分。</p><div align=center><p><img src="Opacity.jpg" alt="透明贴图的应用"></p></div><p>当材质使用不透明度贴图时，它将充当遮罩，该遮罩将隐藏对象的某些部分。例如可以将“不透明度”贴图用于剪切树叶形状，穿孔表面和网格等。</p><h2 id="6-5-Position"><a href="#6-5-Position" class="headerlink" title="6.5 Position"></a>6.5 Position</h2><p><strong>Position Map</strong>（位置贴图）使用R/G/B三个通道描述X/Y/Z轴上顶点对应的位置。</p><p><img src="PositionMap.jpg" alt="位置贴图"></p><p>通常位置贴图来实现模型底部到顶部的渐变效果等，如墙壁底部的污渍、石块底部的青苔。</p><h2 id="6-6-Detail-Map"><a href="#6-6-Detail-Map" class="headerlink" title="6.6 Detail Map"></a>6.6 Detail Map</h2><p><strong>Detail</strong>（细节贴图）是用于平铺的局部贴图纹理，以相对较低的成本，内存和性能来增加表面细节（微观和宏观）。</p><p><img src="DetailMap.jpg" alt="细节贴图的使用"></p><div align=center><p><img src="Detail.jpg" alt="细节贴图的组成"></p></div><p>细节贴图通常为四方连续纹理，并由一组贴图组合而成（法线、反射率、光泽度等）。</p><h2 id="6-7-Flow-Map"><a href="#6-7-Flow-Map" class="headerlink" title="6.7 Flow Map"></a>6.7 Flow Map</h2><p><strong>Flow Map</strong>（流动贴图）存储的是向量场数据，可以用来制作流动的水面效果。</p><p><img src="Flowmap.gif" alt="Flowmap"></p><p>Valve在Portal 2和Left 4 Dead 2中广泛使用了此方法，他们在SIGGRAPH 2010论文*<a href="http://advances.realtimerendering.com/s2010/Vlachos-Waterflow(SIGGRAPH%202010%20Advanced%20RealTime%20Rendering%20Course).pdf">Vlachos/Water Flow in Portal 2</a>*中分享了用流动贴图制作流动水面的技术。</p><h2 id="6-8-DuDv-Map"><a href="#6-8-DuDv-Map" class="headerlink" title="6.8 DuDv Map"></a>6.8 DuDv Map</h2><p><strong>DuDv</strong>贴图是使用一种纹理扭曲另一种纹理的像素的一种简单方法。常用于火上的热雾、涟漪折射的水面等。</p><div align=center><p><img src="dudvmap.jpg" alt="DuDv贴图"></p></div><p>DuDv贴图与法线贴图类似，都是将方向信息存储在纹理中，但DuDv贴图仅用到了R通道和G通道。</p><div align=center><p><img src="dudvmap2.jpg" alt="DuDv贴图原理"></p></div><p>DuDv的工作方式与视差贴图扭曲曲面的方式类似，只是DuDv不考虑视角（无视差）。从DuDv贴图中获取Du和Dv，对反射贴图中的每个像素，将Du添加到反射贴图的U纹理坐标，并将Dv添加到其V坐标。最后偏移反射贴图像素，从而产生失真。</p><hr><ol><li><p>《Unity Shader入门精要》</p></li><li><p>《Real-Time Rendering 4th Edition》</p></li><li><p>GAMES101:现代计算机图形学入门[<a href="http://games-cn.org/intro-graphics/]">http://games-cn.org/intro-graphics/]</a></p></li><li><p>游戏美术基础：游戏贴图[<a href="https://www.jianshu.com/p/c1ed26cbb6b4]">https://www.jianshu.com/p/c1ed26cbb6b4]</a></p></li><li><p>Polycount - Texture types[<a href="http://wiki.polycount.com/wiki/Texture_types]">http://wiki.polycount.com/wiki/Texture_types]</a></p></li><li><p>《Real-time Shallow Water Simulation and Environment Mapping and Clouds - Rene Truelsen》</p></li><li><p>What are the different texture maps for?[<a href="https://help.poliigon.com/en/articles/1712652-what-are-the-different-texture-maps-for]">https://help.poliigon.com/en/articles/1712652-what-are-the-different-texture-maps-for]</a></p></li><li><p>The PBR Guide part 1[<a href="https://academy.substance3d.com/courses/the-pbr-guide-part-1-zh]">https://academy.substance3d.com/courses/the-pbr-guide-part-1-zh]</a></p></li><li><p>The PBR Guide part 2[<a href="https://academy.substance3d.com/courses/the-pbr-guide-part2-zh]">https://academy.substance3d.com/courses/the-pbr-guide-part2-zh]</a></p></li><li><p>Diffuse/Specular vs BaseColor[<a href="https://resources.turbosquid.com/stemcell/stemcell-3d-modeling-workflow/stemcell-textures-materials/diffuse-specular-vs-basecolor/]">https://resources.turbosquid.com/stemcell/stemcell-3d-modeling-workflow/stemcell-textures-materials/diffuse-specular-vs-basecolor/]</a></p></li><li><p>Normal vs. Displacement Mapping &amp; Why Games Use Normals[<a href="https://cgcookie.com/articles/normal-vs-displacement-mapping-why-games-use-normals]">https://cgcookie.com/articles/normal-vs-displacement-mapping-why-games-use-normals]</a></p></li><li><p>Physically-Based Rendering, And You Can Too![<a href="https://marmoset.co/posts/physically-based-rendering-and-you-can-too/]">https://marmoset.co/posts/physically-based-rendering-and-you-can-too/]</a></p></li><li><p>Level of Detail[<a href="https://resources.turbosquid.com/level-of-detail/]">https://resources.turbosquid.com/level-of-detail/]</a></p></li><li><p>Elliminate Texture Confusion: Bump, Normal and Displacement Maps[<a href="https://www.pluralsight.com/blog/film-games/bump-normal-and-displacement-maps]">https://www.pluralsight.com/blog/film-games/bump-normal-and-displacement-maps]</a></p></li><li><p>VECTOR DISPLACEMENT MAPS[<a href="http://docs.pixologic.com/user-guide/3d-modeling/exporting-your-model/vector-displacement-Maps/]">http://docs.pixologic.com/user-guide/3d-modeling/exporting-your-model/vector-displacement-Maps/]</a></p></li><li><p>Parallax Map with Offset Limiting: A PerPixel Approximation of Uneven Surfaces</p></li><li><p>BRUSHED METAL V-RAY MATERIAL[<a href="https://resources.turbosquid.com/library-tutorials/brushed-metal/]">https://resources.turbosquid.com/library-tutorials/brushed-metal/]</a></p></li><li><p>Half Avocado[<a href="https://quixel.com/megascans/home?category=3D%20asset&amp;category=edible&amp;category=fruit&amp;assetId=ujcxeblva]">https://quixel.com/megascans/home?category=3D%20asset&amp;category=edible&amp;category=fruit&amp;assetId=ujcxeblva]</a></p></li><li><p>Art of Lighting Game Environments in Unity[<a href="https://cgcookie.com/articles/art-of-lighting-game-environments]">https://cgcookie.com/articles/art-of-lighting-game-environments]</a></p></li><li><p>Detail Maps[<a href="https://docs.cryengine.com/display/SDKDOC2/Detail+Maps]">https://docs.cryengine.com/display/SDKDOC2/Detail+Maps]</a></p></li><li><p>180701 UE4 Flowmap Fields Visualizer[<a href="https://www.youtube.com/watch?v=frfcRzuw6OM]">https://www.youtube.com/watch?v=frfcRzuw6OM]</a></p></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;游戏模型制作中用到了很多贴图类型，通过不同类型贴图的组合使用以达到最终需要得到的模型效果。最常见的类型有&lt;strong&gt;Diffuse&lt;/strong&gt;、&lt;strong&gt;Emissive&lt;/strong&gt;、&lt;strong&gt;Normal&lt;/strong&gt;、&lt;strong&gt;Opacity&lt;/strong&gt;、&lt;strong&gt;Specular&lt;/strong&gt;、&lt;strong&gt;Roughness&lt;/strong&gt;。游戏制作中根据项目资产的需要使用不同的贴图类型。</summary>
    
    
    
    <category term="游戏美术" scheme="http://www.zanple.top/categories/%E6%B8%B8%E6%88%8F%E7%BE%8E%E6%9C%AF/"/>
    
    
    <category term="游戏" scheme="http://www.zanple.top/tags/%E6%B8%B8%E6%88%8F/"/>
    
    <category term="美术" scheme="http://www.zanple.top/tags/%E7%BE%8E%E6%9C%AF/"/>
    
    <category term="计算机图形学" scheme="http://www.zanple.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>Graphic Debugger工具简单入门</title>
    <link href="http://www.zanple.top/2020/09/13/graphic-debugger-intro/"/>
    <id>http://www.zanple.top/2020/09/13/graphic-debugger-intro/</id>
    <published>2020-09-13T10:42:50.000Z</published>
    <updated>2020-09-16T16:21:26.231Z</updated>
    
    <content type="html"><![CDATA[<p>游戏制作学习过程中无论是对自己的游戏进行分析，还是学习其他游戏用到的先进的制作方法和工艺流程，进行渲染调试都必不可少。<a id="more"></a></p><hr><h1 id="1-PC游戏"><a href="#1-PC游戏" class="headerlink" title="1.PC游戏"></a>1.PC游戏</h1><p>PC游戏可以选择的工具有工具有<strong>NSight</strong>，<strong>Intel GPA</strong>，<strong>RenderDoc</strong>。这里以<strong>Intel GPA</strong>的使用为例。</p><p>在Intel的<a href="https://software.intel.com/content/www/us/en/develop/tools/graphics-performance-analyzers.html">官网</a>上下载安装包安装完成后，会在桌面上看到4个图标。</p><div align=center><p><img src="Sni50-47.png" alt="Intel GPA"></p></div><p>其中<strong>Graphics Monitor</strong>是我们使用的主要工具。打开<strong>Graphics Monitor</strong>后，点击示例项目的<code>播放按钮</code>。</p><p><img src="Sni58-13.png" alt="Graphics Monitor界面"></p><p>打开游戏窗口，可以点击右侧的<strong>Capture frame</strong>或按<code>Ctrl+Shift+C</code>键进行当前帧的抓取。</p><div align=center><p><img src="Sni58-23.png" alt="示例"></p></div><p>回到<strong>Graphics Monitor</strong>出口，在右侧可看到刚才抓的帧。双击打开这一帧。</p><p><img src="Sni58-39.png" alt="Graphics Monitor窗口"></p><p>在弹出的<strong>Graphics Frame Analyzer</strong>窗口中，选择需要打开的帧，点击左侧的<code>Open</code>打开分析界面。</p><p><img src="Sni59-11.png" alt="Graphics Frame Analyzer窗口"></p><p>进入帧分析界面后，点击<strong>Frame Statistics-DrawIndexed-Show All Resources</strong>可以看到这一帧下的全部资源，包括<em>贴图</em>、<em>模型</em>等。</p><p><img src="Sni00-31.png" alt="分析界面"></p><p><img src="Sni00-40.png" alt="贴图资源"></p><p><img src="Sni01-49.png" alt="模型资源"></p><p>如果想对其他游戏进行分析，在<strong>Graphics Monitor</strong>界面中的<code>路径位置</code>，更改为想要分析的游戏的位置，并打开右上角设置中的<code>自动检测启动应用</code>开关。</p><p><img src="Sni58-40.png" alt="设置路径"></p><p><img src="Sni02-42.png" alt="打开自动检测"></p><h1 id="2-移动端游戏"><a href="#2-移动端游戏" class="headerlink" title="2. 移动端游戏"></a>2. 移动端游戏</h1><p>移动端常用的工具有<strong>RenderDoc</strong>，或者各家GPU厂商自己推出的相应工具，比如高通系的<strong>Snapdragon Profiler</strong>。这里以<strong>Snapdragon Profiler</strong>为例。</p><p>在Qualcomm的<a href="https://developer.qualcomm.com/software/snapdragon-profiler">官网</a>上进行注册登录后，根据对应的平台下载安装<strong>Snapdragon Profiler</strong>。安装完成后会在桌面上看到Snapdragon Profiler的快捷方式。</p><div align=center><p><img src="Sni18-37.png" alt="Snapdragon Profiler"></p></div><p>打开<strong>Snapdragon Profiler</strong>，点击左侧的<code>Connect to a Device</code>。</p><p><img src="Sni26-54.png" alt="连接设备1"></p><p>手机打开USB调试并连接电脑，点击<code>Connect</code>按钮。</p><p><img src="Sni27-03.png" alt="连接设备2"></p><p>成功连接后左侧的New Trace Capture和New Snapshot Capture按钮变为可点击状态，点击<code>New Snapshot Capture</code>。</p><p><img src="Sni32-05.png" alt="帧抓取"></p><p>找到需要抓帧的进程，点击<code>Take Snapshot</code>。</p><p><img src="Sni32-12.png" alt="抓取当前帧"></p><p><img src="Sni33-14.png" alt="分析界面"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;游戏制作学习过程中无论是对自己的游戏进行分析，还是学习其他游戏用到的先进的制作方法和工艺流程，进行渲染调试都必不可少。</summary>
    
    
    
    <category term="性能分析" scheme="http://www.zanple.top/categories/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/"/>
    
    
    <category term="游戏" scheme="http://www.zanple.top/tags/%E6%B8%B8%E6%88%8F/"/>
    
    <category term="性能分析" scheme="http://www.zanple.top/tags/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Unity卡通地编-Hylia小岛(完善中)</title>
    <link href="http://www.zanple.top/2020/09/12/unity-hylia-island/"/>
    <id>http://www.zanple.top/2020/09/12/unity-hylia-island/</id>
    <published>2020-09-12T03:44:50.000Z</published>
    <updated>2020-09-13T08:36:57.536Z</updated>
    
    <content type="html"><![CDATA[<p>跟着猴子老师学习的一个Unity卡通地编的制作。使用Unity的LWRP轻量级渲染管线制作，通过Substance Designer，Zbrush，Maya，Photoshop来辅助完成模型贴图部分。材质部分涉及水和互动草的Shader制作，利用GPU的特性来快速实例像旷野之息一样的草坪。使用Houdini来制作树的叶子，给物件做LOD优化。<a id="more"></a></p><hr><h1 id="1-地形系统"><a href="#1-地形系统" class="headerlink" title="1. 地形系统"></a>1. 地形系统</h1><p>地形系统的构建用到了<code>Terrain Tools</code>包，用于改善在Unity中创建地形的工作流程。</p><p>在<code>Terrain Toolbox</code>中设置创建的地形大小点击<code>Create</code>创建地形，可以通过导入外部<code>Heightmap</code>来创建地形。</p><p><img src="image-20200912165129171.png" alt="Terrain Box"></p><blockquote><p>在Edit-Shortcuts-Terrain中可以更改创建地形的快捷键，如Select Set Height Tool、Select Smooth Tool等。通过ASD调节笔刷的强度、大小和旋转角度。</p></blockquote><p>使用<code>Raise or Lower Terrain</code>、<code>Set Height</code>、<code>Smooth Height</code>构建基本地形。</p><p>完成地形构建后，通过<code>Create-Terrain Layer</code>创建层，在<code>地形-Paint Texture-Layer</code>中添加图层。为地形绘制贴图。</p><h1 id="2-石头雕刻"><a href="#2-石头雕刻" class="headerlink" title="2. 石头雕刻"></a>2. 石头雕刻</h1><p>使用Zbrush对石头低模进行雕刻，其中用到了卡通风格的<a href="https://pan.baidu.com/s/1LEvg59mFISRcE8d8aZyanw">笔刷</a>(提取码uaqi)。</p><p><img src="image-20200912195904050.png" alt="卡通笔刷"></p><h1 id="3-石头贴图"><a href="#3-石头贴图" class="headerlink" title="3. 石头贴图"></a>3. 石头贴图</h1><p>利用Substance Designer制作石头的贴图。首先将高模和低模导入SD中，在SD中烘培<code>AO</code>、Normal(Tangent)、Normal(World)、Curvature、Position图。</p><h2 id="3-1-Normal"><a href="#3-1-Normal" class="headerlink" title="3.1 Normal"></a>3.1 Normal</h2><p>在高模烘培的法线贴图上叠加裂痕、磨损等细节效果。细节效果通过<code>Creased节点</code>得到，裂痕效果通过<code>Cells节点</code>得到，磨损坑洼效果可通过<code>Tile Sampler节点</code>得到。</p><p>石头上的横纹使用<code>Light节点</code>通过<code>世界空间的法线贴图</code>得到石块的遮罩，以此避免石块顶部也出现横纹。</p><blockquote><p>Light节点：根据世界空间法线贴图进行伪照明，并返回黑白“光照图”蒙版。</p></blockquote><h2 id="3-2-Base-Color"><a href="#3-2-Base-Color" class="headerlink" title="3.2 Base Color"></a>3.2 Base Color</h2><p>颜色贴图用到了<code>Gradient Map节点</code>来得到表面的基本颜色，使用<code>Dirt节点</code>根据烘培的<code>Curvature</code>、<code>AO</code>、<code>世界空间的法线贴图</code>来生成石块缝隙的青苔效果。</p><blockquote><p>Gradient Map节点：从灰度映射到自定义的颜色色带，颜色色带可以通过取色曲线得到。</p><p>Dirt节点：根据烘焙的Curvature、AO、Normal(World)和用户设置生成黑白蒙版，表示在被遮挡和凹陷的边缘和角落出现了污垢。</p><p>Edge Damage节点：根据烘焙的曲率和AO对凸起的凸边缘造成的损坏图和用户设置生成黑白蒙版。</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;跟着猴子老师学习的一个Unity卡通地编的制作。使用Unity的LWRP轻量级渲染管线制作，通过Substance Designer，Zbrush，Maya，Photoshop来辅助完成模型贴图部分。材质部分涉及水和互动草的Shader制作，利用GPU的特性来快速实例像旷野之息一样的草坪。使用Houdini来制作树的叶子，给物件做LOD优化。</summary>
    
    
    
    <category term="Unity" scheme="http://www.zanple.top/categories/Unity/"/>
    
    
    <category term="Unity" scheme="http://www.zanple.top/tags/Unity/"/>
    
    <category term="地编" scheme="http://www.zanple.top/tags/%E5%9C%B0%E7%BC%96/"/>
    
  </entry>
  
  <entry>
    <title>Substance Designer-布料纹理</title>
    <link href="http://www.zanple.top/2020/09/05/sd-fabric/"/>
    <id>http://www.zanple.top/2020/09/05/sd-fabric/</id>
    <published>2020-09-05T06:12:03.000Z</published>
    <updated>2020-09-05T15:50:01.306Z</updated>
    
    <content type="html"><![CDATA[<p>利用Substance Designer制作的几个布料纹理。<a id="more"></a></p><hr><h1 id="1-效果图"><a href="#1-效果图" class="headerlink" title="1. 效果图"></a>1. 效果图</h1><div align=center><p><img src="y11.png" alt=""></p><p><img src="y22.png" alt=""></p><p><img src="l11.png" alt=""></p><p><img src="s31.png" alt=""></p><p><img src="s41.png" alt=""></p><p><img src="s51.png" alt=""></p></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;利用Substance Designer制作的几个布料纹理。</summary>
    
    
    
    <category term="Substance Designer" scheme="http://www.zanple.top/categories/Substance-Designer/"/>
    
    
    <category term="works" scheme="http://www.zanple.top/tags/works/"/>
    
    <category term="Substance Designer" scheme="http://www.zanple.top/tags/Substance-Designer/"/>
    
    <category term="程序化" scheme="http://www.zanple.top/tags/%E7%A8%8B%E5%BA%8F%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Substance Designer-刺绣效果</title>
    <link href="http://www.zanple.top/2020/07/04/sd-embroidery/"/>
    <id>http://www.zanple.top/2020/07/04/sd-embroidery/</id>
    <published>2020-07-04T13:30:03.000Z</published>
    <updated>2020-09-05T15:49:45.424Z</updated>
    
    <content type="html"><![CDATA[<p>利用Substance Designer制作的一个刺绣效果（参考了Pauline Boiteux的《Advanced Pattern &amp; Fabric Creation in Substance Designer》制作流程以及整体的制作思路）。<a id="more"></a></p><hr><h1 id="1-效果图"><a href="#1-效果图" class="headerlink" title="1. 效果图"></a>1. 效果图</h1><p><img src="render.jpg" alt="效果图1"></p><p><img src="detail.jpg" alt="效果图2"></p><h1 id="2-制作思路"><a href="#2-制作思路" class="headerlink" title="2. 制作思路"></a>2. 制作思路</h1><p>整体的制作分为刺绣纹理、基本图案的制作，主体纹理的组合，布料纹理的制作和细节的完善几个部分。</p><h2 id="2-1-刺绣纹理"><a href="#2-1-刺绣纹理" class="headerlink" title="2.1 刺绣纹理"></a>2.1 刺绣纹理</h2><p>刺绣纹理这块分为刺绣的<code>边缘</code>和<code>刺绣内部填充</code>的纹理制作。</p><p><strong>边缘纹理</strong>的制作比较简单， 使用自带的<code>Fibers</code>平铺即可得到。</p><p><strong>内部填充纹理</strong>可以通过<code>Splatter Circular</code>创建扭曲的绳结形状拼接平铺得到。</p><div align=center><img src="image-20200905225628362.png" alt="内部填充纹理" style="zoom:80%;" /></div><h2 id="2-2-主题纹理的制作与组合"><a href="#2-2-主题纹理的制作与组合" class="headerlink" title="2.2 主题纹理的制作与组合"></a>2.2 主题纹理的制作与组合</h2><p>基本图案的制作可以利用内部<code>Shape</code>进行变换得到，也可以在其他软件（如CorelDARW、Illustrator等软件）制作。再对基本图形进行组合得到（需要注意连续的问题）。</p><div align=center><p><img src="image-20200905230147933.png" alt="主体纹理"></p></div><h2 id="2-3-布料纹理的制作"><a href="#2-3-布料纹理的制作" class="headerlink" title="2.3 布料纹理的制作"></a>2.3 布料纹理的制作</h2><p>简单的布料纹理可以通过<code>Weave Generator</code>节点生成，再叠加划痕效果丰富其细节。</p><div align=center><p><img src="image-20200905230507707.png" alt="布料纹理"></p></div><h2 id="2-4-细节的完善"><a href="#2-4-细节的完善" class="headerlink" title="2.4 细节的完善"></a>2.4 细节的完善</h2><div align=center><p><img src="image-20200905230615026.png" alt="刺绣的褶皱"></p></div><p>布料的刺绣很难避免褶皱的产生（如上图），要实现这样的效果需要对布料上刺绣相应的位置的法线信息进行修改。如下为使用褶皱效果的制作流程。</p><div align=center><p><img src="image-20200905230739856.png" alt="褶皱效果的制作流程"></p></div><p>*将上图的模糊效果由<code>Blur HQ Grayscale</code>改为非均匀模糊可以得到更好的效果。</p><h1 id="3-其他刺绣方案"><a href="#3-其他刺绣方案" class="headerlink" title="3. 其他刺绣方案"></a>3. 其他刺绣方案</h1><p>本文制作的刺绣效果还有很多可以优化的地方。此外还有很多用SD制作刺绣效果的案例，如汪锦，Pauline Boiteux制作的一些刺绣效果。</p><p><img src="Cixiu.jpg" alt="[汪锦](https://academy.substance3d.com/courses/%E5%88%BA%E7%BB%A3%E6%95%99%E7%A8%8B)"></p><p><img src="Flower.jpg" alt="[Pauline Boiteux](https://www.artstation.com/jappluz)"></p><p><img src="Japanese.jpg" alt="[Pauline Boiteux](https://www.artstation.com/jappluz)"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;利用Substance Designer制作的一个刺绣效果（参考了Pauline Boiteux的《Advanced Pattern &amp;amp; Fabric Creation in Substance Designer》制作流程以及整体的制作思路）。</summary>
    
    
    
    <category term="Substance Designer" scheme="http://www.zanple.top/categories/Substance-Designer/"/>
    
    
    <category term="works" scheme="http://www.zanple.top/tags/works/"/>
    
    <category term="Substance Designer" scheme="http://www.zanple.top/tags/Substance-Designer/"/>
    
    <category term="程序化" scheme="http://www.zanple.top/tags/%E7%A8%8B%E5%BA%8F%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Unity小游戏-新冠入侵</title>
    <link href="http://www.zanple.top/2020/05/13/unity-coviddefend/"/>
    <id>http://www.zanple.top/2020/05/13/unity-coviddefend/</id>
    <published>2020-05-13T04:49:10.000Z</published>
    <updated>2020-09-05T08:17:37.385Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>利用Unity独立开发的一个塔防类的小游戏~<a id="more"></a></p></blockquote><div class="bilibili"><iframe src="//player.bilibili.com/player.html?aid=583174672&bvid=BV1Mz4y1d7s3&cid=191730581&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe></div><hr><h1 id="1-游戏简介"><a href="#1-游戏简介" class="headerlink" title="1. 游戏简介"></a>1. 游戏简介</h1><p>《新冠入侵》是一个基于安卓平台开发的抗击新冠疫情的小游戏，使用了<code>Unity2019.3.3f1</code>进行游戏的开发、<code>Adobe Photoshop CC 2019</code>完成美术资源的设计。</p><p>游戏技术点包含常用设计模式辅助项目开发（<strong>单例，工厂，对象池，中介者，外观，状态，责任链</strong>等模式），DoTween插件的使用方法，使用JsonMapper去解析和存贮简单json与复杂json，json的使用注意事项与强制解析。编辑器拓展功能来制作地图工具（提高我们游戏开发效率，自己制作一个简单插件）。还有更多细碎知识诸如数值策划知识，游戏物体在Inspector的调整，2D开发中常遇到问题的展现与解决，面向接口编程的使用与体验，对象池技术，Unity的2D图集处理，并切割出一张张小图片。Unity中赋值顺序探索等等。</p><h1 id="2-游戏需求与流程"><a href="#2-游戏需求与流程" class="headerlink" title="2. 游戏需求与流程"></a>2. 游戏需求与流程</h1><div align=center><img src="需求.svg" alt="游戏需求与流程" width="80%" /></div><h1 id="3-美术资源设计"><a href="#3-美术资源设计" class="headerlink" title="3. 美术资源设计"></a>3. 美术资源设计</h1><h2 id="3-1-按钮设计"><a href="#3-1-按钮设计" class="headerlink" title="3.1 按钮设计"></a>3.1 按钮设计</h2><p>按钮与游戏标题保持风格一致性，大部分为手绘风格，并使用鲜明的颜色。由于本游戏是针对安卓平台开发的，因此按钮只需要常规与Press状态，Press状态大多使用阴影表现。</p><div align=center><p><img src="image-20200519173341258.png" alt="按钮设计图"></p></div><h2 id="3-2-页面设计"><a href="#3-2-页面设计" class="headerlink" title="3.2 页面设计"></a>3.2 页面设计</h2><p>按页面整体均为卡通手绘风格，使游戏能够有较大的用户群体。</p><div align=center><p><img src="image-20200519174344081.png" alt="游戏主页面"></p><p><img src="image-20200519174353151.png" alt="设置页面"></p><p><img src="image-20200519174403714.png" alt="帮助页面1"></p><p><img src="image-20200519174411958.png" alt="帮助页面2"></p><p><img src="image-20200519174420298.png" alt="帮助页面3"></p><p><img src="image-20200519174428698.png" alt="关卡选择页面"></p><p><img src="image-20200519173952073.png" alt="游戏界面"></p><p><img src="image-20200519174007004.png" alt="菜单页面"></p><p><img src="image-20200519174014180.png" alt="失败页面"></p><p><img src="image-20200519174020112.png" alt="胜利页面"></p></div><h1 id="4-游戏设计模式与玩法机制"><a href="#4-游戏设计模式与玩法机制" class="headerlink" title="4. 游戏设计模式与玩法机制"></a>4. 游戏设计模式与玩法机制</h1><h2 id="4-1-设计模式"><a href="#4-1-设计模式" class="headerlink" title="4.1 设计模式"></a>4.1 设计模式</h2><p>本游戏综合使用了多种游戏设计模式。包括单例模式、工厂模式、对象池模式、外观模式、中介者模式、建造者模式、责任链模式。</p><ol><li><strong>单例模式：</strong>单例模式是一种常见的设计模式，具有以下特点：单例类只能有一个实例、单例类必须自己创建自己的唯一实例、单例类必须给所有其他对象提供这一实例。单例模式为一个面向对象的应用程序提供了对象惟一的访问点，不管它实现何种功能，整个应用程序都会同享一个实例对象。</li><li><strong>工厂模式：</strong>工厂模式主要是为创建对象提供过渡接口，以便将创建对象的具体过程屏蔽隔离起来，达到提高灵活性的目的。</li><li><strong>对象池模式：</strong>对象池技术在第一次创建的时候就将对象存储在一个池子中，当需要销毁的时候不直接销毁而是隐藏，当需要时在再次使用，就不需要再次实例化一个新的对象，直接把隐藏的对象显示并拿出来用。如果对象池中已经被隐藏的物体太久没有被重新使用，应该被真正的销毁。</li><li><strong>外观模式：</strong>外观模式中，一个子系统的外部与其内部的通信通过一个统一的外观类进行，外观类将客户类与子系统的内部复杂性分隔开，使得客户类只需要与外观角色打交道，而不需要与子系统内部的很多对象打交道。</li><li><strong>中介者模式：</strong>中介者模式是一种比较常用的模式,一个中介者对象封装一系列的对象交互，中介者使各对象不需要显示地相互作用，从而使耦合松散，而且可以独立地改变它们之间的交互。</li><li><strong>建造者模式**</strong>：**建造者模式是将一个复杂的对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。</li><li><strong>责任链模式：</strong>责任链模式使多个对象都有机会处理请求，从而避免请求的发送者和接受者之间的耦合关系，将这个对象连成一条链，并沿着这条链传递该请求，直到有一个对象处理他为止。</li></ol><h2 id="4-2-玩法机制"><a href="#4-2-玩法机制" class="headerlink" title="4.2 玩法机制"></a>4.2 玩法机制</h2><p>游戏初始状态下玩家拥有<code>800枚金币</code>，且有<code>10点生命值</code>。当玩家金币不足以建塔时玩家可以通过击杀病毒或打开场景中的道具来获得金币；病毒每个成功入侵玩家的生命值将会减少1点，生命值为0则游戏失败并结束。当玩家成功击退所有波次的病毒则获胜。</p><p><strong>- 病毒等级数值：</strong></p><table><thead><tr><th align="center"><strong>ID/等级</strong></th><th align="center"><strong>病毒</strong></th><th align="center"><strong>生命值</strong></th><th align="center"><strong>移动速度</strong></th><th align="center"><strong>击杀奖励</strong></th></tr></thead><tbody><tr><td align="center">1</td><td align="center"><img src="image-20200519174750301.png" /></td><td align="center">100</td><td align="center">1</td><td align="center">50</td></tr><tr><td align="center">2</td><td align="center"><img src="image-20200519174942440.png" /></td><td align="center">200</td><td align="center">2</td><td align="center">100</td></tr><tr><td align="center">3</td><td align="center"><img src="image-20200519174945621.png" /></td><td align="center">300</td><td align="center">3</td><td align="center">150</td></tr><tr><td align="center">4</td><td align="center"><img src="image-20200519174948003.png" /></td><td align="center">400</td><td align="center">4</td><td align="center">200</td></tr><tr><td align="center">5</td><td align="center"><img src="image-20200519174950750.png" /></td><td align="center">500</td><td align="center">5</td><td align="center">250</td></tr><tr><td align="center">6</td><td align="center"><img src="image-20200519174953130.png" /></td><td align="center">600</td><td align="center">6</td><td align="center">300</td></tr></tbody></table><p><strong>-</strong> <strong>炮塔等级数值：</strong> 根据防疫物品的特征：口罩有阻挡新冠病毒传播的能力，而84消毒液、75%医用酒精、含酒精洗手液有杀死病毒的能力。按照这些特征来设定游戏中塔的能力。</p><div align=center><p><img src="image-20200519180402292.png" alt="炮塔ID"></p></div><table><thead><tr><th align="center"><strong>ID</strong></th><th align="center"><strong>等级</strong></th><th align="center"><strong>建塔价格</strong></th><th align="center"><strong>卖出价格</strong></th><th align="center"><strong>攻击CD</strong></th><th align="center"><strong>攻击范围</strong></th><th align="center"><strong>攻击速度</strong></th><th align="center"><strong>攻击伤害</strong></th><th align="center"><strong>攻击Buff</strong></th></tr></thead><tbody><tr><td align="center">1</td><td align="center">1</td><td align="center">100</td><td align="center">50</td><td align="center">1.5</td><td align="center">2</td><td align="center">2</td><td align="center">50</td><td align="center">0.12</td></tr><tr><td align="center"></td><td align="center">2</td><td align="center">150</td><td align="center">75</td><td align="center">1</td><td align="center">4</td><td align="center">3</td><td align="center">60</td><td align="center">0.48</td></tr><tr><td align="center"></td><td align="center">3</td><td align="center">225</td><td align="center">113</td><td align="center">0.8</td><td align="center">6</td><td align="center">4</td><td align="center">80</td><td align="center">1.08</td></tr><tr><td align="center">2</td><td align="center">1</td><td align="center">120</td><td align="center">60</td><td align="center">1</td><td align="center">2</td><td align="center">3</td><td align="center">50</td><td align="center">0.12</td></tr><tr><td align="center"></td><td align="center">2</td><td align="center">180</td><td align="center">90</td><td align="center">0.8</td><td align="center">4</td><td align="center">4</td><td align="center">60</td><td align="center">0.48</td></tr><tr><td align="center"></td><td align="center">3</td><td align="center">270</td><td align="center">135</td><td align="center">0.6</td><td align="center">6</td><td align="center">5</td><td align="center">100</td><td align="center">1.08</td></tr><tr><td align="center">3</td><td align="center">1</td><td align="center">140</td><td align="center">70</td><td align="center">2</td><td align="center">2</td><td align="center">5</td><td align="center">50</td><td align="center">-</td></tr><tr><td align="center"></td><td align="center">2</td><td align="center">150</td><td align="center">75</td><td align="center">1.5</td><td align="center">4</td><td align="center">6</td><td align="center">60</td><td align="center">-</td></tr><tr><td align="center"></td><td align="center">3</td><td align="center">225</td><td align="center">136</td><td align="center">1</td><td align="center">4</td><td align="center">7</td><td align="center">80</td><td align="center">-</td></tr><tr><td align="center">4</td><td align="center">1</td><td align="center">160</td><td align="center">80</td><td align="center">1.5</td><td align="center">2</td><td align="center">6</td><td align="center">70</td><td align="center">-</td></tr><tr><td align="center"></td><td align="center">2</td><td align="center">240</td><td align="center">120</td><td align="center">1.1</td><td align="center">4</td><td align="center">7</td><td align="center">80</td><td align="center">-</td></tr><tr><td align="center"></td><td align="center">3</td><td align="center">360</td><td align="center">180</td><td align="center">0.9</td><td align="center">6</td><td align="center">7</td><td align="center">100</td><td align="center">-</td></tr><tr><td align="center">5</td><td align="center">1</td><td align="center">160</td><td align="center">80</td><td align="center">1.2</td><td align="center">7</td><td align="center">2</td><td align="center">70</td><td align="center">-</td></tr><tr><td align="center"></td><td align="center">2</td><td align="center">240</td><td align="center">120</td><td align="center">1</td><td align="center">8</td><td align="center">3</td><td align="center">80</td><td align="center">-</td></tr><tr><td align="center"></td><td align="center">3</td><td align="center">360</td><td align="center">180</td><td align="center">0.8</td><td align="center">9</td><td align="center">4</td><td align="center">90</td><td align="center">-</td></tr></tbody></table><p><em>（buff为减速buff，表中的buff值由减速大小×减速时长的结果）</em></p><p><strong>-</strong> <strong>道具：</strong>游戏中道具的血量为800，打开道具后可获得1000金币的奖励，并且原来被道具占据的位置也可进行建塔操作。</p><p><strong>-</strong> <strong>集火：</strong>玩家可选定集火目标，目标可以是病毒和道具。选定目标后在防御塔的攻击范围内的塔会对目标进行集火攻击。</p><p><strong>-</strong> <strong>自动攻击：</strong>防御塔会自动攻击并跟踪进入其攻击范围内的病毒，可以通过升级塔来扩大攻击范围等能力。</p><p><strong>-</strong> <strong>防御塔操作：</strong>玩家可以在规定区域内建塔，其中道具所在位置和怪物入侵道路不可建塔。点击需要建塔的位置将展开建塔列表，再次点击可以收起建塔列表。点击已建的防御塔可以查看该塔目前是否可以升级，同时也可以看到塔的攻击范围。此外，玩家可以点击暂停后进行建塔，建塔完成后再点击继续。</p><p><strong>-</strong> <strong>病毒入侵：</strong>每波病毒只会在上一波病毒以完全消灭/成功入侵后开始入侵。</p><h1 id="5-UML图"><a href="#5-UML图" class="headerlink" title="5. UML图"></a>5. UML图</h1><div align=center><img src="UML1.svg" alt="UML1" style="zoom:80%;" /><img src="UML2.svg" alt="UML2" style="zoom:80%;" /><img src="UML3.svg" alt="UML3" style="zoom:80%;" /><img src="UML4.svg" alt="UML4" style="zoom:80%;" /><img src="UML5.svg" alt="UML5" style="zoom:80%;" /></div><h1 id="6-UI部分技术总结"><a href="#6-UI部分技术总结" class="headerlink" title="6. UI部分技术总结"></a>6. UI部分技术总结</h1><p>因为整个游戏项目的代码比较多，所以就只总结一些复用性比较高的部分内容。</p><h2 id="6-1-DoTween插件的缓动函数"><a href="#6-1-DoTween插件的缓动函数" class="headerlink" title="6.1 DoTween插件的缓动函数"></a>6.1 DoTween插件的缓动函数</h2><p>本游戏使用 DoTween插件来配置UI动画，缓动函数指定动画效果在执行时的速度，用于控制动画从初始值运动到最终值的速率。</p><p>DoTween的其他内容在上一篇文章已经总结过了，这里就不再赘述了。</p><h2 id="6-2-Scroll-Rect组件"><a href="#6-2-Scroll-Rect组件" class="headerlink" title="6.2 Scroll Rect组件"></a>6.2 Scroll Rect组件</h2><p>游戏中的帮助页面与选择关卡界面都使用了<code>Scroll View 组件</code>。在Scroll View中，当需要在小区域显示占用大量空间的内容时，可以使用<code>Scroll Rect</code>。滚动矩形提供了滚动浏览此内容的功能。</p><ul><li>Content：这是对用户界面要滚动的元素，例如大图像。</li><li>Horizontal/ Vertical：启用水平/垂直滚动。</li><li>Movement Type：无限制，弹性或夹紧。使用“弹性”或“夹紧”可将内容强制保留在“滚动矩形”的范围内。弹性模式在到达滚动矩形的边缘时会反弹内容。</li><li>Elasticity：弹性模式下使用的弹跳量。</li><li>Inertia：设置惯性后，拖动鼠标后释放指针，内容将继续移动。如果未设置惯性，则内容仅在拖动时才会移动。<strong>当使用DoTween插件来配置滚动动画时会产生冲突，需要关闭该选项。</strong></li><li>Deceleration Rate：设置惯性后，减速率将决定对象停止移动的速度。0将立即停止运动。值为1表示运动永远不会减速。</li><li>Scroll Sensitivity：对滚轮和触控板滚动事件的敏感性。</li><li>Viewport：引用作为内容Rect变换父级的视口Rect变换。</li><li>Scrollbar：对滚动条元素的可选引用，可以设置滚动条的隐藏属性和滚动条与视口的空间大小。</li></ul><h2 id="6-3-GridLayoutGroup组件"><a href="#6-3-GridLayoutGroup组件" class="headerlink" title="6.3 GridLayoutGroup组件"></a>6.3 GridLayoutGroup组件</h2><p>游戏中的帮助页面与选择关卡界面都使用了Scroll View 组件。在Scroll View的Content中通常会使用GridLayoutGroup组件来使内容的填充更有序。</p><ul><li>Cell Size：Content中每个单位的宽高；</li><li>Spacing：每个单位的间隔；</li><li>Start Corner：开始的位置，如Upper Left则为从左上角开始排列；</li><li>Start Axis：排列形式，分为水平排列和垂直排列；</li><li>Child Alignment：排列方式，如Upper Center则为居中靠上排列；</li><li>Constraint：约束，可选择行约束、列约束和无约束；</li><li>Padding：Content整体偏移量。</li></ul><h2 id="6-4-翻页效果的实现思路"><a href="#6-4-翻页效果的实现思路" class="headerlink" title="6.4 翻页效果的实现思路"></a>6.4 翻页效果的实现思路</h2><p>游戏中的帮助页面与选择关卡界面都需要实现翻页效果。是要翻一页或者多页，使用的方法是让ScrollView用它自身长度的单位化比例来实现。为实现这个需求我们首先需要：</p><p>①content的总长</p><p>②玩家鼠标的开始位置与结束位置，并根据开始滑动与结束滑动的事件方式计算差值。若开始位置-结束位置&gt;0，则右滑；若开始位置-结束位置&lt;0，则左滑。通过差值来决定滑动几个单元格。</p><p>③移动一个单元格玩家鼠标需要滑动的距离<strong>（一个单元格长度+左偏移量）</strong>。</p><p>④移动多个单元格玩家鼠标需要滑动的距离。其中<strong>第一个是单元格长度+左偏移量，之后的每一个滑动都是单元格长度+间隔。</strong></p><p>⑤滑动一个单元格所占的比例，可通过<strong>一个单元格所在位置中点的长度/Content的总长度</strong>得到。其中上限值与下限值为防止超过我们的最小长度与最大长度。</p><p>最后，可以推算出Content宽度与单元格长度与数量的<code>关系式</code>：</p><p><strong>宽度=原来的宽度+（每一个单元格长度+间隙）*（单元格数量-1）</strong></p><h2 id="6-5-单页效果的实现"><a href="#6-5-单页效果的实现" class="headerlink" title="6.5 单页效果的实现"></a>6.5 单页效果的实现</h2><p>本游戏中，翻页效果的实现分为<code>单页效果</code>（每次只能滑动一个页面）和<code>多页效果</code>（一次可以滑动多个页面）。其中单页效果通过使用<strong>改变局部坐标</strong>的方法实现脚本的成员变量来实现。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line">using UnityEngine.UI;</span><br><span class="line">using UnityEngine.EventSystems;</span><br><span class="line">using DG.Tweening;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">&#x2F;&#x2F;&#x2F; 单滑</span><br><span class="line">&#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">public class SlideScrollView : MonoBehaviour,IBeginDragHandler,IEndDragHandler &#123;</span><br><span class="line"></span><br><span class="line">    private RectTransform contentTrans;</span><br><span class="line">    private float beginMousePositionX;</span><br><span class="line">    private float endMousePositionX;</span><br><span class="line">    private ScrollRect scrollRect;</span><br><span class="line"></span><br><span class="line">    public int cellLength;</span><br><span class="line">    public int spacing;</span><br><span class="line">    public int leftOffset;</span><br><span class="line">    private float moveOneItemLength;</span><br><span class="line"></span><br><span class="line">    private Vector3 currentContentLocalPos;&#x2F;&#x2F;上一次的位置</span><br><span class="line">    private Vector3 contentInitPos;&#x2F;&#x2F;Content初始位置</span><br><span class="line">    private Vector2 contentTransSize;&#x2F;&#x2F;Content初始大小</span><br><span class="line"></span><br><span class="line">    public int totalItemNum;</span><br><span class="line">    private int currentIndex;</span><br><span class="line"></span><br><span class="line">    public Text pageText;</span><br><span class="line"></span><br><span class="line">    public bool needSendMessage;</span><br><span class="line"></span><br><span class="line">    private void Awake()</span><br><span class="line">    &#123;</span><br><span class="line">        scrollRect &#x3D; GetComponent&lt;ScrollRect&gt;();</span><br><span class="line">        contentTrans &#x3D; scrollRect.content;</span><br><span class="line">        moveOneItemLength &#x3D; cellLength + spacing;</span><br><span class="line">        currentContentLocalPos &#x3D; contentTrans.localPosition;</span><br><span class="line">        contentTransSize &#x3D; contentTrans.sizeDelta;</span><br><span class="line">        contentInitPos &#x3D; contentTrans.localPosition;</span><br><span class="line">        currentIndex &#x3D; 1;</span><br><span class="line">        if (pageText !&#x3D; null)</span><br><span class="line">        &#123;</span><br><span class="line">            pageText.text &#x3D; currentIndex.ToString() + &quot;&#x2F;&quot; + totalItemNum;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void Init()</span><br><span class="line">    &#123;</span><br><span class="line">        currentIndex &#x3D; 1;</span><br><span class="line">       </span><br><span class="line">        if (contentTrans!&#x3D;null)</span><br><span class="line">        &#123;</span><br><span class="line">            contentTrans.localPosition &#x3D; contentInitPos;</span><br><span class="line">            currentContentLocalPos &#x3D; contentInitPos;</span><br><span class="line">            if (pageText !&#x3D; null)</span><br><span class="line">            &#123;</span><br><span class="line">                pageText.text &#x3D; currentIndex.ToString() + &quot;&#x2F;&quot; + totalItemNum;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">    &#x2F;&#x2F;&#x2F; 通过拖拽与松开来达成翻页效果</span><br><span class="line">    &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">    &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;eventData&quot;&gt;&lt;&#x2F;param&gt;</span><br><span class="line"></span><br><span class="line">    public void OnEndDrag(PointerEventData eventData)</span><br><span class="line">    &#123;</span><br><span class="line">        endMousePositionX &#x3D; Input.mousePosition.x;</span><br><span class="line">        float offSetX &#x3D; 0;</span><br><span class="line">        float moveDistance &#x3D; 0;&#x2F;&#x2F;当次需要滑动的距离</span><br><span class="line">        offSetX &#x3D; beginMousePositionX - endMousePositionX;</span><br><span class="line"></span><br><span class="line">        if (offSetX&gt;0)&#x2F;&#x2F;右滑</span><br><span class="line">        &#123;</span><br><span class="line">            if (currentIndex&gt;&#x3D;totalItemNum)</span><br><span class="line">            &#123;</span><br><span class="line">                return;</span><br><span class="line">            &#125;</span><br><span class="line">            if (needSendMessage)</span><br><span class="line">            &#123;</span><br><span class="line">                UpdatePanel(true);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            moveDistance &#x3D; -moveOneItemLength;</span><br><span class="line">            currentIndex++;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#x2F;&#x2F;左滑</span><br><span class="line">        &#123;</span><br><span class="line">            if (currentIndex&lt;&#x3D;1)</span><br><span class="line">            &#123;</span><br><span class="line">                return;</span><br><span class="line">            &#125;</span><br><span class="line">            if (needSendMessage)</span><br><span class="line">            &#123;</span><br><span class="line">                UpdatePanel(false);</span><br><span class="line">            &#125;</span><br><span class="line">            moveDistance &#x3D; moveOneItemLength;</span><br><span class="line">            currentIndex--;</span><br><span class="line">        &#125;</span><br><span class="line">        if (pageText !&#x3D; null)</span><br><span class="line">        &#123;</span><br><span class="line">            pageText.text &#x3D; currentIndex.ToString() + &quot;&#x2F;&quot; + totalItemNum;</span><br><span class="line">        &#125;</span><br><span class="line">        DOTween.To(()&#x3D;&gt;contentTrans.localPosition,lerpValue&#x3D;&gt;contentTrans.localPosition&#x3D;lerpValue,currentContentLocalPos+new Vector3(moveDistance,0,0),0.5f).SetEase(Ease.OutQuint);</span><br><span class="line">        currentContentLocalPos +&#x3D; new Vector3(moveDistance, 0, 0);</span><br><span class="line">        &#x2F;&#x2F;只能存在于此项目</span><br><span class="line">        GameManager.Instance.audioSourceManager.PlayPagingAudioClip();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">    &#x2F;&#x2F;&#x2F; 按钮来控制翻书效果</span><br><span class="line">    &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line"></span><br><span class="line">    public void ToNextPage()</span><br><span class="line">    &#123;</span><br><span class="line">        float moveDistance &#x3D; 0;</span><br><span class="line">        if (currentIndex&gt;&#x3D;totalItemNum)</span><br><span class="line">        &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        moveDistance &#x3D; -moveOneItemLength;</span><br><span class="line">        currentIndex++;</span><br><span class="line">        if (pageText!&#x3D;null)</span><br><span class="line">        &#123;</span><br><span class="line">            pageText.text &#x3D; currentIndex.ToString() + &quot;&#x2F;&quot; + totalItemNum;</span><br><span class="line">        &#125;</span><br><span class="line">        if (needSendMessage)</span><br><span class="line">        &#123;</span><br><span class="line">            UpdatePanel(true);</span><br><span class="line">        &#125;</span><br><span class="line">        DOTween.To(() &#x3D;&gt; contentTrans.localPosition, lerpValue &#x3D;&gt; contentTrans.localPosition &#x3D; lerpValue, currentContentLocalPos + new Vector3(moveDistance, 0, 0), 0.5f).SetEase(Ease.OutQuint);</span><br><span class="line">        currentContentLocalPos +&#x3D; new Vector3(moveDistance, 0, 0);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void ToLastPage()</span><br><span class="line">    &#123;</span><br><span class="line">        float moveDistance &#x3D; 0;</span><br><span class="line">        if (currentIndex &lt;&#x3D;1)</span><br><span class="line">        &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        moveDistance &#x3D; moveOneItemLength;</span><br><span class="line">        currentIndex--;</span><br><span class="line">        if (pageText !&#x3D; null)</span><br><span class="line">        &#123;</span><br><span class="line">            pageText.text &#x3D; currentIndex.ToString() + &quot;&#x2F;&quot; + totalItemNum;</span><br><span class="line">        &#125;</span><br><span class="line">        if (needSendMessage)</span><br><span class="line">        &#123;</span><br><span class="line">            UpdatePanel(false);</span><br><span class="line">        &#125;</span><br><span class="line">        DOTween.To(() &#x3D;&gt; contentTrans.localPosition, lerpValue &#x3D;&gt; contentTrans.localPosition &#x3D; lerpValue, currentContentLocalPos + new Vector3(moveDistance, 0, 0), 0.5f).SetEase(Ease.OutQuint);</span><br><span class="line">        currentContentLocalPos +&#x3D; new Vector3(moveDistance, 0, 0);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void OnBeginDrag(PointerEventData eventData)</span><br><span class="line">    &#123;</span><br><span class="line">        beginMousePositionX &#x3D; Input.mousePosition.x;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;设置Content的大小</span><br><span class="line">    public void SetContentLength(int itemNum)</span><br><span class="line">    &#123;</span><br><span class="line">        contentTrans.sizeDelta &#x3D; new Vector2(contentTrans.sizeDelta.x+(cellLength+spacing)*(itemNum-1),contentTrans.sizeDelta.y);</span><br><span class="line">        totalItemNum &#x3D; itemNum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;初始化Content的大小</span><br><span class="line">    public void InitScrollLength()</span><br><span class="line">    &#123;</span><br><span class="line">        contentTrans.sizeDelta &#x3D; contentTransSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;发送翻页信息的方法</span><br><span class="line">    public void UpdatePanel(bool toNext)</span><br><span class="line">    &#123;</span><br><span class="line">        if (toNext)</span><br><span class="line">        &#123;</span><br><span class="line">            gameObject.SendMessageUpwards(&quot;ToNextLevel&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            gameObject.SendMessageUpwards(&quot;ToLastLevel&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-6-多页效果的实现"><a href="#6-6-多页效果的实现" class="headerlink" title="6.6 多页效果的实现"></a>6.6 多页效果的实现</h2><p>本游戏中，翻页效果的实现分为<code>单页效果</code>（每次只能滑动一个页面）和<code>多页效果</code>（一次可以滑动多个页面）。其中多页效果通过使用<strong>比例</strong>方法来实现。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line">using UnityEngine.UI;</span><br><span class="line">using UnityEngine.EventSystems;</span><br><span class="line">using DG.Tweening;</span><br><span class="line"></span><br><span class="line">public class SlideCanCoverScrollView : MonoBehaviour,IBeginDragHandler,IEndDragHandler &#123;</span><br><span class="line"></span><br><span class="line">    private float contentLength;&#x2F;&#x2F;容器长度</span><br><span class="line">    private float beginMousePostionX;</span><br><span class="line">    private float endMousePositionX;</span><br><span class="line">    private ScrollRect scrollRect;</span><br><span class="line">    private float lastProportion;&#x2F;&#x2F;上一个位置比例</span><br><span class="line"></span><br><span class="line">    public int cellLength;&#x2F;&#x2F;每个单元格长度</span><br><span class="line">    public int spacing;&#x2F;&#x2F;间隙</span><br><span class="line">    public int leftOffset;&#x2F;&#x2F;左偏移量</span><br><span class="line">    private float upperLimit;&#x2F;&#x2F;上限值</span><br><span class="line">    private float lowerLimit;&#x2F;&#x2F;下限值</span><br><span class="line">    private float firstItemLength;&#x2F;&#x2F;移动第一个单元格的距离</span><br><span class="line">    private float oneItemLength;&#x2F;&#x2F;滑动一个单元格需要的距离</span><br><span class="line">    private float oneItemProportion;&#x2F;&#x2F;滑动一个单元格所占比例</span><br><span class="line"></span><br><span class="line">    public int totalItemNum;&#x2F;&#x2F;共有几个单元格</span><br><span class="line">    private int currentIndex;&#x2F;&#x2F;当前单元格索引</span><br><span class="line"></span><br><span class="line">    public Text pageText;</span><br><span class="line"></span><br><span class="line">    private void Awake()</span><br><span class="line">    &#123;</span><br><span class="line">        scrollRect &#x3D; GetComponent&lt;ScrollRect&gt;();</span><br><span class="line">        contentLength &#x3D; scrollRect.content.rect.xMax - 2 * leftOffset - cellLength;</span><br><span class="line">        firstItemLength &#x3D; cellLength &#x2F; 2 + leftOffset;</span><br><span class="line">        oneItemLength &#x3D; cellLength + spacing;</span><br><span class="line">        oneItemProportion &#x3D; oneItemLength &#x2F; contentLength;</span><br><span class="line">        upperLimit&#x3D;1- firstItemLength &#x2F; contentLength;</span><br><span class="line">        lowerLimit &#x3D; firstItemLength &#x2F; contentLength;</span><br><span class="line">        currentIndex &#x3D; 1;</span><br><span class="line">        scrollRect.horizontalNormalizedPosition &#x3D; 0;</span><br><span class="line">        if (pageText !&#x3D; null)</span><br><span class="line">        &#123;</span><br><span class="line">            pageText.text &#x3D; currentIndex.ToString() + &quot;&#x2F;&quot; + totalItemNum;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void Init()</span><br><span class="line">    &#123;           </span><br><span class="line">        lastProportion &#x3D; 0;</span><br><span class="line">        currentIndex &#x3D; 1;</span><br><span class="line">        if (scrollRect !&#x3D; null)</span><br><span class="line">        &#123;</span><br><span class="line">            scrollRect.horizontalNormalizedPosition &#x3D; 0;</span><br><span class="line">            pageText.text &#x3D; currentIndex.ToString() + &quot;&#x2F;&quot; + totalItemNum;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    public void OnEndDrag(PointerEventData eventData)</span><br><span class="line">    &#123;</span><br><span class="line">        float offSetX &#x3D; 0;</span><br><span class="line">        endMousePositionX &#x3D; Input.mousePosition.x;</span><br><span class="line">        offSetX &#x3D; (beginMousePostionX - endMousePositionX)*2;</span><br><span class="line">        &#x2F;&#x2F;Debug.Log(&quot;offSetX:&quot; + offSetX);</span><br><span class="line">        &#x2F;&#x2F;Debug.Log(&quot;firstItemLength:&quot; + firstItemLength);</span><br><span class="line">        if (Mathf.Abs(offSetX)&gt;firstItemLength)&#x2F;&#x2F;执行滑动动作的前提是要大于第一个需要滑动的距离</span><br><span class="line">        &#123;</span><br><span class="line">            if (offSetX&gt;0)&#x2F;&#x2F;右滑</span><br><span class="line">            &#123;</span><br><span class="line">                if (currentIndex&gt;&#x3D;totalItemNum)</span><br><span class="line">                &#123;</span><br><span class="line">                    return;</span><br><span class="line">                &#125;</span><br><span class="line">                int moveCount &#x3D; </span><br><span class="line">                    (int)((offSetX - firstItemLength) &#x2F; oneItemLength) + 1;&#x2F;&#x2F;当次可以移动的格子数目</span><br><span class="line">                currentIndex +&#x3D; moveCount;</span><br><span class="line">                if (currentIndex&gt;&#x3D;totalItemNum)</span><br><span class="line">                &#123;</span><br><span class="line">                    currentIndex &#x3D; totalItemNum;</span><br><span class="line">                &#125;</span><br><span class="line">                &#x2F;&#x2F;当次需要移动的比例:上一次已经存在的单元格位置</span><br><span class="line">                &#x2F;&#x2F;的比例加上这一次需要去移动的比例</span><br><span class="line">                lastProportion +&#x3D; oneItemProportion * moveCount;</span><br><span class="line">                if (lastProportion&gt;&#x3D;upperLimit)</span><br><span class="line">                &#123;</span><br><span class="line">                    lastProportion &#x3D; 1;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            else &#x2F;&#x2F;左滑</span><br><span class="line">            &#123;</span><br><span class="line">                if (currentIndex &lt;&#x3D;1)</span><br><span class="line">                &#123;</span><br><span class="line">                    return;</span><br><span class="line">                &#125;</span><br><span class="line">                int moveCount &#x3D;</span><br><span class="line">                    (int)((offSetX + firstItemLength) &#x2F; oneItemLength) - 1;&#x2F;&#x2F;当次可以移动的格子数目</span><br><span class="line">                currentIndex +&#x3D; moveCount;</span><br><span class="line">                if (currentIndex &lt;&#x3D;1)</span><br><span class="line">                &#123;</span><br><span class="line">                    currentIndex &#x3D; 1;</span><br><span class="line">                &#125;</span><br><span class="line">                &#x2F;&#x2F;当次需要移动的比例:上一次已经存在的单元格位置</span><br><span class="line">                &#x2F;&#x2F;的比例加上这一次需要去移动的比例</span><br><span class="line">                lastProportion +&#x3D; oneItemProportion * moveCount;</span><br><span class="line">                if (lastProportion &lt;&#x3D; lowerLimit)</span><br><span class="line">                &#123;</span><br><span class="line">                    lastProportion &#x3D; 0;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            if (pageText!&#x3D;null)</span><br><span class="line">            &#123;</span><br><span class="line">                pageText.text &#x3D; currentIndex.ToString() + &quot;&#x2F;&quot; + totalItemNum;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        DOTween.To(() &#x3D;&gt; scrollRect.horizontalNormalizedPosition, lerpValue &#x3D;&gt; scrollRect.horizontalNormalizedPosition &#x3D; lerpValue, lastProportion, 0.5f).SetEase(Ease.OutQuint);</span><br><span class="line">        GameManager.Instance.audioSourceManager.PlayPagingAudioClip();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void OnBeginDrag(PointerEventData eventData)</span><br><span class="line">    &#123;</span><br><span class="line">        beginMousePostionX &#x3D; Input.mousePosition.x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-7-UI实例化"><a href="#6-7-UI实例化" class="headerlink" title="6.7 UI实例化"></a>6.7 UI实例化</h2><p>游戏中需要不断地将不同的UIPanel实例化到<code>Canvas</code>下进行显示。但是由于使用工厂模式，<em>在实例化时会遇到UIPanel先实例化到Hierarchy中再设置其父对象。此时UIPanel的锚点就不是以Canvas的大小为准。</em></p><p><strong>解决这个问题可以通过将锚点由原来的“包裹父对象”更改为“居中显示”，并在实例化时在设置其父对象为Canvas后将对应Panel的Pos改为0，Scale改为1即可解决。</strong></p><p>UIPanel通过添加到UI管理字典，实例化当前场景所有面板，并存入字典。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;实例化当前场景所有面板，并存入字典</span><br><span class="line">public void InitDict()</span><br><span class="line">&#123;</span><br><span class="line">    foreach (var item in mUIManager.currentScenePanelDict)</span><br><span class="line">    &#123;</span><br><span class="line">        item.Value.transform.SetParent(canvasTransform);</span><br><span class="line">        item.Value.transform.localPosition &#x3D; Vector3.zero;</span><br><span class="line">        item.Value.transform.localScale &#x3D; Vector3.one;</span><br><span class="line">        IBasePanel basePanel &#x3D; item.Value.GetComponent&lt;IBasePanel&gt;();</span><br><span class="line">        if (basePanel &#x3D;&#x3D; null)</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(&quot;获取面板上IBasePanel脚本失败&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        basePanel.InitPanel();</span><br><span class="line">        &#x2F;&#x2F;Debug.Log(item.Key);</span><br><span class="line">        currentScenePanelDict.Add(item.Key, basePanel);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;清空UIPanel字典</span><br><span class="line">public void ClearDict()</span><br><span class="line">&#123;</span><br><span class="line">    currentScenePanelDict.Clear();</span><br><span class="line">    mUIManager.ClearDict();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;添加UIPanel到UIManager字典</span><br><span class="line">public void AddPanelToDict(string uiPanelName)</span><br><span class="line">&#123;</span><br><span class="line">    mUIManager.currentScenePanelDict.Add(uiPanelName, GetGameObjectResource(FactoryType.UIPanelFactory, uiPanelName));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-8-克隆体名称问题与字符串截取"><a href="#6-8-克隆体名称问题与字符串截取" class="headerlink" title="6.8 克隆体名称问题与字符串截取"></a>6.8 克隆体名称问题与字符串截取</h2><p>游戏中实例化对象时，Instance方法会使用Perfabs的克隆体。因此实例化的对象会有(Clone)的后缀，在将对象放回对象池时会产生报空操作。解决这个问题的方法只需要对对象的名称进行截取，使用Substring()函数即可解决。</p><p>Substring的使用方法有两种：</p><ul><li>一是<strong>Substring(int startIndex)</strong> ，子字符串从指定的字符位置（第startIndex个字符）开始，一直到此字符串末尾。</li><li>二是<strong>Substring(int startIndex, int length)</strong>，子字符串从指定的字符位置第startIndex个字符）开始，且具有指定的长度（子字符串的长度length）。</li></ul><h2 id="6-9-控制渲染顺序"><a href="#6-9-控制渲染顺序" class="headerlink" title="6.9 控制渲染顺序"></a>6.9 控制渲染顺序</h2><p>游戏中直接通过工厂实例化的对象的渲染顺序会出现错误的遮挡关系，可以通过Transform.SetSiblingIndex(i)来控制渲染顺序。<strong>I越大则对象越后渲染。</strong></p><h2 id="6-10-主面板的左右移动动画"><a href="#6-10-主面板的左右移动动画" class="headerlink" title="6.10 主面板的左右移动动画"></a>6.10 主面板的左右移动动画</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line">using DG.Tweening;</span><br><span class="line"></span><br><span class="line">public class MainPanel : BasePanel &#123;</span><br><span class="line">    </span><br><span class="line">    private Tween[] mainPanelTween;&#x2F;&#x2F;0.右，1.左</span><br><span class="line">    private Tween ExitTween;&#x2F;&#x2F;离开主页运行的动画</span><br><span class="line"></span><br><span class="line">    protected override void Awake()</span><br><span class="line">    &#123;</span><br><span class="line">        base.Awake();</span><br><span class="line">        &#x2F;&#x2F;获取成员变量</span><br><span class="line">        transform.SetSiblingIndex(8);</span><br><span class="line"></span><br><span class="line">        mainPanelTween &#x3D; new Tween[2];</span><br><span class="line">        mainPanelTween[0] &#x3D; transform.DOLocalMoveX(1920, 0.5f);</span><br><span class="line">        mainPanelTween[0].SetAutoKill(false);</span><br><span class="line">        mainPanelTween[0].Pause();</span><br><span class="line">        mainPanelTween[1] &#x3D; transform.DOLocalMoveX(-1920, 0.5f);</span><br><span class="line">        mainPanelTween[1].SetAutoKill(false);</span><br><span class="line">        mainPanelTween[1].Pause();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public override void EnterPanel()</span><br><span class="line">    &#123;</span><br><span class="line">        transform.SetSiblingIndex(8);</span><br><span class="line">        if (ExitTween !&#x3D; null)</span><br><span class="line">        &#123;</span><br><span class="line">            ExitTween.PlayBackwards();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public override void ExitPanel()</span><br><span class="line">    &#123;</span><br><span class="line">        ExitTween.PlayForward();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    public void MoveToRight()</span><br><span class="line">    &#123;</span><br><span class="line">        mUIFacade.PlayButtonAudioClip();</span><br><span class="line">        ExitTween &#x3D; mainPanelTween[0];</span><br><span class="line">        mUIFacade.currentScenePanelDict[StringManager.SetPanel].EnterPanel();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void MoveToLeft()</span><br><span class="line">    &#123;</span><br><span class="line">        mUIFacade.PlayButtonAudioClip();</span><br><span class="line">        ExitTween &#x3D; mainPanelTween[1];</span><br><span class="line">        mUIFacade.currentScenePanelDict[StringManager.HelpPanel].EnterPanel();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;&#x2F;&#x2F;场景状态切换的方法</span><br><span class="line"></span><br><span class="line">    public void ToNormalModelScene()</span><br><span class="line">    &#123;</span><br><span class="line">        mUIFacade.PlayButtonAudioClip();</span><br><span class="line">        mUIFacade.currentScenePanelDict[StringManager.GameLoadPanel].EnterPanel();</span><br><span class="line">        mUIFacade.ChangeSceneState(new NormalGameOptionSceneState(mUIFacade));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-11-帮助面板的页面切换"><a href="#6-11-帮助面板的页面切换" class="headerlink" title="6.11 帮助面板的页面切换"></a>6.11 帮助面板的页面切换</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line">using DG.Tweening;</span><br><span class="line">using UnityEngine.SceneManagement;</span><br><span class="line"></span><br><span class="line">public class HelpPanel : BasePanel &#123;</span><br><span class="line"></span><br><span class="line">    private GameObject helpPageGo;</span><br><span class="line">    private GameObject covidPageGo;</span><br><span class="line">    private GameObject defendPageGo;</span><br><span class="line">    private SlideScrollView slideScrollView;</span><br><span class="line">    private Tween helpPanelTween;</span><br><span class="line">    protected override void Awake()</span><br><span class="line">    &#123;</span><br><span class="line">        base.Awake();</span><br><span class="line">        helpPageGo &#x3D; transform.Find(&quot;HelpPage&quot;).gameObject;</span><br><span class="line">        covidPageGo &#x3D; transform.Find(&quot;CovidPage&quot;).gameObject;</span><br><span class="line">        defendPageGo &#x3D; transform.Find(&quot;DefendPage&quot;).gameObject;</span><br><span class="line">        slideScrollView &#x3D; transform.Find(&quot;HelpPage&quot;).Find(&quot;Scroll View&quot;).GetComponent&lt;SlideScrollView&gt;();</span><br><span class="line">        helpPanelTween &#x3D; transform.DOLocalMoveX(0, 0.5f);</span><br><span class="line">        helpPanelTween.SetAutoKill(false);</span><br><span class="line">        helpPanelTween.Pause();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;显示页面的方法</span><br><span class="line">    public void ShowHelpPage()</span><br><span class="line">    &#123;</span><br><span class="line">        if (!helpPageGo.activeSelf)</span><br><span class="line">        &#123;</span><br><span class="line">            mUIFacade.PlayButtonAudioClip();</span><br><span class="line">            helpPageGo.SetActive(true);</span><br><span class="line">        &#125;</span><br><span class="line">        covidPageGo.SetActive(false);</span><br><span class="line">        defendPageGo.SetActive(false);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void ShowCovidPage()</span><br><span class="line">    &#123;</span><br><span class="line">        mUIFacade.PlayButtonAudioClip();</span><br><span class="line">        helpPageGo.SetActive(false);</span><br><span class="line">        covidPageGo.SetActive(true);</span><br><span class="line">        defendPageGo.SetActive(false);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void ShowDefendPage()</span><br><span class="line">    &#123;</span><br><span class="line">        mUIFacade.PlayButtonAudioClip();</span><br><span class="line">        helpPageGo.SetActive(false);</span><br><span class="line">        covidPageGo.SetActive(false);</span><br><span class="line">        defendPageGo.SetActive(true);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;处理面板的方法</span><br><span class="line"></span><br><span class="line">    public override void InitPanel()</span><br><span class="line">    &#123;</span><br><span class="line">        base.InitPanel();</span><br><span class="line"></span><br><span class="line">        transform.SetSiblingIndex(5);</span><br><span class="line">        </span><br><span class="line">        slideScrollView.Init();</span><br><span class="line">        ShowHelpPage();</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;其他处理</span><br><span class="line">        if (transform.localPosition &#x3D;&#x3D; Vector3.zero)</span><br><span class="line">        &#123;</span><br><span class="line">            gameObject.SetActive(false);</span><br><span class="line">            helpPanelTween.PlayBackwards();</span><br><span class="line">        &#125;</span><br><span class="line">        transform.localPosition &#x3D; new Vector3(1920, 0, 0);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public override void EnterPanel()</span><br><span class="line">    &#123;</span><br><span class="line">        base.EnterPanel();</span><br><span class="line">        gameObject.SetActive(true);</span><br><span class="line">        slideScrollView.Init();</span><br><span class="line">        MoveToCenter();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public override void ExitPanel()</span><br><span class="line">    &#123;</span><br><span class="line">        base.ExitPanel();</span><br><span class="line">        mUIFacade.PlayButtonAudioClip();</span><br><span class="line">        &#x2F;&#x2F;选择场景</span><br><span class="line">        if (mUIFacade.currentSceneState.GetType() &#x3D;&#x3D; typeof(NormalGameOptionSceneState))</span><br><span class="line">        &#123;</span><br><span class="line">            mUIFacade.ChangeSceneState(new MainSceneState(mUIFacade));</span><br><span class="line">            SceneManager.LoadScene(1);</span><br><span class="line">        &#125;</span><br><span class="line">        else&#x2F;&#x2F;如果是在主场景</span><br><span class="line">        &#123;</span><br><span class="line">            helpPanelTween.PlayBackwards();</span><br><span class="line">            mUIFacade.currentScenePanelDict[StringManager.MainPanel].EnterPanel();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void MoveToCenter()</span><br><span class="line">    &#123;</span><br><span class="line">        helpPanelTween.PlayForward();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="7-制图工具的实现"><a href="#7-制图工具的实现" class="headerlink" title="7. 制图工具的实现"></a>7. 制图工具的实现</h1><p>为了能过在工程中更方便快捷的开发游戏关卡地图，自定义了一个制图工具并使用宏<code>（Tool）</code>来将工具代码和游戏<code>（Game）</code>代码进行区分。将游戏场景划为6行12列，并将绘制好的地图保存为json文件。</p><div align=center><p><img src="image-20200519182550972.png" alt="地图编辑"></p></div><p>单击地图中的格子将该位置设为不可建塔区域，按住P键单击地图中的格子将该位置设为病毒入侵路径（路径按照点击顺序，只需要在起始点和转角区域点击即可），按住I键单击地图中的格子将该位置设为道具位置，多次点击可以切换道具（道具1占据1格，道具2占据2格，道具3占据4格）。</p><div align=center><p><img src="image-20200519182614903.png" alt="地图编辑工具"></p></div><p>Level为当前编辑的地图关卡，可手动设置。Round Info List为病毒波次以及每波怪物的设置。编辑完当前关卡的地图后可点击“保存当前关卡数据”将关卡数据保存为json文件，保存后的关卡数据可以再次读取编辑。</p><h1 id="8-游戏主逻辑"><a href="#8-游戏主逻辑" class="headerlink" title="8. 游戏主逻辑"></a>8. 游戏主逻辑</h1><h2 id="8-1-产怪逻辑"><a href="#8-1-产怪逻辑" class="headerlink" title="8.1 产怪逻辑"></a>8.1 产怪逻辑</h2><ol><li>Level对象控制round责任链的执行。</li><li>具体产怪的逻辑是通过round去执行的，round里存有本回合需要产生的怪物数量与ID，之后会把这些内容传入GameController去调用Invoke方法延时。</li><li>循环产生病毒。(把产怪方法封装在CameContoller里，而不是直接在round里去完成这个方法的原因:①需要延时循坏调用方法InvokeRepeating，它是Mono里的方法。②很多游戏逻辑类与信息存贮在了GameController里，所以我们必须这样去设计)。</li><li>但在生成病毒的时候，会出现玩家暂停产生病毒去建塔的情况，所以需要通过调用GameController的停止方法去停止延时调用。并且需要随时去打开。因此将暂停开关的监听放在Update方法里。</li><li>每次调用产怪方法的时候都需要去判断一下当前产怪是否完成当次回合的产怪总数，完成则停止。否则让产怪索引去累加。</li><li>即时监听玩家的杀怪数量。如果杀怪数量一旦等于当次回合怪物的总数，便调用level里的有关方法、把当前任务交给责任链的下一环，即进入下一个回合。每次调用Level有关方法的时候会判断责任链是否到达最后一环，如果到达，则显示最后一波有关逻辑，如果超过，则游戏胜利。</li></ol><h2 id="8-2-炮塔搜索目标的有关逻辑"><a href="#8-2-炮塔搜索目标的有关逻辑" class="headerlink" title="8.2 炮塔搜索目标的有关逻辑"></a>8.2 炮塔搜索目标的有关逻辑</h2><div align=center><img src="炮塔攻击逻辑.svg" alt="炮塔攻击逻辑" style="zoom:80%;" /></div><h2 id="8-3-建塔列表的优化"><a href="#8-3-建塔列表的优化" class="headerlink" title="8.3 建塔列表的优化"></a>8.3 建塔列表的优化</h2><p>游戏中建塔列表如下图。如果不对其进行优化列表在<code>左边缘、右边缘和上边缘</code>都不能完整显示。同理，销售与升级按钮也有这样的问题。因此需要对建塔列表与塔操作UI进行纠正。</p><div align=center><p><img src="image-20200519182831560.png" alt="建塔列表"></p></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;纠正建塔列表的位置</span><br><span class="line">private Vector3 CorrectTowerListGoPosition()</span><br><span class="line">&#123;</span><br><span class="line">    Vector3 correctPosition &#x3D; Vector3.zero;</span><br><span class="line">    if (gridIndex.xIndex &lt;&#x3D; 3 &amp;&amp; gridIndex.xIndex &gt;&#x3D; 0)</span><br><span class="line">    &#123;</span><br><span class="line">        correctPosition +&#x3D; new Vector3(gameController.mapMaker.gridWidth, 0, 0);</span><br><span class="line">    &#125;</span><br><span class="line">    else if (gridIndex.xIndex &lt;&#x3D; 11 &amp;&amp; gridIndex.xIndex &gt;&#x3D; 8)</span><br><span class="line">    &#123;</span><br><span class="line">        correctPosition -&#x3D; new Vector3(gameController.mapMaker.gridWidth, 0, 0);</span><br><span class="line">    &#125;</span><br><span class="line">    if (gridIndex.yIndex &lt;&#x3D; 2 &amp;&amp; gridIndex.yIndex &gt;&#x3D; 0)</span><br><span class="line">    &#123;</span><br><span class="line">        correctPosition +&#x3D; new Vector3(0, gameController.mapMaker.gridHeight, 0);</span><br><span class="line">    &#125;</span><br><span class="line">    else if (gridIndex.yIndex &lt;&#x3D; 5 &amp;&amp; gridIndex.yIndex &gt;&#x3D; 3)</span><br><span class="line">    &#123;</span><br><span class="line">        correctPosition -&#x3D; new Vector3(0, gameController.mapMaker.gridHeight, 0);</span><br><span class="line">    &#125;</span><br><span class="line">    correctPosition +&#x3D; transform.position;</span><br><span class="line">    return correctPosition;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;纠正操作塔UI画布的方法(纠正按钮位置的方法)</span><br><span class="line">private void CorrectHandleTowerCanvasGoPosition()</span><br><span class="line">&#123;</span><br><span class="line">    upLevelButtonTrans.localPosition &#x3D; Vector3.zero;</span><br><span class="line">    sellTowerButtonTrans.localPosition &#x3D; Vector3.zero;</span><br><span class="line">    if (gridIndex.yIndex &lt;&#x3D; 0)</span><br><span class="line">    &#123;</span><br><span class="line">        if (gridIndex.xIndex &#x3D;&#x3D; 0)</span><br><span class="line">        &#123;</span><br><span class="line">            sellTowerButtonTrans.position +&#x3D; new Vector3(GameController.Instance.mapMaker.gridWidth * 3 &#x2F; 4, 0, 0);</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            sellTowerButtonTrans.position -&#x3D; new Vector3(GameController.Instance.mapMaker.gridWidth * 3 &#x2F; 4, 0, 0);</span><br><span class="line">        &#125;</span><br><span class="line">        upLevelButtonTrans.localPosition &#x3D; upLevelButtonInitPos;</span><br><span class="line">    &#125;</span><br><span class="line">    else if (gridIndex.yIndex &gt;&#x3D; 4)</span><br><span class="line">    &#123;</span><br><span class="line">        if (gridIndex.xIndex &#x3D;&#x3D; 0)</span><br><span class="line">        &#123;</span><br><span class="line">            upLevelButtonTrans.position +&#x3D; new Vector3(GameController.Instance.mapMaker.gridWidth * 3 &#x2F; 4, 0, 0);</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            upLevelButtonTrans.position -&#x3D; new Vector3(GameController.Instance.mapMaker.gridWidth * 3 &#x2F; 4, 0, 0);</span><br><span class="line">        &#125;</span><br><span class="line">        sellTowerButtonTrans.localPosition &#x3D; sellTowerButtonInitPos;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        upLevelButtonTrans.localPosition &#x3D; upLevelButtonInitPos;</span><br><span class="line">        sellTowerButtonTrans.localPosition &#x3D; sellTowerButtonInitPos;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8-4-防御塔跟随目标朝向"><a href="#8-4-防御塔跟随目标朝向" class="headerlink" title="8.4 防御塔跟随目标朝向"></a>8.4 防御塔跟随目标朝向</h2><p>游戏中防御塔会跟随攻击目标旋转，这里使用的是Transform.LookAt()，但该函数在使用时会出现一个问题：<strong>由于塔与怪物不在同一层级上（深度不同），因此使用LookAt()函数会出现三维坐标上的旋转问题，投射到二维摄像机则会出现对象变形的情况。</strong>通过判定条件设置其x与y轴坐标即可修复。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;旋转</span><br><span class="line">        &#x2F;&#x2F;transform.LookAt(targetTrans);</span><br><span class="line">        if (targetTrans.gameObject.tag &#x3D;&#x3D; &quot;Item&quot;)</span><br><span class="line">        &#123;</span><br><span class="line">            transform.LookAt(targetTrans.position + new Vector3(0, 0, 3));</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            transform.LookAt(targetTrans.position);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (transform.eulerAngles.y &#x3D;&#x3D; 0)</span><br><span class="line">        &#123;</span><br><span class="line">            transform.eulerAngles +&#x3D; new Vector3(0, 90, 0);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h1 id="9-总结"><a href="#9-总结" class="headerlink" title="9. 总结"></a>9. 总结</h1><p>游戏目前仍有一些不足点，例如：</p><ol><li>关卡少，还未设计其他关卡；</li><li>防御塔目前虽然有5种，但其攻击形式只有2种；</li><li>未实现游戏数据的存储功能；</li><li>未适配移动端的全面屏；</li><li>游戏的数值设计还不够科学。</li></ol>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;利用Unity独立开发的一个塔防类的小游戏~</summary>
    
    
    
    <category term="Unity" scheme="http://www.zanple.top/categories/Unity/"/>
    
    
    <category term="works" scheme="http://www.zanple.top/tags/works/"/>
    
    <category term="游戏" scheme="http://www.zanple.top/tags/%E6%B8%B8%E6%88%8F/"/>
    
    <category term="Unity" scheme="http://www.zanple.top/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>Unity实时渲染-赛博朋克风格场景</title>
    <link href="http://www.zanple.top/2020/04/27/unity-realtime-cyberpunk/"/>
    <id>http://www.zanple.top/2020/04/27/unity-realtime-cyberpunk/</id>
    <published>2020-04-27T15:27:03.000Z</published>
    <updated>2020-09-05T15:51:18.194Z</updated>
    
    <content type="html"><![CDATA[<p>一个利用Unity完成的赛博朋克风格场景。</p><blockquote><p>在赛博世界，人类生活每一个细节都是受计算机网络控制的黑暗地带，由于商业巨头的过度膨胀，导致经济高过了政治，成为驱动世界前进的动力，于是我们看到庞大的跨国公司取代政府成为权力的中心。这种高强度的压抑氛围也导致部分的人性的泯灭，其中的许多人物都要靠一些高强度的刺激以激发人们对于一些事物的感知，所以在这个世界的很多角落里通常都会充斥各种暴力、毒品等过分裸露的事物，而那些雨夜与霓虹灯搭配起来的强烈视觉表现元素更好地阐述了日益发达的科技与日益淡薄的人性的这对尖锐的矛盾冲突。就如同希腊神话中用蜡烛翅膀奋力高飞的伊卡洛斯一样，在离太阳最近的时候，绽放了最美的瞬间，但翅膀的融化注定了陨落的命运。</p><p>——南宫萧宸，《从蒸汽时代到后启示录：幻想未来世界旅行不完全指南》</p></blockquote><a id="more"></a><div class="cusvideo"><iframe src="CyberPunk.mp4" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe></div><hr><h1 id="1-概述"><a href="#1-概述" class="headerlink" title="1. 概述"></a>1. 概述</h1><blockquote><p>当提起赛博朋克这个词时，或许每个人在脑海中第一时间闪过的东西都不一样——“街道氤氲湿冷在霓虹灯下熙熙攘攘的场景” 、“‘高科技，低生活’的理念信条”、“沉溺虚拟世界最终幻灭的体验”、“配有《赛博朋克2077》LOGO的土味图’”……每一个都可以被叫做一个模因，它们都能看成赛博文化在进化中的 DNA。</p><p>——暴君，<a href="https://www.gcores.com/articles/112494">《当我们说起赛博朋克的时候，我们喜欢的究竟是什么？》</a></p></blockquote><p>赛博朋克在CDPR的<strong>《Cyberpunk2077》</strong>（2020最期待的游戏！没有之一！）面世后就引来了许多人的关注。因此想到利用Unity来完成一个赛博朋克场景的建立。</p><p>利用Unity实现的赛博朋克短片和场景有很多，比较有名的有<a href="https://assetstore.unity.com/publishers/5229">beffio</a>的《The Hunt》和<a href="https://assetstore.unity.com/publishers/585"><br>Manufactura K4</a>的Dark City2。此外还有UE4大神<a href="https://www.zhihu.com/people/zi-wu-xin">紫无心</a>的《霓虹中国》。</p><p><img src="TheHunt.jpg" alt="The Hunt"></p><p><img src="DarkCity2.jpg" alt="Dark City2"></p><p><img src="ziwuxin.jpg" alt="霓虹中国"></p><p>受《杀出重围》系列游戏（赛博朋克风格比较不错的游戏，值得一玩）的影响，我更倾向于霓虹元素稍微少的Low Life的低生活场景。因此使用了《Dark City2》的部分素材和一些其他模型来完成这个场景。</p><h1 id="2-灯光"><a href="#2-灯光" class="headerlink" title="2. 灯光"></a>2. 灯光</h1><p>灯光基本上都是用的点光源和自发光材质，部分使用了聚光灯（如建筑物的照灯）。</p><p><img src="image-20200428165606621.jpg" alt="灯光"></p><p>点光源主要是作为氛围光使用，平衡自发光的亮度。因此点光源的阴影就没那么重要，直接使用低分辨率的硬阴影并使用实时模式即可。</p><p>场景中还用了比较多的反射探针，反射探针的原理和光照探针类似，它允许我们在场景中的特定位置上对整个场景的环境反射进行采样，并把采样结果存储在每个探针上。当游戏中包含反射效果的物体从这些探针附近经过时，Unity会把从这些邻近探针存储的反射结果传递给物体使用的反射纹理。</p><p><img src="image-20200428172155835.jpg" alt="场景中的反射探针"></p><p>场景中的反射探针基本上放在路面上来确保路面的反射效果，为减少对帧速率的影响，在Time Slicing（时间切片）中设置为All faces at once（每9帧更新一次）或Individual faces（每14帧更新一次）。</p><p>为增强地面的反射效果，再添加与Skybox相符的平行光。</p><div align=center><p><img src="image-20200428173321878.png" alt="左图为使用平行光的地面反射，右图为未使用平行光的地面反射"></p></div><h1 id="3-粒子效果"><a href="#3-粒子效果" class="headerlink" title="3. 粒子效果"></a>3. 粒子效果</h1><p>场景中运用到粒子效果的有三处：下水道的水汽、雨、电火花。</p><p><img src="image-20200428174846228.jpg" alt="下水道水汽效果"></p><p><img src="image-20200428174755713.jpg" alt="雨滴效果"></p><p><img src="image-20200428174946612.jpg" alt="电火花效果"></p><p>其中，街道地面的水花自然不是粒子器的效果，而是通过shader来实现（下次写一下这个效果的实现）。</p><div align=center><p><img src="image-20200428174712473.png" alt="地面的水花效果"></p></div><h1 id="4-LOD优化"><a href="#4-LOD优化" class="headerlink" title="4. LOD优化"></a>4. LOD优化</h1><p>一开始场景中直接使用的LOD0的模型，在运行时帧率较低。在进行LOD优化后帧率得到明显提升。</p><p>LOD是Level Of Details的缩写即多层次细节。在计算机图形学中，LOD就是为了支持当物体远离观察者或者物体的重要程度不同，位置不同，速度不同或者视角相关的参数不同需要减少渲染3D模型的复杂度。</p><p><img src="image-20200428180012231.jpg" alt="image-20200428180012231"></p><p>例如，同样的模型处在远处时，所占屏幕像素数会比较小，反正也是看不清楚了，这时候再渲染超多顶点的高精度的模型就会浪费计算性能。这时候如果在远处的能用更低精度的模型渲染，那么在不太影响渲染质量的情况下可以提高效率。上图则为同一物体的不同精细度模型。</p><div align=center><p><img src="image-20200428183151689.png" alt="LOD Group"></p></div><p>在Unity中为物体添加LOD Group组件并设置相应比例对应的模型即可。不过因为LOD使用了多个模型，所以会造成整个项目体积的增大，算是拿空间换性能的一种优化方法吧。</p><h1 id="5-后处理"><a href="#5-后处理" class="headerlink" title="5. 后处理"></a>5. 后处理</h1><h2 id="5-1-抗锯齿"><a href="#5-1-抗锯齿" class="headerlink" title="5.1 抗锯齿"></a>5.1 抗锯齿</h2><p>接着是使用Post-process进行后处理。首先在Post-process中通过开启SMAA抗锯齿来降低画面走样现象。SMAA是一种在FXAA的基础上改进的更高质量的抗锯齿方案。</p><p><img src="image-20200428184359923.jpg" alt="不同抗锯齿方案"></p><p>既然提到了抗锯齿，这里就简单的介绍一下常见的抗锯齿的方法：</p><ul><li><p><strong>SSAA （Supersample Anti-Aliasing）</strong><br>超采样抗锯齿就是最简单粗暴的也是最有效的抗锯齿方法，缺点就是性能太差。任何类型的走样归根结底都是因为欠采样，那么我们只需要增加采样数，就可以减轻走样现象。以4x为例，4xSSAA对于每个像素（Pixel）计算4个子像素，将4个子像素的颜色求平均值，便能获得抗锯齿后的颜色。</p><div align=center><p><img src="v2-940e167efe0b74854cf56082d084fbeb_r.jpg" alt="SSAA的原理"></p></div></li><li><p><strong>MSAA（Multisample Anti-Aliasing）</strong><br>SSAA中每个像素需要多次计算着色，这对实时渲染的开销是巨大的。因此在SSAA的基础上发展出了MSAA。MSAA其实和SSAA一样，也是基于硬件的实现，只是在增加采样点和平均的时候用了一些 Trick，大幅优化了 SSAA 的效率，当然代价就是对特定的锯齿完全没有优化效果。<br>和 SSAA 不同，MSAA 其实是 Per-Pixel Shading。GPU 打开 MSAA 后，会在光栅化阶段根据图元边缘的计算出其覆盖的像素，和对该像素内每一个 Sample 的覆盖关系（coverage mask），在执行 PixelShader 后写入颜色时，会根据覆盖关系把 PS 输出的颜色和 BackBuffer 颜色进行平均后作为最终结果。<br>由于MSAA拥有硬件支持，相对开销比较小，又能很好地解决几何走样问题，在游戏中应用非常广泛。</p><div align=center><p><img src="MultisamplingAnti-Aliasing.jpg" alt="MSAA的原理"></p></div><p>提到了MSAA，想起前几天知乎上<a href="https://www.zhihu.com/people/carcat">寒霜之爪</a>写的<a href="https://zhuanlan.zhihu.com/p/135444145">《延迟渲染与MSAA的那些事》</a>中提到的在延迟渲染中使用MSAA（这个在很多参考资料上都注明了延迟渲染不支持硬件抗锯齿）。</p></li><li><p><strong>FXAA （Fast Approximate Anti-Aliasing）</strong><br>FXAA 是由 NVDIA 发明的高效后处理抗锯齿方案，也是目前所有后处理抗锯齿方案里面同等设置下效率最高的抗锯齿算法。FXAA 的边缘提取是根据 SceneColor 的 Luma 值进行检测的，所以可以提取到高光、阴影，几何边缘，半透明物体。</p></li><li><p><strong>SMAA（增强型亚像素形态抗锯齿）</strong><br>SMAA 是由 CryEngine 开发的更注重效果的后处理抗锯齿方案，当然其效率在大多数移动平台上也是很难被接受的。它和FXAA的最大区别是会更具边缘的形状选择不同的周围像素进行模糊，尽量还原出合理的SubPixels。</p></li><li><p><strong>Temporal AA（Temporal Anti-Aliasing）</strong></p><p>严格来说TAA并不能算一个具体的算法，而是更像一个统一的算法框架。和SSAA一样，TAA也能够同时减轻几何走样和着色走样的问题。总体来说TAA也分为采样（sampling）和合成（resolve）两个过程，不同的TAA的具体实现也是围绕这两个部分有所变化。</p></li></ul><h2 id="5-2-Bloom"><a href="#5-2-Bloom" class="headerlink" title="5.2 Bloom"></a>5.2 Bloom</h2><p>Bloom特效是游戏中常见的一种屏幕效果。这种特效可以模拟真实摄像机的一种图像效果，它让画面中较亮的区域“扩散”到周围的区域中，造成一种朦胧的效果。</p><p><img src="image-20200428214919470.jpg" alt="左图为原效果 右图为Bloom处理后的效果"></p><p>Bloom的实现原理很简单：我们首先根据一个阈值提取出图像中较亮区域，把它们存储在一张渲染纹理中，再利用高斯模糊对这张渲染纹理进行模糊处理，模拟光线扩散的效果，最后再将其和原图像进行混合，得到最终的结果。</p><p><code>HDR</code>是<code>High Dynamic Range</code>的缩写，即高动态范围，与之对应的是低动态范围（<code>Low Dynamic Range</code>，<code>LDR</code>）。常用HDR图片储存格式有hdr/tif/exr/raw等。我们身边的电子图片，几乎都是LDR。常用LDR图片储存格式有jpg/png等。</p><p>LDR只能算是对现实颜色进行压缩，并呈现出来。看似丰富，但真和现实中的颜色比，还是局限了许多，一旦需要进行调色等后续加工，便会因为颜色不够而难以进行。这便诞生了HDR。单通道位数超过8位，便可称为HDR，常见有12位和16位。</p><p>总的来说，利用HDR渲染<strong>让亮的物体可以真的非常亮，暗的物体可以真的非常暗，同时又可以看到两者之间的细节。</strong>而把HDR用ToneMapping压缩成LDR，再用Bloom表现高光溢出的效果。这是引擎内对画面的处理方式。</p><h1 id="6-渲染结果-4K"><a href="#6-渲染结果-4K" class="headerlink" title="6. 渲染结果(4K)"></a>6. 渲染结果(4K)</h1><p><img src="image_0884.jpg" alt="最终测试1"></p><p><img src="image_2001.jpg" alt="最终测试2"></p><blockquote><p>我们对赛博朋克的爱，并非从2077开始，也不会因此而结束。</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;一个利用Unity完成的赛博朋克风格场景。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在赛博世界，人类生活每一个细节都是受计算机网络控制的黑暗地带，由于商业巨头的过度膨胀，导致经济高过了政治，成为驱动世界前进的动力，于是我们看到庞大的跨国公司取代政府成为权力的中心。这种高强度的压抑氛围也导致部分的人性的泯灭，其中的许多人物都要靠一些高强度的刺激以激发人们对于一些事物的感知，所以在这个世界的很多角落里通常都会充斥各种暴力、毒品等过分裸露的事物，而那些雨夜与霓虹灯搭配起来的强烈视觉表现元素更好地阐述了日益发达的科技与日益淡薄的人性的这对尖锐的矛盾冲突。就如同希腊神话中用蜡烛翅膀奋力高飞的伊卡洛斯一样，在离太阳最近的时候，绽放了最美的瞬间，但翅膀的融化注定了陨落的命运。&lt;/p&gt;
&lt;p&gt;——南宫萧宸，《从蒸汽时代到后启示录：幻想未来世界旅行不完全指南》&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Unity" scheme="http://www.zanple.top/categories/Unity/"/>
    
    
    <category term="works" scheme="http://www.zanple.top/tags/works/"/>
    
    <category term="短片" scheme="http://www.zanple.top/tags/%E7%9F%AD%E7%89%87/"/>
    
    <category term="Unity" scheme="http://www.zanple.top/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>Unity-扫描及透视效果的实现</title>
    <link href="http://www.zanple.top/2020/04/27/unity-scaneffect/"/>
    <id>http://www.zanple.top/2020/04/27/unity-scaneffect/</id>
    <published>2020-04-27T15:24:14.000Z</published>
    <updated>2020-09-05T08:17:18.159Z</updated>
    
    <content type="html"><![CDATA[<p>扫描效果在科幻游戏中比较常见，如APEX英雄、命运2、杀出重围、全境封锁2等中都有体现。大致的效果为光线扫描全场景，并高亮显示敌方（可透过障碍物）。<a id="more"></a>这里我选取了APEX英雄中“寻血猎犬”的“上帝之眼”技能为参考，按下“<strong>Q</strong>”后在短时间内扫描场景并显示范围内的敌人。</p><p><img src="APEX-Scan.gif" alt="APEX中“寻血猎犬”的扫描技能"></p><h1 id="1-效果分析"><a href="#1-效果分析" class="headerlink" title="1. 效果分析"></a>1. 效果分析</h1><p>扫描效果从当前视角蔓延，并根据扫描的位置显示对应的敌方，需要计算当前位置到扫描位置的距离。如果对场景中所有的对象进行计算，再将颜色叠加到物体上的效率显然较低。因此使用类似全局雾效基于屏幕后处理的实现方法，则不需要更改场景内渲染物体所使用的Shader代码，而仅仅依靠一次屏幕的后处理的步骤即可。</p><h1 id="2-直接使用深度值"><a href="#2-直接使用深度值" class="headerlink" title="2. 直接使用深度值"></a>2. 直接使用深度值</h1><p>扫描效果直接从相机位置发出，因此尝试直接使用相机获得的场景深度信息进行处理。</p><p>在脚本中，获得到深度信息后我们就可以得到场景中物体与相机的深度关系。利用<code>Unity Time类</code>中的<code>deltaTime</code>来影响扫描效果的移动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this.dis +&#x3D; Time.deltaTime * this.velocity;</span><br></pre></td></tr></table></figure><p>然后通过<code>OnRenderImage()</code>函数抓取render texture，再通过<code>Graphics.Blit()</code>函数传递给虚拟材质中的Shader进行后处理。</p><p>在Shader中获取每个像素的深度信息，与扫描网所在位置比较进行颜色的叠加即可。</p><div align=center><p><img src="image-20200427234307373.png" alt="直接使用深度值的效果"></p></div><p>通过直接使用深度值信息进行叠加我们可以获得如上图的效果，但是这样的效果不够理想。首先是扫描网由摄像机所在位置发出，即从近裁剪平面发出，如果是用在固定视角的第一人称游戏不会有太大问题，<strong>但是应用在第三人称视角游戏的效果则不够理想，并且在移动过程中会影响后续的敌人高亮显示问题。</strong></p><h1 id="3-使用深度缓冲重构世界空间坐标"><a href="#3-使用深度缓冲重构世界空间坐标" class="headerlink" title="3. 使用深度缓冲重构世界空间坐标"></a>3. 使用深度缓冲重构世界空间坐标</h1><p>在上面的方法中是从摄像机发出扫描网的，但是我们想在角色所在位置发出，并且我们在游戏中可以看到的效果都是圆的而不是平面推出的方式。因此使用全局雾效里的使用深度缓冲来重构世界空间坐标。</p><div align=center><p><img src="image-20200427234427915.png" alt="重构空间坐标"></p></div><p>通过对图形空间下的视锥体的四个顶点进行插值，然后通过采样当前像素的深度值，将这个线性深度值与插值后的结果相乘便能得到世界空间中相机到远裁剪平面的向量，其大小等于到采样像素的距离。最后再加上相机的世界空间坐标，我们就可以得到每个像素的世界空间坐标了。</p><p>当然，也可以通过深度和像素在屏幕上的坐标以及CVV到屏幕矩阵的逆投影矩阵逆摄像机矩阵计算出像素的世界空间坐标，然后和在世界空间中定义的扫描平面计算距离。但这样的做法需要涉及到矩阵的计算。</p><h1 id="4-扫描网效果"><a href="#4-扫描网效果" class="headerlink" title="4. 扫描网效果"></a>4. 扫描网效果</h1><p>扫描网的效果上我选取的还是APEX英雄中“寻血猎犬”的技能为例：</p><p><img src="ScanEffect.mp4_20200419_125601.183.png" alt="APEX英雄扫描特效"></p><p>扫描网的移动上，为了避免扫描网的无限延伸（到天空盒），对扫描网的距离进行判断。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if (juli &lt; _ScanDistance &amp;&amp; juli &gt; _ScanDistance - _ScanWidth &amp;&amp; linearDepth &lt; 1)</span><br></pre></td></tr></table></figure><p>同时，另扫描网的移动速度随着时间增加（实现扫描网逐渐加速的效果）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ScanDistance +&#x3D; Time.deltaTime * 50;</span><br></pre></td></tr></table></figure><p>扫描网的视觉效果由4个变量来控制，分别为边缘清晰度、边缘颜色、中部颜色、尾迹颜色。并使用水平线填充扫描网。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">_HeadTough(&quot;边缘清晰度&quot;, float) &#x3D; 10</span><br><span class="line">_HeadColor(&quot;边缘颜色&quot;, Color) &#x3D; (1, 1, 1, 0)</span><br><span class="line">_MidColor(&quot;中部颜色&quot;, Color) &#x3D; (1, 1, 1, 0)</span><br><span class="line">_LastColor(&quot;尾迹颜色&quot;, Color) &#x3D; (1, 1, 1, 0)</span><br><span class="line">_LineColor(&quot;水平线颜色&quot;, Color) &#x3D; (0.5, 0.5, 0.5, 0)</span><br><span class="line">……</span><br><span class="line">if (juli &lt; _ScanDistance &amp;&amp; juli &gt; _ScanDistance - _ScanWidth &amp;&amp; linearDepth &lt; 1)</span><br><span class="line">&#123;</span><br><span class="line">float chazhi &#x3D; 1 - (_ScanDistance - juli) &#x2F; (_ScanWidth); &#x2F;&#x2F;给定距离减去像素距离再除去给定的宽度，使得结果在0到1之间变化，再用1减去归一化的这个值</span><br><span class="line">half4 edge &#x3D; lerp(_MidColor, _HeadColor, pow(chazhi, _HeadTough));&#x2F;&#x2F;用幂函数来提高边缘颜色的权重</span><br><span class="line">scanColor &#x3D; lerp(_LastColor, edge, chazhi) + lineEffect(i.uv) * _LineColor;&#x2F;&#x2F;把条纹乘上一个颜色</span><br><span class="line">scanColor *&#x3D; chazhi;&#x2F;&#x2F;以上三行用于混合三个颜色 使用了不同的值作为插值函数的权重</span><br><span class="line">&#125;</span><br><span class="line">return col + scanColor;&#x2F;&#x2F;叠加到扫描颜色中</span><br></pre></td></tr></table></figure><h1 id="5-敌人高亮显示"><a href="#5-敌人高亮显示" class="headerlink" title="5. 敌人高亮显示"></a>5. 敌人高亮显示</h1><p>在APEX英雄中“寻血猎犬”的技能中，被扫描到的敌人会进行描边处理，并且这个描边是可以透过障碍物看到的。</p><p><img src="ScanEffect.mp4_20200419_125601.183.png" alt="APEX英雄扫描特效"></p><p>实现这样的效果只需要利用两个Pass分别对被遮住和未被遮住的物体进行处理即可。然后根据观察方向和目标多边形的法线方向的夹角来判断目标的边缘，从而实现描边效果。</p><div align=center><p><img src="image-20200427234655611.png" alt="视线与法线"></p></div><p>敌人的高亮描边效果应该在扫描网扫描目标敌方后才出现，并且这个效果应该只会保持一定的时间然后恢复正常。因此添加一个<code>BeenScan</code>脚本来控制目标敌方的不同显示效果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">public void Highlight() &#123;</span><br><span class="line">        Material material &#x3D; Resources.Load(&quot;Material&#x2F;Browm-bear 1&quot;, typeof(Material)) as Material;</span><br><span class="line">        GetComponent&lt;Renderer&gt;().material &#x3D; material;</span><br><span class="line">        numCal++;</span><br><span class="line">        if(numCal &gt; 180)</span><br><span class="line">        &#123;</span><br><span class="line">            Material material2 &#x3D; Resources.Load(&quot;Material&#x2F;Browm-bear&quot;, typeof(Material)) as Material;</span><br><span class="line">            GetComponent&lt;Renderer&gt;().material &#x3D; material2;</span><br><span class="line">        &#125;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后，在<code>ScanEffect</code>中判断扫描网是否扫描到了目标敌方来调用<code>BeenScan</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">foreach (BeerBeenScan s in _beenscanB)</span><br><span class="line">            &#123;</span><br><span class="line">                if (Vector3.Distance(ScanOrigin.position, Bear.transform.position) &lt;&#x3D; ScanDistance)</span><br><span class="line">                &#123;</span><br><span class="line">                    s.Highlight();</span><br><span class="line">                    if (_crossingB)</span><br><span class="line">                    &#123;</span><br><span class="line">                        s.numCal &#x3D; 0;</span><br><span class="line">                        _crossingB &#x3D; false;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><h1 id="6-最终效果"><a href="#6-最终效果" class="headerlink" title="6. 最终效果"></a>6. 最终效果</h1><p><img src="ScanEffect.gif" alt="效果展示"></p><hr><p>[1] <a href="https://blogs.unity3d.com/cn/2011/09/08/special-effects-with-depth-talk-at-siggraph/">“Special Effects with Depth” talk at SIGGRAPH - Kuba Cupisz</a></p><p>[2] <a href="https://www.youtube.com/watch?v=OKoNp2RqE9A">Shaders Case Study - No Man’s Sky: Topographic Scanner</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;扫描效果在科幻游戏中比较常见，如APEX英雄、命运2、杀出重围、全境封锁2等中都有体现。大致的效果为光线扫描全场景，并高亮显示敌方（可透过障碍物）。</summary>
    
    
    
    <category term="Shader" scheme="http://www.zanple.top/categories/Shader/"/>
    
    
    <category term="works" scheme="http://www.zanple.top/tags/works/"/>
    
    <category term="Unity" scheme="http://www.zanple.top/tags/Unity/"/>
    
    <category term="Shader" scheme="http://www.zanple.top/tags/Shader/"/>
    
    <category term="Game" scheme="http://www.zanple.top/tags/Game/"/>
    
  </entry>
  
  <entry>
    <title>Unity中DoTween插件的缓动函数</title>
    <link href="http://www.zanple.top/2020/04/13/unity-dotween-ease/"/>
    <id>http://www.zanple.top/2020/04/13/unity-dotween-ease/</id>
    <published>2020-04-13T15:45:56.000Z</published>
    <updated>2020-04-14T08:26:12.729Z</updated>
    
    <content type="html"><![CDATA[<p>最近在Unity中使用 DOTween插件来配置UI动画，了解到了几种常见的缓动函数。</p><p><strong>缓动函数</strong>指定动画效果在执行时的速度，用于控制动画从初始值运动到最终值的速率。如摄像机的运动、灯光的渐弱、汽车的启动等，这些速度的变化都不是线性的。所以适当的使用动画能让用户得到更舒适的观感，使其看起来更加真实。<a id="more"></a></p><h1 id="1-缓动函数"><a href="#1-缓动函数" class="headerlink" title="1. 缓动函数"></a>1. 缓动函数</h1><p>目前已经有一些常用的缓动函数曲线了，特殊情况需要图素进行复杂复合动作，需要严丝合缝的控制函数变化的时间点的话才使用自定义曲线来解决。</p><p>缓动函数的效果一般都分为三个缓动方式，分别是：</p><ul><li><strong>ease-in</strong>：表示缓入动画，动画的速度先慢后快，为从0开始加速的缓动。缓入动画会在速度最快时停止，这会让动画结束得很突然，因为自然界中的运动总是慢慢减速后才停止的。</li><li><strong>ease-out</strong> ：表示缓出动画，与缓入动画正好相反，缓出动画的速度先快后慢，为减速到0的缓动。</li><li><strong>ease-in-out</strong>： 表示缓入缓出动画，它的速度由慢变快，最后再变慢，前半段从0开始加速，后半段减速到0的缓动。</li></ul><p>其中<strong>Linear</strong>为线性动画，动画从开始到结束一直是同样的速度，没有缓动效果。</p><h1 id="2-缓动函数速查表"><a href="#2-缓动函数速查表" class="headerlink" title="2. 缓动函数速查表"></a>2. 缓动函数速查表</h1><iframe   src="https://www.xuanfengge.com/easeing/easeing/" width="100%" height="1300px"   frameborder="0"  name="缓动函数速查表"     scrolling="no" sandbox="allow-scripts">   </iframe><hr><p><em>*缓动函数速查表:<a href="http://www.xuanfengge.com/easeing/easeing/">http://www.xuanfengge.com/easeing/easeing/</a></em></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近在Unity中使用 DOTween插件来配置UI动画，了解到了几种常见的缓动函数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;缓动函数&lt;/strong&gt;指定动画效果在执行时的速度，用于控制动画从初始值运动到最终值的速率。如摄像机的运动、灯光的渐弱、汽车的启动等，这些速度的变化都不是线性的。所以适当的使用动画能让用户得到更舒适的观感，使其看起来更加真实。</summary>
    
    
    
    <category term="Unity" scheme="http://www.zanple.top/categories/Unity/"/>
    
    
    <category term="Unity" scheme="http://www.zanple.top/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>计算机图形学-Unity中矩阵变换、坐标空间的回顾</title>
    <link href="http://www.zanple.top/2020/04/07/cg-unity-matrix/"/>
    <id>http://www.zanple.top/2020/04/07/cg-unity-matrix/</id>
    <published>2020-04-07T13:35:22.000Z</published>
    <updated>2020-04-08T15:21:18.474Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这几天重新回顾了一下图形学在Unity中的应用。主要是针对矩阵变换、坐标空间和法线变换的内容。<a id="more"></a></p></blockquote><h1 id="1-矩阵与矩阵变换"><a href="#1-矩阵与矩阵变换" class="headerlink" title="1. 矩阵与矩阵变换"></a>1. 矩阵与矩阵变换</h1><h2 id="1-1-矩阵"><a href="#1-1-矩阵" class="headerlink" title="1.1 矩阵"></a>1.1 矩阵</h2><p>向量的矩阵表示：设已知向量</p><p>$$<br>\vec{R}=a \vec{\imath}+b \cdot \vec{\jmath}+c \cdot \vec{k}<br>$$</p><p>则可用矩阵表示为</p><p>$$\vec{R}=\left[\begin{array}{lll}a & b & c\end{array}\right] \cdot\left[\begin{array}{c}\vec{i} \\\vec{j} \\\vec{k}\end{array}\right]$$</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/mathjax@3.0.0/es5/tex-chtml.js"></script><script type="text/x-mathjax-config">  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});</script><h2 id="1-2-齐次坐标表示法"><a href="#1-2-齐次坐标表示法" class="headerlink" title="1.2 齐次坐标表示法"></a>1.2 齐次坐标表示法</h2><p>由n+1维向量表示一个n维向量。如n维向量(P1,P2, … ,Pn)表示为(hP1,hP2,…,hPn,h) ，其中h称为哑坐标。其作用为：</p><ol><li>将各种变换用阶数统一的矩阵来表示。提供了用矩阵运算把二维、三维甚至高维空间上的一个点从一个坐标系变换到另一坐标系的有效方法。</li><li>便于表示无穷远点：例如：（x<em>x</em>h, y<em>x</em>h, h) ，令h等于0。</li><li>齐次坐标变换矩阵形式把直线变换成直线段，平面变换成平面，多边形变换成多边形，多面体变换成多面体。（图形拓扑关系保持不变)</li><li>变换具有统一表示形式的优点：便于变换合成，便于硬件实现。</li></ol><h2 id="1-3-行矩阵还是列矩阵"><a href="#1-3-行矩阵还是列矩阵" class="headerlink" title="1.3 行矩阵还是列矩阵"></a>1.3 行矩阵还是列矩阵</h2><p>在Unity中，常规做法是把矢量放在矩阵的<code>右侧</code>，即把矢量转换为列矩阵来进行运算。这意味着，在Unity中的矩阵乘法通常都是<code>右乘</code>，例如：</p><p>$$<br>\mathbf{C B A v}=(\mathbf{C}(\mathbf{B}(\mathbf{A v})))<br>$$</p><p>使用列矩阵意味着我们对上式的阅读顺序为从右到左，即先对<strong><em>v</em></strong>使用<strong><em>A</em></strong>进行变换，再使用<strong><em>B</em></strong>进行变换，最后使用<strong><em>C</em></strong>进行变换。</p><h1 id="2-矩阵变换"><a href="#2-矩阵变换" class="headerlink" title="2. 矩阵变换"></a>2. 矩阵变换</h1><h2 id="2-1-二维变换矩阵"><a href="#2-1-二维变换矩阵" class="headerlink" title="2.1 二维变换矩阵"></a>2.1 二维变换矩阵</h2><p>由于我们在Unity中基本上使用的都是三维矩阵的变换，所以在这里就不过多讨论二维矩阵的变换，只给出二维变换矩阵的统一表达式：</p><p>$$ \begin{bmatrix}   a & b & p \\   c & d & q \\   m & n & s  \end{bmatrix}$$</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/mathjax@3.0.0/es5/tex-chtml.js"></script><script type="text/x-mathjax-config">  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});</script><div align=center><img src="image-20200407231704728.png" alt="二维变换" style="zoom:60%;" /><img src="image-20200407231725775.png" alt="二维变换中的基本操作" style="zoom:60%;" /></div><h2 id="2-2-三维变换矩阵"><a href="#2-2-三维变换矩阵" class="headerlink" title="2.2 三维变换矩阵"></a>2.2 三维变换矩阵</h2><p>线性变换指哪些可以保留<code>矢量加</code>和<code>标量乘</code>的变换。对于所有线性变换来说，如果我们要对一个三维的矢量进行变换，那么仅仅使用3X3的矩阵就可以表示所有的<code>线性变换</code>。但是3X3矩阵不能表示<code>平移操作</code>，因此将其扩展为4X4矩阵（齐次坐标）。</p><h3 id="2-2-1-基本操作"><a href="#2-2-1-基本操作" class="headerlink" title="2.2.1 基本操作"></a>2.2.1 基本操作</h3><p>平移矩阵：</p><p>$$ \begin{bmatrix}   1 & 0 & 0 & t_{x} \\   0 & 1 & 0 & t_{y} \\   0 & 0 & 1 & t_{z} \\   0 & 0 & 0 & 1  \end{bmatrix}$$</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/mathjax@3.0.0/es5/tex-chtml.js"></script><script type="text/x-mathjax-config">  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});</script><p>缩放矩阵：</p><p>$$ \begin{bmatrix}   k_{x} & 0 & 0 & 0 \\   0 & k_{y} & 0 & 0 \\   0 & 0 & k_{z} & 0 \\   0 & 0 & 0 & 1  \end{bmatrix}$$</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/mathjax@3.0.0/es5/tex-chtml.js"></script><script type="text/x-mathjax-config">  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});</script><p>旋转矩阵：</p><p>$$\mathbf{R}_{x}(\theta)=\left[\begin{array}{cccc}1 & 0 & 0 & 0 \\0 & \cos \theta & -\sin \theta & 0 \\0 & \sin \theta & \cos \theta & 0 \\0 & 0 & 0 & 1\end{array}\right]$$</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/mathjax@3.0.0/es5/tex-chtml.js"></script><script type="text/x-mathjax-config">  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});</script><p>$$\mathbf{R}_{y}(\theta)=\left[\begin{array}{cccc}\cos \theta & 0 & \sin \theta & 0 \\0 & 1 & 0 & 0 \\-\sin \theta & 0 & \cos \theta & 0 \\0 & 0 & 0 & 1\end{array}\right]$$</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/mathjax@3.0.0/es5/tex-chtml.js"></script><script type="text/x-mathjax-config">  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});</script><p>$$\mathbf{R}_{z}(\theta)=\left[\begin{array}{cccc}\cos \theta & -\sin \theta & 0 & 0 \\\sin \theta & \cos \theta & 0 & 0 \\0 & 0 & 1 & 0 \\0 & 0 & 0 & 1\end{array}\right]$$</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/mathjax@3.0.0/es5/tex-chtml.js"></script><script type="text/x-mathjax-config">  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});</script><p>对矢量的变换则利用该矢量的列矩阵与上述矩阵点乘即可。</p><p>$$ \begin{bmatrix}   x \\   y \\   z \\   1  \end{bmatrix}$$</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/mathjax@3.0.0/es5/tex-chtml.js"></script><script type="text/x-mathjax-config">  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});</script><h3 id="2-2-2-复合变换"><a href="#2-2-2-复合变换" class="headerlink" title="2.2.2 复合变换"></a>2.2.2 复合变换</h3><p>复合变换可通过矩阵的串联来实现，可以使用下面的公式来计算：</p><p>$$<br>\mathbf{p_{new}}=\mathbf{M_{tramslation}}\mathbf{M_{rotation}}\mathbf{M_{scale}}\mathbf{p_{old}}<br>$$<br>由于我们使用的是列矩阵，因此阅读顺序是<code>从右到左</code>，即先进行缩放变换，再进行旋转变换，最后进行平移变换。</p><blockquote><p>在绝大多数情况下，我们约定变换的顺序是先<code>缩放</code>，再<code>旋转</code>，最后<code>平移</code>。</p></blockquote><p>还有个要注意的是旋转的变换顺序。如果要同时绕三个轴进行旋转，在Unity中旋转的顺序是<code>zxy</code>，这意味着组合旋转变换矩阵是：</p><p>$$M_{r o t a t a _Z} M_{r o t a t a _X} M_{r o t a t a _Y}=\left[\begin{array}{cccc}\cos \theta _{Z} & -\sin \theta _{Z} & 0 & 0 \\\sin \theta _{Z} & \cos \theta _{Z} & 0 & 0 \\0 & 0 & 1 & 0 \\0 & 0 & 0 & 1\end{array}\right]\left[\begin{array}{cccc}1 & 0 & 0 & 0 \\0 & \cos \theta _{X} & -\sin \theta _{X} & 0 \\0 & \sin \theta _{X} & \cos \theta _{X} & 0 \\0 & 0 & 0 & 1\end{array}\right]\left[\begin{array}{cccc}\cos \theta _{Y} & 0 & \sin \theta _{Y} & 0 \\0 & 1 & 0 & 0 \\-\sin \theta _{Y} & 0 & \cos \theta _{Y} & 0 \\0 & 0 & 0 & 1\end{array}\right]$$</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/mathjax@3.0.0/es5/tex-chtml.js"></script><script type="text/x-mathjax-config">  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});</script><p>由于Unity文档中说明的旋转顺序是在旋转过程中<strong>保持坐标轴不变</strong>的（不是那种旋转一个轴后由于自身方向的改变再按新的坐标轴的旋转的顺序），所以在这里按<code>zxy</code>顺序旋转和<strong>带坐标轴旋转</strong>的<code>yxz</code>顺序旋转是一样的。</p><h1 id="3-坐标空间"><a href="#3-坐标空间" class="headerlink" title="3. 坐标空间"></a>3. 坐标空间</h1><h2 id="3-1-坐标空间变换"><a href="#3-1-坐标空间变换" class="headerlink" title="3.1 坐标空间变换"></a>3.1 坐标空间变换</h2><p>$$\mathbf{M}_{c\rightarrow p}=\left[\begin{array}{cccc}| & | & | & | \\\mathbf x_{c} & \mathbf y_{c} & \mathbf z_{c} & \mathbf O_{c} \\| & | & | & | \\0 & 0 & 0 & 1\end{array}\right]$$</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/mathjax@3.0.0/es5/tex-chtml.js"></script><script type="text/x-mathjax-config">  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});</script><p>其中，<br>$$<br>\mathbf{M}_{c\rightarrow p}<br>$$<br>表示的是从<strong>子坐标空间变换到父坐标空间</strong>变换的变换矩阵，其逆矩阵这位从<strong>父坐标空间变换到子坐标空间变换</strong>的变换矩阵。</p><p>我们知道，矢量是没有位置的，因此坐标空间的原点变换是可以忽略的。也就是说，我们仅仅平移坐标系的原点是不会对矢量造成任何影响的。那么，对矢量的坐标空间变换就可以使用3X3的矩阵来表示，因为我们不需要表示平移变换。那么变换矩阵就是：</p><p>$$\mathbf{M}_{c\rightarrow p} =\left[\begin{array}{cccc}| & | & | \\\mathbf x_{c} & \mathbf y_{c} & \mathbf z_{c} \\| & | & | \end{array}\right]$$</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/mathjax@3.0.0/es5/tex-chtml.js"></script><script type="text/x-mathjax-config">  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});</script><p>其逆矩阵则为：</p><p>$$\mathbf{M}_{c\rightarrow p} =\left[\begin{array}{cccc}- & \mathbf x_{B} & - \\- & \mathbf y_{B} & - \\- & \mathbf z_{B} & - \end{array}\right]$$</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/mathjax@3.0.0/es5/tex-chtml.js"></script><script type="text/x-mathjax-config">  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});</script><p>在Shader中，我们常常会看到截取变换矩阵的<strong>前3行和前3列</strong>来对<code>法线方向</code>、<code>光照方向</code>来进行空间变换，这正是原因所在。</p><hr><p>例如我们想把一个矢量从坐标空间$ \mathbf A $变换到坐标空间$ \mathbf B $，而且我们已经知道坐标空间$ \mathbf B $的x轴、y轴、z轴在空间$ \mathbf A $下的表示，即$\mathbf x_{B} $、$ \mathbf y_{B} $和$ \mathbf z_{B} $。那么想要得到从$ \mathbf A $到$ \mathbf B $的变换矩阵$ \mathbf{M}_{c\rightarrow p} $，我们可以用$ \mathbf{M}_{c\rightarrow p} $来变换$\mathbf  x_{B} $，那么得到的结果应该是(1,0,0)，那么我们按行来摆放就有：$$\mathbf{M}_{A\rightarrow B} \mathbf x_{B} =\left[\begin{array}{cccc}- & \mathbf x_{B} & - \\- & \mathbf y_{B} & - \\- & \mathbf z_{B} & - \end{array}\right]\mathbf x_{B} =\left[\begin{array}{cccc}\mathbf x_{B} \cdot \mathbf x_{B} \\\mathbf y_{B} \cdot \mathbf y_{B} \\\mathbf z_{B} \cdot \mathbf z_{B} \end{array}\right]=\left[\begin{array}{cccc}1 \\0 \\0 \end{array}\right]$$</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/mathjax@3.0.0/es5/tex-chtml.js"></script><script type="text/x-mathjax-config">  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});</script><hr><h2 id="3-2-模型空间"><a href="#3-2-模型空间" class="headerlink" title="3.2 模型空间"></a>3.2 模型空间</h2><p>下面我们要说说，在渲染流水线中，顶点在各个空间的变换过程。</p><h3 id="3-2-1-模型空间"><a href="#3-2-1-模型空间" class="headerlink" title="3.2.1 模型空间"></a>3.2.1 模型空间</h3><p><strong>模型空间（model space）</strong>也叫对象空间（object space）或局部空间（local space）。每个模型都有自己独立的坐标空间，当它移动或旋转时，模型空间也会跟着移动和旋转。</p><h3 id="3-2-2-世界空间"><a href="#3-2-2-世界空间" class="headerlink" title="3.2.2 世界空间"></a>3.2.2 世界空间</h3><p><strong>世界空间（world space）</strong>相对于模型空间，世界空间是模型所在的最外层的父空间。Unity中，世界空间同样是左手坐标系，原点是游戏空间的中心，x、y、z轴固定不变。</p><h3 id="3-2-3-观察空间"><a href="#3-2-3-观察空间" class="headerlink" title="3.2.3 观察空间"></a>3.2.3 观察空间</h3><p><strong>观察空间（view space）</strong>观察空间也被称为摄像机空间，在观察空间中，摄像机位于原点，它决定了我们渲染游戏所使用的视角，观察空间采用的是右手坐标系，所以+z轴指的是摄像机后方。</p><p>为了得到顶点在观察空间的位置，我们可以有两种方法。</p><ol><li><p>一是计算观察空间的三个坐标轴在世界空间的表示，然后算出观察空间到世界空间的变换矩阵，再求逆得住世界空间到观察空间的变换矩阵。</p></li><li><p>二是平移整个观察空间，让摄像机原点位于世界空间原点，坐标轴与世界空间坐标轴重合。两种方法得到的变换矩阵是一样的。</p></li></ol><p>这里我们用第二种方法，有一点很重要，我们上面说过世界空间的变换顺序公式是<code>先缩放，再旋转，再平移</code>，而这里我们为了把摄像机移回世界坐标原点，我们需要<strong>逆向变换</strong>，所以是<code>先平移，再旋转，再缩放</code>。<br>$$<br>\mathbf{M_{view}}=\mathbf{M_{scale}}\mathbf{M_{rotation}}\mathbf{M_{tramslation}}<br>$$<br>因为观察空间是右手坐标系，与世界空间的左手坐标系z轴相反，所以<code>z分量</code>要<strong>取反</strong>操作：</p><h3 id="3-2-4-裁剪空间-透视投影"><a href="#3-2-4-裁剪空间-透视投影" class="headerlink" title="3.2.4 裁剪空间-透视投影"></a>3.2.4 裁剪空间-透视投影</h3><p>我们先看看透视投影的6个裁剪平面怎么决定的。在Unity中，它们由Camera组件中的参数和Game视图的<strong>纵横比</strong>共同决定。如图所示：</p><div align=center><img src="projection_frustum.png" alt="透视摄像机的参数对透视投影视锥体的影响" style="zoom:80%;" /></div><p>上图中Camera的<code>Field of View(FOV)</code>决定视锥体竖直方向的张开角度，<code>Clipping Planes</code>中的<code>Near</code>和<code>Far</code>决定视锥体的近裁剪平面和远裁剪平面距离摄像机的远近，这样就可以求出近和远裁剪平面的高度：</p><p>$$\begin{aligned}&\text {nearClipPlaneHeight}=2 \cdot \text {Near} \cdot \tan \frac{F O V}{2}\\&\text {farClipPlaneHeight}=2 \cdot \text {Far} \cdot \tan \frac{F O V}{2}\end{aligned}$$</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/mathjax@3.0.0/es5/tex-chtml.js"></script><script type="text/x-mathjax-config">  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});</script><p>而横向信息由摄像机的纵横比决定。这个纵横比由Game视图的纵横比和Viewport Rect中的W和H属性共同决定（Unity中可以通过Camera.aspect获得）。假设纵横比为<strong>Aspect</strong>，则：</p><p>$$\begin{aligned}\text {Aspect} &=\frac{\text {nearClipPlaneWidth}}{\text {nearClipPlaneHeight}} \\\text {Aspect} &=\frac{\text {farClipPlaneWidth}}{\text {farClipPlaneHeight}}\end{aligned}$$</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/mathjax@3.0.0/es5/tex-chtml.js"></script><script type="text/x-mathjax-config">  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});</script><p>这样可以确定透视投影的投影矩阵：</p><p>$$\mathbf{M}_{\text {frustum}}=\left[\begin{array}{cccc}\frac{\cot \frac{F O V}{2}}{A s p e c t} & 0 & 0 & 0 \\0 & \cot \frac{F O V}{2} & 0 & 0 \\0 & 0 & -\frac{F a r+N e a r}{F a r-N e a r} & -\frac{2 \cdot N e a r \cdot F a r}{F a r-N e a r} \\0 & 0 & -1 & 0\end{array}\right]$$</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/mathjax@3.0.0/es5/tex-chtml.js"></script><script type="text/x-mathjax-config">  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});</script><p>这个投影矩阵是建立在<code>Unity坐标系</code>上，观察空间是<code>右手坐标系</code>，使用列矩阵<strong>右乘</strong>，且变换后z分量在[-w, w]之间。但在<code>DirectX</code>中，z分量在[0, w]之间，上面的透视矩阵就要更改了。</p><p>用上一步观察空间得到的坐标和投影矩阵相乘，就可以变换到裁剪空间中：</p><p>$$\mathbf p_{clip}=\mathbf M_{frustum}\mathbf P_{view}=\left[\begin{array}{cccc}\frac{\cot \frac{F O V}{2}}{A s p e c t} & 0 & 0 & 0 \\0 & \cot \frac{F O V}{2} & 0 & 0 \\0 & 0 & -\frac{F a r+N e a r}{F a r-N e a r} & -\frac{2 \cdot N e a r \cdot F a r}{F a r-N e a r} \\0 & 0 & -1 & 0\end{array}\right]\left[\begin{array}{l}x \\y \\z \\1\end{array}\right]=\left[\begin{array}{c}x\frac{\cot \frac{F O V}{2}}{A s p e c t}  \\y \cot \frac{F O V}{2} \\-z \frac{F a r+N e a r}{F a r-N e a r}-\frac{2 \cdot N e a r \cdot F a r}{F a r-N e a r} \\-z\end{array}\right]$$</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/mathjax@3.0.0/es5/tex-chtml.js"></script><script type="text/x-mathjax-config">  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});</script><p>本质就是对x、y、z做了不同的缩放（z还有个平移）。w也不再是1，而是z取反。最后通过x、y、z是否在[-w, w]中判断是否位于视锥体内。不在其内的会被剔除或裁剪，这样通过投影矩阵后，视锥体变化如下：</p><p><img src="projection_matrix0.png" alt="在透视投影中，投影矩阵对顶点进行了缩放。图中标注了4个关键点经过投影矩阵变换后的结果。从这些结果可以看出x、y、z和w分量的范围发生的变化"></p><h3 id="3-2-5-裁剪空间-正交投影"><a href="#3-2-5-裁剪空间-正交投影" class="headerlink" title="3.2.5 裁剪空间-正交投影"></a>3.2.5 裁剪空间-正交投影</h3><div align=center><img src="orthographic_frustum.png" alt="正交摄像机的参数对正交投影视锥体的影响" style="zoom:80%;" /></div><p>视锥体是个长方体，因此不需要FOV了，用Size代替了，Size是高度的一半,Aspect是横纵比。因此，我们得到公式：<br>$$<br>nearClipPlaneHeight =2 \cdot Size<br>$$<br>$$<br>farClipPlaneHeight = nearclipPlaneHeight<br>$$<br>$$<br>nearclipPlaneWidth = Aspect \cdot nearClipPlaneHeight<br>$$<br>$$<br>farClipPlaneWidth = nearClipPlaneWidth<br>$$</p><p>这样，可以得到正交投影的裁剪矩阵：</p><p>$$\begin{aligned}\mathbf p_{cip}=\mathbf M_{ortho} \mathbf P_{view} &=\left[\begin{array}{ccc}\frac{1}{\text {Aspect} \cdot \text {Size}} & 0 & 0 & 0 \\0 & \frac{1}{\text {Size}} & 0 & 0 \\0 & 0 & -\frac{2}{\text {Far}-\text {Near}} & -\frac{\text {Far}+\text {Near}}{\text {Far}-\text {Near}} \\0 & 0 & 0 & 1\end{array}\right]\left[\begin{array}{l}x \\y \\z \\1\end{array}\right]=\left[\begin{array}{l}\frac{x}{\text {Aspect} \cdot \text {Size}}\\\frac{y}{\text {Size}} \\-\frac{2 z}{\text {Far}-\text {Near}}-\frac{\text {Far}+\text {Near}}{\text {Far}-\text {Near}} \\1\end{array}\right]\end{aligned}$$</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/mathjax@3.0.0/es5/tex-chtml.js"></script><script type="text/x-mathjax-config">  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});</script><p>然后观察空间的顶点与矩阵相乘：<br>\frac{x}{\text {Aspect} \cdot \text {Size}}</p><p>可以看出，w分量依然为1。判断是否位于裁剪空间内与透视投影一样，x、y、z是否在[-w, w]之间。通过投影矩阵后，视锥体变化如下：</p><p><img src="orthographic_matrix0.png" alt="在正交投影中，投影矩阵对顶点进行了缩放。图中标注了4个关键点经过投影矩阵变换后的结果。从这些结果可以看出x、y、z和w分量范围发生的变化"></p><p>可以看出，变换后空间从长方体变成正方体了，范围是[-1, 1]。</p><h2 id="3-3-屏幕空间"><a href="#3-3-屏幕空间" class="headerlink" title="3.3 屏幕空间"></a>3.3 屏幕空间</h2><p>经过投影矩阵变换后，我们完成了裁剪工作，开始正式投影了，把视锥体投影到屏幕空间。屏幕空间是个二维空间，投影的过程分为两步：</p><p>首先，要进行齐次除法，也被称为透视除法。就是用x、y、z分量除以w分量。在OpenGL中，这一步得到的坐标叫<strong>归一化的设备坐标</strong>（<strong>NDC</strong>,Normalized Device Coordinates）。经过这一步，我们把坐标从齐次裁剪空间转换到NDC中，这样会使透视投影的类似金字塔形状的空间变成正方体，并且和正交投影的一样：</p><p><img src="projection_matrix1.png" alt="经过齐次除法后，透视投影的裁剪空间会变换到一个立方体"></p><p><img src="orthographic_matrix1.png" alt="经过齐次除法后，正交投影的裁剪空间会变换到一个立方体"></p><p>透视投影坐标经裁剪矩阵变换后<code>w</code>是<code>-z</code>，所以坐标x、y、z都除以<code>-z</code>就得到了右边的样子。而正交投影变换后<code>w</code>是<code>1</code>，所以除以1没变化，这样两种投影方式就都是一样的正方体了。</p><p>现在，我们开始屏幕映射了。Unity左下角坐标是（0, 0），右上角是（pixelWidth, pixelHeight），现在经过齐次除法后x、y的范围是[-1, 1]，所以这个过程就是个缩放的过程。</p><blockquote><p>首先把x、y变到[0, 1]，比如x = (x+1) / 2，然后再乘以pixelWidth就是映射后的x了，当然这里的x，y都是裁剪空间的坐标除以w。</p></blockquote><p>齐次除法和屏幕映射的过程可以使用下面的公式来总结：</p><p>$$\begin{array}{l}\text {screen}_{x}=\frac{\operatorname{clip}_{x} \cdot \text {pixelWidth}}{2 \cdot \operatorname{clip}_{w}}+\frac{\text {pixelWidth}}{2} \\\text {screen}_{y}=\frac{\text {clip}_{y} \cdot \text {pixelHeight}}{2 \cdot \operatorname{clip}_{w}}+\frac{\text {pixelHeight}}{2}\end{array}$$</p><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/mathjax@3.0.0/es5/tex-chtml.js"></script><script type="text/x-mathjax-config">  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});</script><p>在上式中，x、y被用作投影了，z分量会被用于深度缓冲，传统方式是z/w直接存进深度缓冲，但这不是必须的，驱动生产商会根据硬件来选择最好的存储格式。</p><h1 id="4-法线变换"><a href="#4-法线变换" class="headerlink" title="4. 法线变换"></a>4. 法线变换</h1><p>在游戏中，模型的顶点携带的信息中，法线就是其中一种。我们变换一个模型，不仅需要变换它的顶点，还需要变换顶点法线，以便在后续处理（如片元着色器）中计算光照等。</p><p>但在变换法线的时候，如果使用同一个变换矩阵，可能就无法确保维持法线的垂直性。</p><p><img src="transform_normal.png" alt="进行非统一缩放时，如果使用和变换顶点相同的变换矩阵来变换法线，就会得到错误的结果，即变换后的法线方向与平面不再垂直"></p><p>因此，在法线的变换过程中，我们使用原变换矩阵的<code>逆转置矩阵</code>来变换法线就可以得到正确的结果。</p><p>因为逆矩阵的计算比较麻烦，所以我们可以根据变换类型尽可能的避免逆矩阵的计算过程：</p><ul><li>变换只包括旋转变换，那么这个变换矩阵就是正交矩阵（正交矩阵的转置矩阵与逆矩阵相同）；</li><li>变换只包括旋转和统一缩放，则可以利用统一缩放指数<em>k</em>来得到变换矩阵的逆转置矩阵；</li><li>变换包括了非统一变换，则必须求解逆转置矩阵。</li></ul><h1 id="5-总结"><a href="#5-总结" class="headerlink" title="5. 总结"></a>5. 总结</h1><p>顶点着色器的最基本的任务就是把顶点坐标从模型空间转换到裁剪空间中。而在片元着色器中，我们通常也可以得到该片元在屏幕空间的像素位置。</p><p>通常在变换顶点时，我们都是使用<code>右乘</code>的方式来按<code>列矩阵</code>进行乘法。这是因为Unity提供的内置矩阵（如UNITY_MATRIX_MVP<code>(模型观察投影矩阵)</code>等）都是按照列存储的。</p><div align=center><p><img src="vertex_conversion.png" alt="渲染流水线中顶点的空间变换过程"></p></div><p>在Unity中，坐标系的旋向性也随着变换发生了转变。下图总结了Unity中各个空间使用的坐标系旋向性。</p><div align=center><p><img src="space_handness.png" alt="Unity中各个坐标空间的旋向性"></p></div>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;这几天重新回顾了一下图形学在Unity中的应用。主要是针对矩阵变换、坐标空间和法线变换的内容。</summary>
    
    
    
    <category term="计算机图形学" scheme="http://www.zanple.top/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/"/>
    
    
    <category term="Unity" scheme="http://www.zanple.top/tags/Unity/"/>
    
    <category term="Shader" scheme="http://www.zanple.top/tags/Shader/"/>
    
    <category term="计算机图形学" scheme="http://www.zanple.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>C4D短片-归来</title>
    <link href="http://www.zanple.top/2020/01/07/c4d-guilai/"/>
    <id>http://www.zanple.top/2020/01/07/c4d-guilai/</id>
    <published>2020-01-07T10:59:31.000Z</published>
    <updated>2020-09-05T08:16:45.909Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>三维动画实训的课设，和另一个同学合作的作品。<a id="more"></a></p></blockquote><div class="bilibili"><iframe src="//player.bilibili.com/player.html?aid=625033347&bvid=BV1zt4y1m7TC&cid=172051108&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe></div><hr><h1 id="1-主题"><a href="#1-主题" class="headerlink" title="1. 主题"></a>1. 主题</h1><p>“作为联合国秘书长，一个拥有147个成员国，代表了几乎所有地球居民的组织，我向你们送去全人类的问候……”。1977年，人类发射了旅行者一号探测器携带者一张金唱片，旨在向“外星人”表达人类的问候。多年以后，在太空漂流了很多年的旅行者飞回了地球。然而，由于人类对地球资源的过度开发及严重污染，加上科技的发展，人类已抛弃地球前往太空寻找新家园了。</p><h1 id="2-镜头"><a href="#2-镜头" class="headerlink" title="2. 镜头"></a>2. 镜头</h1><ul><li>太空中的旅行者飞行；</li><li>旅行者坠落；</li><li>旅行者内部、金唱片；</li><li>破败的地球城市；</li><li>收音机响起：“人工智能时代已经来临！只需一个机器人，你的生活质量就能无限提高！嗞嗞…… “旅行者”号已经成功发射！它将代表我们人类去寻找宇宙中的“朋友们”！嗞嗞……环境日益恶化，地球将不再适合生存！“人类移民计划”启动！嗞嗞…..”</li></ul><h1 id="3-设定参考"><a href="#3-设定参考" class="headerlink" title="3. 设定参考"></a>3. 设定参考</h1><p>设定参考主要来自《银翼杀手2049》、《机器人总动员》。</p><p><img src="1585657763310.jpg" alt="设定参考1"></p><p><img src="1585657765225.jpg" alt="设定参考2"></p><p><img src="1585657766532.jpg" alt="设定参考3"></p><p>短片中破败的地球城市一开始的镜头就是参考的这张图，浓厚的烟雾，空荡的道路天桥，远处宏大模糊的建筑物。</p><p><img src="1585657767781.jpg" alt="设定参考4"></p><p><img src="Snipaste_2019-10-21_16-35-11-1585656959178.png" alt="设定参考5"></p><p>这张是来自《机器总动员》，主要也是参照了上面的建筑物废墟。</p><h1 id="4-场景"><a href="#4-场景" class="headerlink" title="4. 场景"></a>4. 场景</h1><h2 id="4-1-外太空"><a href="#4-1-外太空" class="headerlink" title="4.1 外太空"></a>4.1 外太空</h2><p>这个场景一开始打算直接用C4D自带的渲染器渲染的，但是考虑到外太空镜头中的旅行者号有一个点火移动的特效要利用TurbulenceFD构建，所以地球部分是直接在C4D自带的渲染器渲染，然后采取同样的方式对旅行者号进行打光，利用octane渲染为alpha图层。最后在Pr合成这个场景。</p><div align=center><p><img src="image-20200331201829240.png" alt="外太空地球的模型"></p><p><img src="image-20200331201836400.png" alt="外太空地球的效果图"></p><p><img src="image-20200331201850853.png" alt="地球表面材质"></p><p><img src="image-20200331201900856.png" alt="地球云层材质"></p><p><img src="image-20200331201906936.png" alt="地球大气层材质"></p></div><ul><li>地球模型由表面球体、云层、大气层构成；</li></ul><div align=center><p>  <img src="image-20200331201934353.png" alt="地球表面材质"></p><p>  <img src="image-20200331201947771.png" alt="地球云层材质"></p>  </div><ul><li>背景星空由天空贴图与噪波贴图组成。</li></ul><h2 id="4-2-外太空的旅行者号（oc渲染）"><a href="#4-2-外太空的旅行者号（oc渲染）" class="headerlink" title="4.2 外太空的旅行者号（oc渲染）"></a>4.2 外太空的旅行者号（oc渲染）</h2><div align=center><p><img src="image-20200331202040073.png" alt="外太空旅行者的模型"></p><p><img src="image-20200331202045406.png" alt="外太空旅行者的效果图"></p><p><img src="image-20200331202101466.png" alt="流体模拟的火焰效果图"></p><p>因为这是一个外太空场景，所以通常的火焰效果在这里不适用（有燃烧后的烟），反复模拟后最终实现一个太空飞船的尾焰的效果。</p><p><img src="image-20200331202119658.png" alt="TurbulenceFD粒子插件部分参数"></p></div><ul><li>旅行者的喷射效果使用TurbulenceFD粒子插件构建，并使用【发射器】完成粒子的发射效果。</li></ul><h2 id="4-3-废弃的城市"><a href="#4-3-废弃的城市" class="headerlink" title="4.3 废弃的城市"></a>4.3 废弃的城市</h2><p>这个场景花了比较长的时间去完成，在一开始使用<code>烟雾</code>觉得不够真实，在看了一个教程后转用<code>物理天空</code>进行模拟。为了实现厚重的烟雾效果，在场景的左上方进行补光。</p><div align=center><p><img src="image-20200331202146462.png" alt="废弃的城市的模型"></p><p><img src="image-20200331202151320.png" alt="废弃的城市的效果图"></p><p><img src="image-20200331202212603.png" alt="废弃的城市的模型"></p><p><img src="image-20200331202215912.png" alt="废弃的城市的效果图"></p><p><img src="image-20200331202219016.png" alt="废弃的城市的模型"></p><p><img src="image-20200331202225552.png" alt="废弃的城市的效果图"></p><p>参考了《银翼杀手2049》，将一些大型乌托邦风格建筑放在光线的前方，形成若隐若现的感觉。</p><p><img src="image-20200331202242207.png" alt="废弃的城市建筑群"></p></div><ul><li>废弃的城市场景比较庞大，部分建筑模型来自模型库；将不同的建筑组合到一起，并构建了路面、高架桥、废弃汽车、路标等完成场景的搭建；</li></ul><div align=center><p><img src="image-20200331202300935.png" alt="路面材质及凹凸效果"></p><p><img src="image-20200331202307535.png" alt="路面材质及凹凸效果"></p></div><ul><li>人行道和公路一开始为了渲染的工作量就用了纹理贴图，但纹理贴图在镜头拉近时地面就会显得不够真实，于是加了法线贴图来制造凹凸不平的地面；</li></ul><div align=center><p><img src="image-20200331202321993.png" alt="路面贴图"></p><p><img src="image-20200331202328500.png" alt="广告牌贴图"></p><p><img src="image-20200331202334957.png" alt="路标贴图"></p></div><ul><li>路面、广告牌及路标使用颜色纹理贴图；</li></ul><div align=center><p><img src="image-20200331202348201.png" alt="物理天空烟雾参数"></p><p><img src="image-20200331202359392.png" alt="聚光灯补光"></p></div><ul><li>利用Cinema4D的物理天空打造沙尘暴效果，提高摄像机焦距并另外使用聚光灯使烟雾效果更明显；</li></ul><h2 id="4-4-旅行者坠落（oc渲染）"><a href="#4-4-旅行者坠落（oc渲染）" class="headerlink" title="4.4 旅行者坠落（oc渲染）"></a>4.4 旅行者坠落（oc渲染）</h2><div align=center><p><img src="image-20200331202445489.png" alt="旅行者坠落的模型"></p><p><img src="image-20200331202450047.png" alt="旅行者坠落的效果图"></p></div><h2 id="4-5-旅行者内部-oc渲染"><a href="#4-5-旅行者内部-oc渲染" class="headerlink" title="4.5 旅行者内部(oc渲染)"></a>4.5 旅行者内部(oc渲染)</h2><p>这个场景的另一个同学做的，也是用了oc渲染。</p><div align=center><p><img src="image-20200331202530197.png" alt="旅行者内部模型"></p><p><img src="image-20200331202534588.png" alt="旅行者内部效果图"></p><p><img src="image-20200331202546270.png" alt="金唱片模型"></p><p><img src="image-20200331202551385.png" alt="金唱片效果图"></p></div><h2 id="4-6-荒废城市外"><a href="#4-6-荒废城市外" class="headerlink" title="4.6 荒废城市外"></a>4.6 荒废城市外</h2><p>这个放在片尾，当作是一个彩蛋对短片的设定进行补充。</p><div align=center><p><img src="image-20200331202704109.png" alt="荒废城市外模型"></p><p><img src="image-20200331202621559.png" alt="荒废城市外效果图"></p><p>一开始的预想是放一台收音机，在实践后感觉收音机与场景的匹配度不高，所以换成了一台电报机。</p><p><img src="image-20200331203117150.png" alt="电报机贴图"></p></div><h1 id="5-后期处理"><a href="#5-后期处理" class="headerlink" title="5. 后期处理"></a>5. 后期处理</h1><p>后期基本上都是在Pr完成的，在风格的处理上用到了几个滤镜：</p><ul><li>SL CLEAN FUJI A NDR</li><li>SL CLEAN FUJI A HDR</li><li>SL CLEAN KODAK A HDR</li><li>SL CLEAN KODAK B ULTRASOFT</li></ul><p>字幕制作强推Arctime！人性化的操作，比Pr的字幕制作好用多了。</p><h1 id="6-总结"><a href="#6-总结" class="headerlink" title="6. 总结"></a>6. 总结</h1><p>整个短片从一开始到最后的完成还是有一些不足的地方。</p><ul><li>废弃的城市最后渲染出来发现了阴影的问题，最后检查是因为补光的灯光没有关闭阴影，所以与物理天空中的阳光的阴影产生了冲突。（但是因为没有时间再重新渲染一遍了(T_T)）</li><li>荒废成实外的电报机场景烟雾存在问题，烟雾中的波状涡流，高度和动画速率都没有调好，导致渲染出来烟雾比较奇怪。</li><li>由于渲染时间要花比较久（主要是配置不行），自带的渲染器渲染中都没有打开全局光照和环境光屏蔽，Octane渲染的采样率就开了400，所以效果也不是很好。例如废弃的城市就出现了黑的地方太黑，旅行者坠落场景出现了噪点。</li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;三维动画实训的课设，和另一个同学合作的作品。</summary>
    
    
    
    <category term="C4D" scheme="http://www.zanple.top/categories/C4D/"/>
    
    
    <category term="建模" scheme="http://www.zanple.top/tags/%E5%BB%BA%E6%A8%A1/"/>
    
    <category term="3ds Max" scheme="http://www.zanple.top/tags/3ds-Max/"/>
    
    <category term="C4D" scheme="http://www.zanple.top/tags/C4D/"/>
    
    <category term="works" scheme="http://www.zanple.top/tags/works/"/>
    
    <category term="短片" scheme="http://www.zanple.top/tags/%E7%9F%AD%E7%89%87/"/>
    
    <category term="Octane" scheme="http://www.zanple.top/tags/Octane/"/>
    
  </entry>
  
  <entry>
    <title>灯塔网</title>
    <link href="http://www.zanple.top/2020/01/02/beacon-web/"/>
    <id>http://www.zanple.top/2020/01/02/beacon-web/</id>
    <published>2020-01-02T08:09:32.000Z</published>
    <updated>2020-09-05T08:17:48.528Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>算是一个比较完整的项目，作为交互设计的课设本身，前期做了大量关于用户调研的工作，然后进行原型设计、UI设计，最后实现整个网站的前端和后端。<a id="more"></a></p></blockquote><p><img src="%E5%B9%BB%E7%81%AF%E7%89%871.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%872.JPG" alt=" "></p><h1 id="1-团队介绍"><a href="#1-团队介绍" class="headerlink" title="1. 团队介绍"></a>1. 团队介绍</h1><p><img src="%E5%B9%BB%E7%81%AF%E7%89%873.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%874.JPG" alt=" "></p><h1 id="2-产品介绍"><a href="#2-产品介绍" class="headerlink" title="2. 产品介绍"></a>2. 产品介绍</h1><p><img src="%E5%B9%BB%E7%81%AF%E7%89%875.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%876.JPG" alt=" "></p><h1 id="3-领域调研"><a href="#3-领域调研" class="headerlink" title="3. 领域调研"></a>3. 领域调研</h1><p><img src="%E5%B9%BB%E7%81%AF%E7%89%877.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%878.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%879.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8710.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8711.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8712.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8713.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8714.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8715.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8716.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8717.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8718.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8719.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8720.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8721.JPG" alt=" "></p><h1 id="4-用户研究"><a href="#4-用户研究" class="headerlink" title="4. 用户研究"></a>4. 用户研究</h1><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8722.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8723.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8724.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8725.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8726.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8727.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8728.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8729.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8730.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8731.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8732.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8733.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8734.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8735.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8736.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8737.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8738.JPG" alt=" "></p><h1 id="5-交互设计"><a href="#5-交互设计" class="headerlink" title="5. 交互设计"></a>5. 交互设计</h1><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8739.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8740.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8741.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8742.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8743.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8744.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8745.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8746.JPG" alt=" "></p><h1 id="6-视觉设计"><a href="#6-视觉设计" class="headerlink" title="6. 视觉设计"></a>6. 视觉设计</h1><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8747.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8748.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8749.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8750.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8751.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8752.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8753.JPG" alt=" "></p><p><img src="%E5%B9%BB%E7%81%AF%E7%89%8754.JPG" alt=" "></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;算是一个比较完整的项目，作为交互设计的课设本身，前期做了大量关于用户调研的工作，然后进行原型设计、UI设计，最后实现整个网站的前端和后端。</summary>
    
    
    
    <category term="交互设计" scheme="http://www.zanple.top/categories/%E4%BA%A4%E4%BA%92%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="works" scheme="http://www.zanple.top/tags/works/"/>
    
    <category term="UI" scheme="http://www.zanple.top/tags/UI/"/>
    
    <category term="Web" scheme="http://www.zanple.top/tags/Web/"/>
    
    <category term="交互设计" scheme="http://www.zanple.top/tags/%E4%BA%A4%E4%BA%92%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="JSP" scheme="http://www.zanple.top/tags/JSP/"/>
    
    <category term="原型设计" scheme="http://www.zanple.top/tags/%E5%8E%9F%E5%9E%8B%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>Java横板小游戏</title>
    <link href="http://www.zanple.top/2019/12/24/java-2d-act/"/>
    <id>http://www.zanple.top/2019/12/24/java-2d-act/</id>
    <published>2019-12-24T14:30:04.000Z</published>
    <updated>2020-03-31T08:39:18.070Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一个类似超级马里奥兄弟的ACT游戏，通过Java实现。</p><p><a href="Java-Game.jar">下载试玩~</a><a id="more"></a></p></blockquote><h1 id="1-游戏设计"><a href="#1-游戏设计" class="headerlink" title="1. 游戏设计"></a>1. 游戏设计</h1><h2 id="1-1-游戏规则"><a href="#1-1-游戏规则" class="headerlink" title="1.1 游戏规则"></a>1.1 游戏规则</h2><p>玩家初始的生命值为<code>5</code>，生命值耗尽则游戏结束。游戏为单向走动，无法后退，消灭敌人达到<code>500分</code>即可通关。其中，踩死敌人<code>+100分</code>，射击击杀敌人<code>+50分</code>。若玩家角色在游戏过程中跌入悬崖，则消耗所有生命值。玩家角色在游戏中通过各类道具可获得特殊功能：红心增加<code>1</code>个生命值，守护天使给予玩家<code>5秒</code>的无敌时间，跳跳靴提高玩家的跳跃高度。</p><h2 id="1-2-游戏程序流程图"><a href="#1-2-游戏程序流程图" class="headerlink" title="1.2 游戏程序流程图"></a>1.2 游戏程序流程图</h2><div align=center><p><img src="clip_image002.png" alt="游戏程序流程图"></p></div><h2 id="1-3-类设计"><a href="#1-3-类设计" class="headerlink" title="1.3 类设计"></a>1.3 类设计</h2><div align=center><p><img src="clip_image002-1585407131127.png" alt="游戏类关系图"></p></div><h2 id="1-4-模块设计"><a href="#1-4-模块设计" class="headerlink" title="1.4 模块设计"></a>1.4 模块设计</h2><div align=center><p><img src="clip_image002-1585407149843.png" alt="游戏模块功能图"></p></div><h3 id="1-4-1-游戏精灵模块"><a href="#1-4-1-游戏精灵模块" class="headerlink" title="1.4.1 游戏精灵模块"></a>1.4.1 游戏精灵模块</h3><p>此模块可以分为玩家角色、电脑角色和道具。玩家角色可进行行走、跳跃、踩死敌人、射击敌人的操作，并有生命值的显示；电脑角色可以在一定的范围内追逐玩家；道具则分为增加生命值、增加跳跃高度、无敌状态的道具。</p><h3 id="1-4-2-地图模块"><a href="#1-4-2-地图模块" class="headerlink" title="1.4.2 地图模块"></a>1.4.2 地图模块</h3><p>地图模块分为卷轴模块和砖块模块，卷轴模块将图片的循环单向填充到游戏窗口；砖块模块根据游戏地图将对应的砖块绘制到游戏窗口。</p><h3 id="1-4-3-音乐音效模块"><a href="#1-4-3-音乐音效模块" class="headerlink" title="1.4.3 音乐音效模块"></a>1.4.3 音乐音效模块</h3><p>游戏背景音乐由音乐模块完成，音效音乐由音效模块完成。</p><h1 id="2-详细设计"><a href="#2-详细设计" class="headerlink" title="2. 详细设计"></a>2. 详细设计</h1><h2 id="2-1-卷轴图像"><a href="#2-1-卷轴图像" class="headerlink" title="2.1 卷轴图像"></a>2.1 卷轴图像</h2><h3 id="2-1-1卷轴的滚动显示"><a href="#2-1-1卷轴的滚动显示" class="headerlink" title="2.1.1卷轴的滚动显示"></a>2.1.1卷轴的滚动显示</h3><p>定义一个变量xImHead用来指示图像左边缘与窗口左边缘的相对位置，初值为零，当该值大于零时表示图像左边缘在窗口右侧，小于零时则表示在窗口左侧。根据图像是否滚动填充游戏窗口。</p><div align=center><p><img src="clip_image002.jpg" alt="图像没有滚动"></p><p><img src="clip_image002-1585407783032.jpg" alt="图像开始向右滚动"></p><p><img src="clip_image002-1585407789297.jpg" alt="图像继续向右滚动"></p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">(Graphics g)</span> </span>&#123;              <span class="comment">//绘制卷轴型图像</span></span><br><span class="line">   <span class="keyword">if</span> (xImHead == <span class="number">0</span>) &#123;                      <span class="comment">//情形1</span></span><br><span class="line">      drawRibbon(g, bim, <span class="number">0</span>, pWidth, <span class="number">0</span>, pWidth);</span><br><span class="line">   &#125; </span><br><span class="line">   <span class="keyword">else</span> <span class="keyword">if</span> ((xImHead &gt; <span class="number">0</span>) &amp;&amp; (xImHead &lt; pWidth)) &#123;             <span class="comment">//情形2</span></span><br><span class="line">      drawRibbon(g, bim, <span class="number">0</span>, xImHead, width - xImHead, width);</span><br><span class="line">      drawRibbon(g, bim, xImHead, pWidth, <span class="number">0</span>, pWidth - xImHead);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span> <span class="keyword">if</span> (xImHead &gt;= pWidth) &#123;                       <span class="comment">//情形3</span></span><br><span class="line">      drawRibbon(g, bim, <span class="number">0</span>, pWidth, width - xImHead, width - xImHead + pWidth);</span><br><span class="line">   &#125; </span><br><span class="line">   <span class="keyword">else</span> <span class="keyword">if</span> ((xImHead &lt; <span class="number">0</span>) &amp;&amp; (xImHead &gt;= pWidth - width)) &#123;   <span class="comment">//情形4</span></span><br><span class="line">      drawRibbon(g, bim, <span class="number">0</span>, pWidth, -xImHead, pWidth - xImHead);</span><br><span class="line">   &#125; </span><br><span class="line">   <span class="keyword">else</span> <span class="keyword">if</span> (xImHead &lt; pWidth - width) &#123;                  <span class="comment">//情形5</span></span><br><span class="line">      drawRibbon(g, bim, <span class="number">0</span>, width + xImHead, -xImHead, width);</span><br><span class="line">      drawRibbon(g, bim, width + xImHead, pWidth, <span class="number">0</span>, pWidth - width - xImHead);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-1-2卷轴的单向滚动"><a href="#2-1-2卷轴的单向滚动" class="headerlink" title="2.1.2卷轴的单向滚动"></a>2.1.2卷轴的单向滚动</h3><p>让游戏场景只能从左到右单向滚动（类似超级玛丽）,在玩家向左运动时停止卷轴背景的滚动，并保证玩家角色不会走出左边屏幕边缘。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> RUNLT:<span class="comment">//考虑玩家向左运动的情况</span></span><br><span class="line"><span class="comment">//若玩家向左移动到屏幕的最左端</span></span><br><span class="line"><span class="keyword">if</span> (gameWorld.getOffsetX() &lt;= gameWorld.getOffsetX()  || (locX &gt; GamePanel.WIDTH / <span class="number">2</span>)) &#123;</span><br><span class="line"><span class="keyword">if</span>(locX&gt;<span class="number">0</span>) &#123;<span class="comment">//在屏幕范围内</span></span><br><span class="line">setDX(<span class="number">5</span>);</span><br><span class="line">locX -= dx;                 <span class="comment">//减少玩家的横坐标值</span></span><br><span class="line">gameWorld.canScroll = <span class="keyword">false</span>;<span class="comment">//停止卷轴背景滚动</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-1-3载入地图"><a href="#2-1-3载入地图" class="headerlink" title="2.1.3载入地图"></a>2.1.3载入地图</h3><p>定义TileMap类用来表示游戏中所有砖块型图像的集合，并统一地对其进行坐标更新和图像绘制。同时定义一个二维的BufferedImage类型数组tiles[][]用来存放各个砖块型图像，该数组的大小由砖块地图文件中字符的行数和列数确定。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//读取砖块地图文件信息并生成TileMap对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> TileMap <span class="title">loadTileMap</span><span class="params">(String filename)</span> </span>&#123;</span><br><span class="line">        ArrayList lines = <span class="keyword">new</span> ArrayList();          <span class="comment">//存放tileMap中每一行的字符信息</span></span><br><span class="line">        <span class="keyword">int</span> width = <span class="number">0</span>;                              <span class="comment">//tileMap的宽度</span></span><br><span class="line">        <span class="keyword">int</span> height = <span class="number">0</span>;                             <span class="comment">//tileMap的高度</span></span><br><span class="line">        <span class="comment">//逐行地读取砖块地图中的内容</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//用字符输入流对象reader来载入砖块地图中的全部</span></span><br><span class="line">        BufferedReader reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(getClass().getResourceAsStream(filename)));</span><br><span class="line">            <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                String line = reader.readLine();             <span class="comment">//读取一行字符串</span></span><br><span class="line">                <span class="keyword">if</span> (line == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    reader.close();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (!line.startsWith(<span class="string">"#"</span>)) &#123;</span><br><span class="line">                    lines.add(line);                        <span class="comment">//将字符串对象Line加入数组列表中</span></span><br><span class="line">                    width = Math.max(width, line.length()); <span class="comment">//获取砖块地图的宽度</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">        height = lines.size();                              <span class="comment">//获取砖块地图的高度</span></span><br><span class="line">        TileMap newMap = <span class="keyword">new</span> TileMap(width, height);        <span class="comment">//建立TileMap对象</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> y = <span class="number">0</span>; y &lt; height; y++) &#123;                  <span class="comment">//循环地读取砖块地图文件中的所有字符，并分别进行处理</span></span><br><span class="line">            String line = (String) lines.get(y);            <span class="comment">//读取某行字符信息</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; line.length(); x++) &#123;</span><br><span class="line">                <span class="keyword">char</span> ch = line.charAt(x);                   <span class="comment">//对不同字符类型进行判断</span></span><br><span class="line">                <span class="keyword">int</span> tile = ch - <span class="string">'A'</span>;</span><br><span class="line">                <span class="keyword">if</span> (tile &gt;= <span class="number">0</span> &amp;&amp; tile &lt; tiles.size()) &#123;     <span class="comment">//若为字母，则载入相应的砖块型图像</span></span><br><span class="line">                    newMap.setTile(x, y, (BufferedImage) tiles.get(tile));</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> ((ch - <span class="string">'0'</span>) == <span class="number">0</span>) &#123;               <span class="comment">//若读取数字字符则载入对应敌人</span></span><br><span class="line">                    EnemyProp eny = <span class="keyword">new</span> EnemyProp(x * TILE_SIZE, y * TILE_SIZE, EnemyProp.ANPC ,<span class="string">"npc0"</span>, <span class="number">4</span>, <span class="keyword">this</span>);</span><br><span class="line">                    sprites.add(eny);                       <span class="comment">//加入数组列表</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> ((ch - <span class="string">'1'</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">                    EnemyProp eny = <span class="keyword">new</span> EnemyProp(x * TILE_SIZE, y * TILE_SIZE, EnemyProp.ANPC ,<span class="string">"npc1"</span>, <span class="number">4</span>, <span class="keyword">this</span>);</span><br><span class="line">                    sprites.add(eny);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> ((ch - <span class="string">'2'</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">                    EnemyProp eny = <span class="keyword">new</span> EnemyProp(x * TILE_SIZE, y * TILE_SIZE, EnemyProp.ANPC ,<span class="string">"npc2"</span>, <span class="number">6</span>, <span class="keyword">this</span>);</span><br><span class="line">                    sprites.add(eny);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> ((ch - <span class="string">'3'</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">                    EnemyProp eny = <span class="keyword">new</span> EnemyProp(x * TILE_SIZE, y * TILE_SIZE, EnemyProp.ANPC ,<span class="string">"npc3"</span>, <span class="number">6</span>, <span class="keyword">this</span>);</span><br><span class="line">                    sprites.add(eny);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> ((ch - <span class="string">'!'</span>) == <span class="number">0</span>) &#123;             <span class="comment">//若为字符，则载入对应道具</span></span><br><span class="line">                    EnemyProp eny = <span class="keyword">new</span> EnemyProp(x * TILE_SIZE, y * TILE_SIZE, EnemyProp.SNPC ,<span class="string">"heart"</span>, <span class="keyword">this</span>);</span><br><span class="line">                    sprites.add(eny);                   <span class="comment">//加入数组列表</span></span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span> ((ch - <span class="string">'*'</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">                    EnemyProp eny = <span class="keyword">new</span> EnemyProp(x * TILE_SIZE, y * TILE_SIZE, EnemyProp.SNPC ,<span class="string">"star"</span>,<span class="keyword">this</span>);</span><br><span class="line">                    sprites.add(eny);                   <span class="comment">//加入数组列表</span></span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span> ((ch - <span class="string">'?'</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">                    EnemyProp eny = <span class="keyword">new</span> EnemyProp(x * TILE_SIZE, y * TILE_SIZE, EnemyProp.SNPC ,<span class="string">"power"</span>,<span class="keyword">this</span>);</span><br><span class="line">                    sprites.add(eny);                   <span class="comment">//加入数组列表</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> newMap;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="2-1-4垂直滚动场景"><a href="#2-1-4垂直滚动场景" class="headerlink" title="2.1.4垂直滚动场景"></a>2.1.4垂直滚动场景</h3><p>若玩家跳跃后站在了砖块上，同时其图像的底端超出了游戏窗口的上边缘，则开始向上滚动砖块地图；若玩家下落时掉出了游戏窗口下边缘（但没有掉出砖块地图），则开始向下滚动砖块地图。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> UpScrollY:<span class="comment">//考虑向上滚动砖块地图的情况</span></span><br><span class="line">gameP.removeKeyListener(gameP);<span class="comment">//移除键盘按键事件监听</span></span><br><span class="line"><span class="keyword">if</span> (scrollCount &gt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="comment">//若滚动计数值大于0，则停止背景的水平滚动和玩家的水平移动</span></span><br><span class="line">gameWorld.canMoveLeft = <span class="keyword">false</span>;</span><br><span class="line">gameWorld.canMoveRight = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">if</span> (runningState == RUNRT) &#123;</span><br><span class="line">runningState = STDRT;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (runningState == RUNLT) &#123;</span><br><span class="line">runningState = STDLT;</span><br><span class="line">&#125;</span><br><span class="line">scrollCount -= <span class="number">5</span>;<span class="comment">//减少滚动计数值</span></span><br><span class="line">offsetY -= <span class="number">5</span>;<span class="comment">//减少垂直方向偏移值</span></span><br><span class="line">locY += <span class="number">5</span>;<span class="comment">//增加玩家纵坐标值</span></span><br><span class="line">gameWorld.setOffsetY(offsetY);<span class="comment">//更新游戏世界的垂直偏移值</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;<span class="comment">//若滚动计数值小于等于0，则</span></span><br><span class="line">scrollCount = GamePanel.HEIGHT;<span class="comment">//重置滚动计数值为窗口的高度</span></span><br><span class="line">gameP.addKeyListener(gameP);<span class="comment">//添加键盘按键事件监听</span></span><br><span class="line">gameP.leftPressed = <span class="keyword">false</span>;</span><br><span class="line">gameP.rightPressed = <span class="keyword">false</span>;</span><br><span class="line">changeState(MOVE);<span class="comment">//将玩家状态切换为移动状态</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> DownScrollY:<span class="comment">//考虑向下滚动砖块地图的情况</span></span><br><span class="line">gameP.removeKeyListener(gameP);<span class="comment">//移除键盘按键事件监听</span></span><br><span class="line"><span class="keyword">if</span> (scrollCount &gt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="comment">//若滚动计数值大于0，则停止背景的水平滚动和玩家的水平移动</span></span><br><span class="line">gameWorld.canMoveLeft = <span class="keyword">false</span>;</span><br><span class="line">gameWorld.canMoveRight = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">if</span> (runningState == RUNRT) &#123;</span><br><span class="line">runningState = STDRT;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (runningState == RUNLT) &#123;</span><br><span class="line">runningState = STDLT;</span><br><span class="line">&#125;</span><br><span class="line">scrollCount -= <span class="number">5</span>;<span class="comment">//减少滚动计数值</span></span><br><span class="line">offsetY += <span class="number">5</span>;<span class="comment">//增加垂直方向偏移值</span></span><br><span class="line">locY -= <span class="number">5</span>;<span class="comment">//减少玩家纵坐标值</span></span><br><span class="line">gameWorld.setOffsetY(offsetY);<span class="comment">//更新游戏世界的垂直偏移值</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//若滚动计数值小于等于0，则</span></span><br><span class="line">scrollCount = GamePanel.HEIGHT;<span class="comment">//重置滚动计数值为窗口的高度</span></span><br><span class="line">gameP.addKeyListener(gameP);<span class="comment">//添加键盘按键事件监听</span></span><br><span class="line">gameP.leftPressed = <span class="keyword">false</span>;</span><br><span class="line">gameP.rightPressed = <span class="keyword">false</span>;</span><br><span class="line">changeState(MOVE);<span class="comment">//将玩家状态切换到移动状态</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//垂直方向上的角色坐标更新</span></span><br><span class="line">locY += dy;</span><br><span class="line"><span class="comment">//水平方向上场景滚动，角色坐标不变</span></span><br><span class="line"><span class="keyword">if</span> (locY + gameWorld.getOffsetY() &gt; gameWorld.tMap.getHeight()</span><br><span class="line">* gameWorld.tMap.TILE_SIZE)<span class="comment">//若玩家角色掉出了砖块地图的下边缘，则游戏结束</span></span><br><span class="line">changeState(DISMISS);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (locY &gt; GamePanel.HEIGHT)<span class="comment">//否则，若玩家角色掉出了游戏窗口的下边缘，则开始向下滚动砖块地图</span></span><br><span class="line">changeState(DownScrollY);</span><br><span class="line"></span><br><span class="line"><span class="comment">//更新玩家角色移动的精灵动画图像</span></span><br><span class="line"><span class="keyword">switch</span> (runningState) &#123;</span><br><span class="line"><span class="keyword">case</span> RUNRT:</span><br><span class="line">animRight.updateImage();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> RUNLT:</span><br><span class="line">animLeft.updateImage();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//玩家角色与砖块图像在垂直方向的碰撞检测</span></span><br><span class="line"><span class="keyword">if</span> (gameWorld.worldCollisionVertical(<span class="keyword">this</span>, thisPosition(),nextPosition(), offsetY)) &#123;</span><br><span class="line"><span class="keyword">if</span> (dy &gt; <span class="number">0</span>) &#123;<span class="comment">//若玩家角色处于下落过程中发生碰撞，则停止下落</span></span><br><span class="line">onGround = <span class="keyword">true</span>;<span class="comment">//玩家碰到地面</span></span><br><span class="line">setDY(<span class="number">0</span>);<span class="comment">//停止继续下落</span></span><br><span class="line"><span class="keyword">if</span> (locY + <span class="keyword">this</span>.getHeight() &lt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="comment">//若玩家角色图像的底端超过了游戏窗口的上边缘，则开始向上滚动砖块地图</span></span><br><span class="line">changeState(UpScrollY);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (dy &lt; <span class="number">0</span>) &#123;<span class="comment">//若是玩家处于跳起过程中发生碰撞</span></span><br><span class="line">isJumping = <span class="keyword">false</span>;<span class="comment">//角色开始转为下落</span></span><br><span class="line">jumpSpeed = -INISPEED;<span class="comment">//跳跃速度恢复到初始值</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-2-精灵"><a href="#2-2-精灵" class="headerlink" title="2.2 精灵"></a>2.2 精灵</h2><h3 id="2-2-1精灵图像的绘制"><a href="#2-2-1精灵图像的绘制" class="headerlink" title="2.2.1精灵图像的绘制"></a>2.2.1精灵图像的绘制</h3><p>首先将精灵图像文件保存至BufferedImage对象bim中，然后建立BufferedImage数组ims用来存放各个精灵图像，并在循环语句中通过调用drawImage()方法将bim中的图像分割为相同尺寸的精灵图像。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> BufferedImage[] setAnimImagesFromOneFile(String fnm, <span class="keyword">int</span> num) &#123;</span><br><span class="line">        BufferedImage bim = loadImage(fnm);                     <span class="comment">//读取名为fnm的图像文件</span></span><br><span class="line">        BufferedImage[] ims = <span class="keyword">new</span> BufferedImage[num];           <span class="comment">//存放各个精灵图像</span></span><br><span class="line">        <span class="keyword">int</span> imWidth = (<span class="keyword">int</span>) bim.getWidth() / num;               <span class="comment">//精灵图像的宽度</span></span><br><span class="line">        <span class="keyword">int</span> imHeight = bim.getHeight();                         <span class="comment">//精灵图像的高度</span></span><br><span class="line">        Graphics g;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</span><br><span class="line">            ims[i]= <span class="keyword">new</span> BufferedImage(imWidth,imHeight,BufferedImage.TYPE_INT_ARGB);</span><br><span class="line">            g=ims[i].getGraphics();</span><br><span class="line">            g.drawImage(bim, <span class="number">0</span>, <span class="number">0</span>, imWidth, imHeight, i*imWidth,<span class="number">0</span>,(i*imWidth)+imWidth,imHeight, <span class="keyword">null</span>);</span><br><span class="line">            g.dispose();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ims;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="2-3-角色与场景的交互"><a href="#2-3-角色与场景的交互" class="headerlink" title="2.3 角色与场景的交互"></a>2.3 角色与场景的交互</h2><h3 id="2-3-1精灵图像的绘制"><a href="#2-3-1精灵图像的绘制" class="headerlink" title="2.3.1精灵图像的绘制"></a>2.3.1精灵图像的绘制</h3><p>玩家的起跳、下落、走到地图边缘或是屏幕边缘的移动变化。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实现玩家角色在活动态下的行为</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">move</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//判定玩家角色是否进行跳跃，并进行相应的坐标值更新</span></span><br><span class="line"><span class="keyword">if</span> (!isJumping) &#123;<span class="comment">//非挑起阶段做自由落体运动</span></span><br><span class="line">dy += GRAVITY;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;<span class="comment">//跳起阶段做减速直线运动</span></span><br><span class="line">jumpSpeed += GRAVITY;</span><br><span class="line">setDY(jumpSpeed);</span><br><span class="line">onGround = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">if</span> (jumpSpeed &gt;= <span class="number">0</span>) &#123;<span class="comment">//若是达到最高点</span></span><br><span class="line">isJumping = <span class="keyword">false</span>;</span><br><span class="line">jumpSpeed = -INISPEED;<span class="comment">//跳跃速度的初始方向朝上</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//垂直方向上的角色坐标更新</span></span><br><span class="line">locY += dy;</span><br><span class="line"><span class="comment">//水平方向上场景滚动，角色坐标不变</span></span><br><span class="line"><span class="keyword">if</span> (locY + gameWorld.getOffsetY() &gt; gameWorld.tMap.getHeight()</span><br><span class="line">* gameWorld.tMap.TILE_SIZE)<span class="comment">//若玩家角色掉出了砖块地图的下边缘，则游戏结束</span></span><br><span class="line">changeState(DISMISS);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (locY &gt; GamePanel.HEIGHT)<span class="comment">//否则，若玩家角色掉出了游戏窗口的下边缘，则开始向下滚动砖块地图</span></span><br><span class="line">changeState(DownScrollY);</span><br><span class="line"></span><br><span class="line"><span class="comment">//更新玩家角色移动的精灵动画图像</span></span><br><span class="line"><span class="keyword">switch</span> (runningState) &#123;</span><br><span class="line"><span class="keyword">case</span> RUNRT:</span><br><span class="line">animRight.updateImage();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> RUNLT:</span><br><span class="line">animLeft.updateImage();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//玩家角色与砖块图像在垂直方向的碰撞检测</span></span><br><span class="line"><span class="keyword">if</span> (gameWorld.worldCollisionVertical(<span class="keyword">this</span>, thisPosition(),nextPosition(), offsetY)) &#123;</span><br><span class="line"><span class="keyword">if</span> (dy &gt; <span class="number">0</span>) &#123;<span class="comment">//若玩家角色处于下落过程中发生碰撞，则停止下落</span></span><br><span class="line">onGround = <span class="keyword">true</span>;<span class="comment">//玩家碰到地面</span></span><br><span class="line">setDY(<span class="number">0</span>);<span class="comment">//停止继续下落</span></span><br><span class="line"><span class="keyword">if</span> (locY + <span class="keyword">this</span>.getHeight() &lt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="comment">//若玩家角色图像的底端超过了游戏窗口的上边缘，则开始向上滚动砖块地图</span></span><br><span class="line">changeState(UpScrollY);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (dy &lt; <span class="number">0</span>) &#123;<span class="comment">//若是玩家处于跳起过程中发生碰撞</span></span><br><span class="line">isJumping = <span class="keyword">false</span>;<span class="comment">//角色开始转为下落</span></span><br><span class="line">jumpSpeed = -INISPEED;<span class="comment">//跳跃速度恢复到初始值</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//玩家角色与砖块图像在水平方向的碰撞检测</span></span><br><span class="line"><span class="keyword">if</span> (gameWorld.worldCollisionHorizontal(<span class="keyword">this</span>, thisPosition(),nextPosition(), offsetX)) &#123;</span><br><span class="line">gameWorld.canScroll = <span class="keyword">false</span>;<span class="comment">//若发生碰撞则停止滚动场景</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;<span class="comment">//若水平方向没有发生碰撞，则根据玩家角色当前运动方向进行判断</span></span><br><span class="line"><span class="keyword">switch</span> (runningState) &#123;</span><br><span class="line"><span class="keyword">case</span> RUNLT:<span class="comment">//考虑玩家向左运动的情况</span></span><br><span class="line"><span class="comment">//若玩家向左移动到屏幕的最左端</span></span><br><span class="line"><span class="keyword">if</span> (gameWorld.getOffsetX() &lt;= gameWorld.getOffsetX()  || (locX &gt; GamePanel.WIDTH / <span class="number">2</span>)) &#123;</span><br><span class="line"><span class="keyword">if</span>(locX&gt;<span class="number">0</span>) &#123;<span class="comment">//在屏幕范围内</span></span><br><span class="line">setDX(<span class="number">5</span>);</span><br><span class="line">locX -= dx;                 <span class="comment">//减少玩家的横坐标值</span></span><br><span class="line">gameWorld.canScroll = <span class="keyword">false</span>;<span class="comment">//停止卷轴背景滚动</span></span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span></span><br><span class="line"><span class="comment">//若玩家没有到达砖块地图的两端则让卷轴背景滚动起来</span></span><br><span class="line">gameWorld.canScroll = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> RUNRT:<span class="comment">//考虑玩家向右运动的情况</span></span><br><span class="line"><span class="comment">//若玩家向右移动到砖块地图的最右端，或从砖块地图的最左端开始向右移动</span></span><br><span class="line"><span class="keyword">if</span> (locX &lt; GamePanel.WIDTH / <span class="number">2</span></span><br><span class="line">|| (gameWorld.getOffsetX() &gt;= (gameWorld.tMap.getWidth()</span><br><span class="line">* gameWorld.tMap.TILE_SIZE - GamePanel.WIDTH))) &#123;</span><br><span class="line">setDX(<span class="number">5</span>);</span><br><span class="line">locX += dx;<span class="comment">//增加玩家的横坐标值</span></span><br><span class="line">gameWorld.canScroll = <span class="keyword">false</span>;<span class="comment">//停止卷轴背景滚动</span></span><br><span class="line">&#125; <span class="keyword">else</span></span><br><span class="line"><span class="comment">//若玩家没有到达砖块地图的两端则让卷轴背景滚动起来</span></span><br><span class="line">gameWorld.canScroll = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-2碰撞检测方法"><a href="#2-3-2碰撞检测方法" class="headerlink" title="2.3.2碰撞检测方法"></a>2.3.2碰撞检测方法</h3><p>checkTileCollision()方法实际判断的是角色与砖块图像图标是否发生了重叠，若是则返回碰撞的砖块图像坐标。由于判断的是运动中的角色，因此需要知道角色的当前位置坐标和下一帧的坐标。</p><div align=center><p><img src="clip_image002-1585407970339.jpg" alt="玩家角色与砖块型图像的碰撞检测"></p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断角色是否与砖块型图像发生碰撞</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Point <span class="title">checkTileCollision</span><span class="params">(Sprite sprite,<span class="keyword">int</span> oldX, <span class="keyword">int</span> oldY, <span class="keyword">int</span> newX, <span class="keyword">int</span> newY)</span> </span>&#123;</span><br><span class="line">        Point pointCache = <span class="keyword">new</span> Point(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="comment">//划定参与碰撞检测的坐标范围</span></span><br><span class="line">        <span class="keyword">int</span> fromX = Math.min(oldX, newX);                   <span class="comment">//碰撞检测范围左上角的X坐标</span></span><br><span class="line">        <span class="keyword">int</span> fromY = Math.min(oldY, newY);                   <span class="comment">//碰撞检测范围左上角的Y坐标</span></span><br><span class="line">        <span class="keyword">int</span> toX = Math.max(oldX, newX);                     <span class="comment">//碰撞检测范围右下角的X坐标</span></span><br><span class="line">        <span class="keyword">int</span> toY = Math.max(oldY, newY);                     <span class="comment">//碰撞简称范围右下角的Y坐标</span></span><br><span class="line">        <span class="comment">//将程序窗口坐标转换为砖块型图像数组的下标，以便划定参与碰撞检测的砖块型图像的范围</span></span><br><span class="line">        <span class="keyword">int</span> fromTileX = tMap.pixelsToTiles(fromX);</span><br><span class="line">        <span class="keyword">int</span> fromTileY = tMap.pixelsToTiles(fromY);</span><br><span class="line">        <span class="keyword">int</span> toTileX = tMap.pixelsToTiles(toX + sprite.getWidth() - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> toTileY = tMap.pixelsToTiles(toY + sprite.getHeight() - <span class="number">1</span>);</span><br><span class="line">        <span class="comment">//对划定范围内的砖块型图像逐个地进行碰撞检测</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> x = fromTileX; x &lt;= toTileX; x++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> y = fromTileY; y &lt;=toTileY; y++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (x &lt; <span class="number">0</span> || x &gt;= tMap.getWidth() || tMap.getTile(x, y) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    <span class="comment">//若发生了碰撞，则返回该砖块型图像的下标</span></span><br><span class="line">                    pointCache.setLocation(x, y);</span><br><span class="line">                    <span class="keyword">return</span> pointCache;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//若没有检测到碰撞，则返回空值</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-3水平方向的碰撞检测"><a href="#2-3-3水平方向的碰撞检测" class="headerlink" title="2.3.3水平方向的碰撞检测"></a>2.3.3水平方向的碰撞检测</h3><p>当调用checkTileCollision()方法判断发生碰撞后，检测角色对象中水平方向速度dx的值。若dx&lt;0，则表示角色向左运动时发生了碰撞；若dx&gt;0，则表示角色向右运动时发生了碰撞。发生碰撞后的处理是设置角色对象在水平方向上紧贴着砖块对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//进行水平方向的碰撞检测</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">worldCollisionHorizontal</span><span class="params">(Sprite sprite, Point thisPos, Point nextPos, <span class="keyword">int</span> offSetX)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//划定碰撞检测范围</span></span><br><span class="line">        <span class="keyword">int</span> dx = sprite.getDX();</span><br><span class="line">        <span class="keyword">int</span> oldX = thisPos.x;</span><br><span class="line">        <span class="keyword">int</span> newX = nextPos.x;</span><br><span class="line">        <span class="keyword">int</span> oldY = thisPos.y;</span><br><span class="line">        <span class="keyword">int</span> newY = oldY;</span><br><span class="line">        <span class="comment">//获取发生了碰撞的砖块型图像的下标</span></span><br><span class="line">        Point tile = checkTileCollision(sprite, oldX, oldY, newX, newY);</span><br><span class="line">        <span class="keyword">if</span> (tile == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//调整角色横坐标值，使得角色在水平方向上紧贴着砖块型图像</span></span><br><span class="line">            <span class="keyword">if</span> (dx &gt; <span class="number">0</span>) &#123;           <span class="comment">//若角色朝右移动</span></span><br><span class="line">                sprite.setX(tMap.tilesToPixels(tile.x) - offSetX - sprite.getWidth());</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (dx &lt; <span class="number">0</span>) &#123;    <span class="comment">//若角色朝左移动</span></span><br><span class="line">                sprite.setX(tMap.tilesToPixels(tile.x + <span class="number">1</span>) - offSetX);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-4垂直方向的碰撞检测"><a href="#2-3-4垂直方向的碰撞检测" class="headerlink" title="2.3.4垂直方向的碰撞检测"></a>2.3.4垂直方向的碰撞检测</h3><p>当调用checkTileCollision()方法判断发生碰撞后，检测角色对象中水平方向速度dy的值。若dy&lt;0，则表示角色下落过程中发生了碰撞；若dy&gt;0，则表示角色挑起过程中发生了碰撞。若发生了垂直方向的碰撞，则设置角色对象在垂直方向上紧贴着砖块型图像，当dy&lt;0时应该停止角色继续上升，并将其值设为0使其开始下落。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//进行垂直方向的碰撞检测</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">worldCollisionVertical</span><span class="params">(Sprite sprite, Point thisPos, Point nextPos, <span class="keyword">int</span> offSetY)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//划定碰撞检测范围</span></span><br><span class="line">        <span class="keyword">int</span> dy = sprite.getDY();</span><br><span class="line">        <span class="keyword">int</span> oldY = thisPos.y;</span><br><span class="line">        <span class="keyword">int</span> newY = nextPos.y;</span><br><span class="line">        <span class="keyword">int</span> oldX = thisPos.x;</span><br><span class="line">        <span class="keyword">int</span> newX = oldX;</span><br><span class="line">        <span class="comment">//获取发生了碰撞的砖块型图像的下标</span></span><br><span class="line">        Point tile = checkTileCollision(sprite, oldX, oldY, newX, newY);</span><br><span class="line">        <span class="keyword">if</span> (tile == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//调整角色纵坐标值，使得角色在垂直方向上紧贴着砖块型图像</span></span><br><span class="line">            <span class="keyword">if</span> (dy &gt; <span class="number">0</span>) &#123;           <span class="comment">//若角色处于下落过程中</span></span><br><span class="line">                sprite.setY(tMap.tilesToPixels(tile.y) - offSetY - sprite.getHeight());</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (dy &lt; <span class="number">0</span>) &#123;    <span class="comment">//若角色处于跳起过程中</span></span><br><span class="line">                sprite.setY(tMap.tilesToPixels(tile.y + <span class="number">1</span>) - offSetY);</span><br><span class="line">                sprite.setDY(<span class="number">0</span>);    <span class="comment">//角色停止继续上升</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-5精灵角色碰撞检测的方法"><a href="#2-3-5精灵角色碰撞检测的方法" class="headerlink" title="2.3.5精灵角色碰撞检测的方法"></a>2.3.5精灵角色碰撞检测的方法</h3><p>碰撞检测的算法类似于《打砖块》游戏中判定小球和砖块是否发生碰撞的算法，都是通过判断碰撞双方的边界是否发生了重叠。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//检测精灵角色间的碰撞</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">spriteCollision</span><span class="params">(Sprite s1, Sprite s2, <span class="keyword">boolean</span> isPlayer)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// if the Sprites are the same, return false</span></span><br><span class="line">        <span class="keyword">if</span> (s1 == s2) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获取参与检测双方的横坐标和纵坐标</span></span><br><span class="line">        <span class="keyword">int</span> s1x, s1y, s2x, s2y;</span><br><span class="line">        s1x = s1.getX();</span><br><span class="line">        s2x = s2.getX();</span><br><span class="line">        s1y = s1.getY();</span><br><span class="line">        s2y = s2.getY();</span><br><span class="line">        <span class="comment">//若有玩家角色参与碰撞检测，则将其坐标转换为游戏世界坐标</span></span><br><span class="line">        <span class="keyword">if</span> (isPlayer) &#123;</span><br><span class="line">            s1x += getOffsetX();</span><br><span class="line">            s1y += getOffsetY();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//判定双方的边界是否发生重叠，并返回判定结果</span></span><br><span class="line">        <span class="keyword">return</span> (s1x &lt; s2x + s2.getWidth() &amp;&amp;</span><br><span class="line">                s2x &lt; s1x + s1.getWidth() &amp;&amp;</span><br><span class="line">                s1y &lt; s2y + s2.getHeight() &amp;&amp;</span><br><span class="line">                s2y &lt; s1y + s1.getHeight());</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-6玩家角色跳起来“踩”电脑角色"><a href="#2-3-6玩家角色跳起来“踩”电脑角色" class="headerlink" title="2.3.6玩家角色跳起来“踩”电脑角色"></a>2.3.6玩家角色跳起来“踩”电脑角色</h3><p>在碰撞检测方面，需要判定玩家角色是否在跳起后下落的过程中与电脑角色发生了碰撞；在碰撞处理方面，需要让电脑角色被“踩”到后从屏幕上消失。为了体现游戏的真实性，还需要加入一个掉落的过程，即电脑角色被“踩”到后垂直地从程序窗口下方掉落，直至其图像超出窗口下边界后消失。</p><div align=center><p><img src="clip_image002-1585408083751.jpg" alt="电脑角色的有限状态机"></p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ((eny.npcType == EnemyProp.ANPC) &amp;&amp; (man.state != Player.UNATTACK)) &#123;<span class="comment">//若玩家碰到了敌人，则进行相应处理</span></span><br><span class="line">sound.loadSound(<span class="string">"Sounds/collision.wav"</span>);</span><br><span class="line">sound.playSound();</span><br><span class="line"><span class="keyword">if</span> ((man.dy &gt; <span class="number">0</span>)<span class="comment">//若玩家角色处于掉落过程中，改变电脑角色的状态为掉落态</span></span><br><span class="line">&amp;&amp; (man.locY &lt; (eny.locY - gameWorld.getOffsetY()))) &#123;</span><br><span class="line">eny.changeState(Sprite.ISHITTED);</span><br><span class="line"><span class="comment">//gameWorld.anpcNum--;</span></span><br><span class="line">score += <span class="number">100</span>;<span class="comment">//玩家角色踩到电脑角色后加100分</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">man.changeState(Sprite.ISHITTED);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实现电脑角色在掉落态的行为</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">drop</span><span class="params">()</span> </span>&#123;        <span class="comment">//若电脑角色超出了窗口下边界则改变其状态为消失态</span></span><br><span class="line"><span class="keyword">if</span> (locY - gameWorld.getOffsetY() &gt; GamePanel.HEIGHT) &#123;</span><br><span class="line">changeState(DISMISS);</span><br><span class="line">&#125;</span><br><span class="line">setDY(dy + GRAVITY);<span class="comment">//增加垂直速度值</span></span><br><span class="line">locY += dy;<span class="comment">//增加垂直坐标值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-7玩家角色发射子弹攻击电脑角色"><a href="#2-3-7玩家角色发射子弹攻击电脑角色" class="headerlink" title="2.3.7玩家角色发射子弹攻击电脑角色"></a>2.3.7玩家角色发射子弹攻击电脑角色</h3><p>当游戏者按下“Ctrl”键时玩家角色发射子弹，并让子弹沿水平方向做匀速直线运动，当子弹超出程序窗口范围或击中电脑角色后消失。</p><div align=center><p><img src="clip_image002-1585408139244.jpg" alt="子弹的有限状态机模型"></p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">checkShooting</span><span class="params">()</span> </span>&#123;<span class="comment">//检测子弹对象与电脑角色的碰撞检测</span></span><br><span class="line"><span class="comment">// man.move() must be first operated!</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; bullets.size(); i++) &#123;</span><br><span class="line">Bullet bul = (Bullet) bullets.get(i);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; gameWorld.getSprites().size(); j++) &#123;  <span class="comment">//将子弹对象与所有电脑角色逐个进行碰撞检测</span></span><br><span class="line">EnemyProp eny = (EnemyProp) gameWorld.getSprites().get(j);</span><br><span class="line"><span class="keyword">if</span> (gameWorld.spriteCollision(bul, eny, <span class="keyword">true</span>)</span><br><span class="line">&amp;&amp; (eny.npcType == EnemyProp.ANPC)</span><br><span class="line">&amp;&amp; (eny.state != Sprite.ISHITTED) &amp;&amp; bul.isActive()) &#123;</span><br><span class="line">sound.loadSound(<span class="string">"Sounds/collision.wav"</span>);<span class="comment">//载入子弹击中目标的音效</span></span><br><span class="line">sound.playSound();<span class="comment">//播放音效</span></span><br><span class="line">eny.changeState(Sprite.ISHITTED);<span class="comment">//改变电脑角色的状态</span></span><br><span class="line"><span class="comment">//gameWorld.anpcNum--;</span></span><br><span class="line">bul.changeState(Sprite.DISMISS);<span class="comment">//改变子弹角色的状态</span></span><br><span class="line">score += <span class="number">50</span>;<span class="comment">//玩家角色发射子弹击中电脑角色加50分</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">bul.update();<span class="comment">//若无碰撞发生则更新子弹坐标值</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-8电脑角色追逐玩家角色"><a href="#2-3-8电脑角色追逐玩家角色" class="headerlink" title="2.3.8电脑角色追逐玩家角色"></a>2.3.8电脑角色追逐玩家角色</h3><p>当电脑角色“发现”玩家角色后便朝着玩家角色的方向移动，而当玩家角色离开电脑角色的视野后停止追逐。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判定电脑角色是否“发现”了玩家角色</span></span><br><span class="line"><span class="keyword">if</span> (hasFoundPlayer()) &#123;<span class="comment">//当电脑角色方向玩家角色后的追赶动作</span></span><br><span class="line"><span class="keyword">if</span>(Math.abs(locY - gameWorld.getOffsetY()- gameWorld.gameP.man.getY() ) &lt; GamePanel.HEIGHT/<span class="number">3</span>)</span><br><span class="line"><span class="keyword">if</span> (locX - gameWorld.getOffsetX() &gt; gameWorld.gameP.man.getX()) &#123;</span><br><span class="line">dx = -Math.abs(dx);<span class="comment">//若在玩家角色的右边则向左追逐</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">dx = Math.abs(dx);<span class="comment">//若在玩家角色的左边则向右追逐</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasFoundPlayer</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> (locX - gameWorld.getOffsetX() &gt; <span class="number">0</span>)</span><br><span class="line">&amp;&amp; (locX - gameWorld.getOffsetX() &lt; GamePanel.WIDTH</span><br><span class="line">&amp;&amp; locY - gameWorld.getOffsetY() &gt; <span class="number">0</span> &amp;&amp; locY</span><br><span class="line">- gameWorld.getOffsetY() &lt; GamePanel.HEIGHT);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-9-NPC的碰撞检测"><a href="#2-3-9-NPC的碰撞检测" class="headerlink" title="2.3.9 NPC的碰撞检测"></a>2.3.9 NPC的碰撞检测</h3><p>实现NPC间的碰撞检测及处理，两个NPC碰到后相互按相反的方向移动。调用getSprites方法，判断两个NPC是否碰撞，若碰撞则更改两个NPC的dx值。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; gameWorld.getSprites().size()-<span class="number">1</span>; i++) &#123;<span class="comment">//NPC的碰撞检测</span></span><br><span class="line">EnemyProp eny1 = (EnemyProp) gameWorld.getSprites().get(i);</span><br><span class="line">EnemyProp eny2 = (EnemyProp) gameWorld.getSprites().get(i+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span> ((gameWorld.spriteCollision(eny1, eny2, <span class="keyword">false</span>))&amp;&amp;(eny1.npcType == EnemyProp.ANPC)&amp;&amp;(eny2.npcType == EnemyProp.ANPC))&#123;</span><br><span class="line">eny1.dx = -eny1.dx;</span><br><span class="line">eny2.dx = -eny2.dx;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-4-玩家角色生命值与道具"><a href="#2-4-玩家角色生命值与道具" class="headerlink" title="2.4 玩家角色生命值与道具"></a>2.4 玩家角色生命值与道具</h2><h3 id="2-4-1玩家角色生命减少"><a href="#2-4-1玩家角色生命减少" class="headerlink" title="2.4.1玩家角色生命减少"></a>2.4.1玩家角色生命减少</h3><p>在玩家角色遭遇到攻击之后其生命值要减少一个单位，同时游戏会继续运行。为了避免玩家持续地遭到攻击，需要为玩家角色设定一个“无敌”时间，即从玩家角色被攻击时算起的一小段时间内玩家角色将不会再遭遇到攻击。</p><div align=center><p><img src="clip_image002-1585408228511.jpg" alt="玩家角色的有限状态机模型"></p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">(Graphics g)</span> </span>&#123;<span class="comment">//绘制精灵图像，并实现无敌状态的闪烁效果</span></span><br><span class="line">drawHearts(g);</span><br><span class="line"><span class="keyword">if</span> (state == UNATTACK &amp;&amp; (count % <span class="number">5</span> == <span class="number">0</span>)) &#123;<span class="comment">//当玩家角色处于无敌态时，每隔5帧便停止绘制一次</span></span><br><span class="line"><span class="comment">//跳过绘制的步骤</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">switch</span> (runningState) &#123;<span class="comment">//选择玩家运动状态</span></span><br><span class="line"><span class="keyword">case</span> RUNRT:</span><br><span class="line">animRight.draw(g, locX, locY);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> RUNLT:</span><br><span class="line">animLeft.draw(g, locX, locY);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> STDRT:</span><br><span class="line">animRight.draw(g, locX, locY);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> STDLT:</span><br><span class="line">animLeft.draw(g, locX, locY);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> </span>&#123;<span class="comment">//更新角色的坐标</span></span><br><span class="line"><span class="keyword">switch</span> (state) &#123;<span class="comment">//判定玩家角色的状态值</span></span><br><span class="line"><span class="keyword">case</span> ISHITTED:<span class="comment">//若为被攻状态</span></span><br><span class="line">lives--;<span class="comment">//生命值减1</span></span><br><span class="line">updateHearts();</span><br><span class="line"><span class="keyword">if</span> (lives &lt;= <span class="number">0</span>) &#123;<span class="comment">//对lives值进行判定以便进行相应的状态转换</span></span><br><span class="line">changeState(DISMISS);<span class="comment">//转为死亡态</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">changeState(UNATTACK);<span class="comment">//转为无敌态</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> UNATTACK:<span class="comment">//若为无敌态</span></span><br><span class="line"><span class="comment">//通过count累加该段时间内游戏运行的总帧数，即游戏循环进行的总次数</span></span><br><span class="line">count = (count + <span class="number">1</span>) % (GamePanel.FPS * <span class="number">5</span>);</span><br><span class="line"><span class="comment">//当count的值等于5秒内游戏循环的总次数时改变电脑角色的状态值</span></span><br><span class="line"><span class="keyword">if</span> (count == <span class="number">0</span>) &#123;</span><br><span class="line">changeState(MOVE);<span class="comment">//转为活动态</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> MOVE:<span class="comment">//若为活动态</span></span><br><span class="line">move();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> DISMISS:<span class="comment">//若为死亡态</span></span><br><span class="line"><span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><h3 id="2-4-2道具"><a href="#2-4-2道具" class="headerlink" title="2.4.2道具"></a>2.4.2道具</h3><p>在游戏中提供三种游戏道具：“守护”道具为玩家角色提供5秒的无敌效果；“红心”道具为玩家提供一个额外的生命值（在生命值没有到达上限的情况下）；“跳跳靴”道具为玩家提供更高的起跳速度从而跳得更高。</p><table><thead><tr><th align="center"><img src="clip_image002-1585408275816.png" alt="img"></th><th align="center"><img src="clip_image004.png" alt="img"></th><th align="center"><img src="clip_image006.png" alt="img"></th></tr></thead><tbody><tr><td align="center"><strong>守护</strong></td><td align="center"><strong>红心</strong></td><td align="center"><strong>跳跳靴</strong></td></tr></tbody></table><h3 id=""><a href="#" class="headerlink" title=""></a></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (eny.npcType == EnemyProp.SNPC) &#123;<span class="comment">//若玩家获取了道具</span></span><br><span class="line">sound.loadSound(<span class="string">"Sounds/eat.wav"</span>);<span class="comment">//加载音效文件</span></span><br><span class="line">sound.playSound();<span class="comment">//播放玩家获取道具的音效</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (eny.npcName.equals(<span class="string">"star"</span>)) &#123;<span class="comment">//若道具为“守护”</span></span><br><span class="line">eny.changeState(Sprite.DISMISS);<span class="comment">//撤销道具</span></span><br><span class="line">man.resetCount();<span class="comment">//将玩家设为无敌状态</span></span><br><span class="line">man.changeState(Player.UNATTACK);<span class="comment">//重置无敌时间</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (eny.npcName.equals(<span class="string">"heart"</span>)) &#123;<span class="comment">//若道具为“红心”</span></span><br><span class="line">eny.changeState(Sprite.DISMISS);<span class="comment">//撤销道具</span></span><br><span class="line"><span class="keyword">if</span> (man.lives &lt; Player.LFNUM) &#123;<span class="comment">//若玩家生命未达到上限</span></span><br><span class="line">man.lives++;<span class="comment">//生命值加1</span></span><br><span class="line">&#125;</span><br><span class="line">man.updateHearts();<span class="comment">//更新玩家生命值图像显示</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (eny.npcName.equals(<span class="string">"power"</span>)) &#123;<span class="comment">//若道具为“跳跳靴"</span></span><br><span class="line">eny.changeState(Sprite.DISMISS);<span class="comment">//撤销道具</span></span><br><span class="line">man.jumpSpeed -= <span class="number">10</span>;<span class="comment">//增加玩家的起跳速度</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-5-游戏UI"><a href="#2-5-游戏UI" class="headerlink" title="2.5 游戏UI"></a>2.5 游戏UI</h2><h3 id="2-5-1显示玩家生命"><a href="#2-5-1显示玩家生命" class="headerlink" title="2.5.1显示玩家生命"></a>2.5.1显示玩家生命</h3><p>在玩家角色遭遇到攻击之后其生命值要减少一个单位，同时游戏会继续运行。为了避免玩家持续地遭到攻击，需要为玩家角色设定一个“无敌”时间，即从玩家角色被攻击时算起的一小段时间内玩家角色将不会再遭遇到攻击。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//绘制各个生命对象的图像</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">drawHearts</span><span class="params">(Graphics g)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; hearts.size(); i++) &#123;</span><br><span class="line">heart = (Life) hearts.get(i);<span class="comment">//从数组列表中取出一个生命对象</span></span><br><span class="line">heart.draw(g);<span class="comment">//绘制该对象的图像</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//更新各个生命对象的坐标值</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateHearts</span><span class="params">()</span> </span>&#123;</span><br><span class="line">hearts.clear();<span class="comment">//清空数组列表对象</span></span><br><span class="line"><span class="comment">//根据玩家角色的生命值，循环地建立各个生命对象</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; lives; i++) &#123;</span><br><span class="line">heart = <span class="keyword">new</span> Life();<span class="comment">//生成新的生命对象</span></span><br><span class="line">heart.setX(i * heart.getWidth());<span class="comment">//设置横坐标</span></span><br><span class="line">hearts.add(heart);<span class="comment">//加入数组列表</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-5-2显示游戏分数值和剩余敌人"><a href="#2-5-2显示游戏分数值和剩余敌人" class="headerlink" title="2.5.2显示游戏分数值和剩余敌人"></a>2.5.2显示游戏分数值和剩余敌人</h3><p>在游戏中设定得分数，用来对玩家角色消灭敌人的行为表示奖励，并显示剩余敌人数量。游戏运行过程中需要不断地统计游戏分数值，并将其显示在游戏屏幕上。规定玩家角色跳起踩到电脑角色后加100分，而当其发生子弹击中电脑角色后只加50分。</p><p>若玩家生命值为0或是掉入悬崖，则游戏结束，显示“Game Over！”，若玩家成功通关，则显示“Finished”。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Font font = <span class="keyword">new</span> Font(<span class="string">"Tahoma"</span>, Font.PLAIN, <span class="number">20</span>);<span class="comment">//创建字体对象</span></span><br><span class="line">dbg.setFont(font);<span class="comment">//设置字体</span></span><br><span class="line"><span class="keyword">if</span> (level &gt;= <span class="number">1</span> &amp;&amp; level &lt;= TOTALLEVEL) &#123;</span><br><span class="line">dbg.drawString(<span class="string">"Score:"</span> + score, <span class="number">5</span>, <span class="number">60</span>);<span class="comment">//显示分数值</span></span><br><span class="line">dbg.drawString(<span class="string">"Enemy:"</span> + gameWorld.anpcNum, <span class="number">5</span>, <span class="number">85</span>);<span class="comment">//显示剩余敌人</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (state == GameOver) &#123;</span><br><span class="line">font = <span class="keyword">new</span> Font(<span class="string">"Tahoma"</span>, Font.PLAIN, <span class="number">90</span>);</span><br><span class="line">dbg.setFont(font);</span><br><span class="line">dbg.drawString(<span class="string">"Game Over!"</span>, <span class="number">0</span>, HEIGHT / <span class="number">2</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (state == GameFinish) &#123;</span><br><span class="line">font = <span class="keyword">new</span> Font(<span class="string">"Tahoma"</span>, Font.PLAIN, <span class="number">90</span>);</span><br><span class="line">dbg.setFont(font);</span><br><span class="line">dbg.drawString(<span class="string">"  Finished!"</span>, <span class="number">0</span>, HEIGHT / <span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3-游戏的类"><a href="#3-游戏的类" class="headerlink" title="3. 游戏的类"></a>3. 游戏的类</h1><p><strong>3.1 Animation</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> BufferedImage[] Images;        <span class="comment">//精灵图像</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> numImages;                <span class="comment">//精灵图像的张数</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> ticksStopped;           <span class="comment">//标记精灵图像更新</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> isRepeating;            <span class="comment">//标记精灵动画播放循环</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> animTime;                 <span class="comment">//精灵动画播放时间</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> animSpeed;                <span class="comment">//精灵动画播放速度</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> animTotalTime;             <span class="comment">//精灵动画总播放时间</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> showTime;                 <span class="comment">//单幅精灵动画持续时间</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> imPosition;                 <span class="comment">//当前精灵图像</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Animation</span><span class="params">(String fileName,<span class="keyword">int</span> num,<span class="keyword">int</span> speed,<span class="keyword">int</span> totalTime,<span class="keyword">boolean</span> repeat)</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Animation</span><span class="params">(String prefixfileName,String postfixFileName ,<span class="keyword">int</span> num,<span class="keyword">int</span> speed,<span class="keyword">int</span> totalTime,<span class="keyword">boolean</span> repeat)</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> BufferedImage <span class="title">loadImage</span><span class="params">(String fnm)</span>:<span class="title">return</span><span class="params">(im)</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> BufferedImage[] <span class="title">setAnimImagesFromOneFile</span><span class="params">(String fnm, <span class="keyword">int</span> num)</span>:<span class="title">return</span><span class="params">(ims)</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> BufferedImage[] <span class="title">setAnimImagesFromFiles</span><span class="params">(String prefixFileName,String postFileName, <span class="keyword">int</span> num)</span> <span class="title">return</span><span class="params">(ims)</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateImage</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> BufferedImage <span class="title">getCurrentImage</span><span class="params">()</span>:return Images[imPosition]</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isStopped</span><span class="params">()</span>:return ticksStopped</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">resume</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">(Graphics g,<span class="keyword">int</span> x ,<span class="keyword">int</span> y)</span></span></span><br></pre></td></tr></table></figure><p><strong>3.2 Bullet</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Player player;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Bullet</span><span class="params">(Player man)</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">move</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><p><strong>3.3 EnemyProp</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> GRAVITY = <span class="number">1</span>;           <span class="comment">//重力加速度</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> JUMPSPEED = <span class="number">20</span>;       <span class="comment">//跳跃速度</span></span><br><span class="line"><span class="keyword">private</span> Animation animRight, animLeft;         <span class="comment">//电脑角色向右/左运动的精灵动画对象</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> numImages;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">boolean</span> runningRight, runningLeft, standRight, standLeft;    <span class="comment">//标识电脑角色是否向右/左运动/站立</span></span><br><span class="line"><span class="keyword">private</span> GameWorldManager gameWorld;<span class="comment">//GameWorldManager对象</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> offsetX, offsetY;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> jumpSpeed;<span class="comment">//跳跃速度</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">boolean</span> isJumping = <span class="keyword">false</span>;<span class="comment">//标记跳起状态</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">boolean</span> canJump = <span class="keyword">false</span>;<span class="comment">//标记跳跃状态</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">boolean</span> onGround = <span class="keyword">false</span>;<span class="comment">//标记是否位于地面</span></span><br><span class="line"><span class="keyword">private</span> SoundPlayer sound;<span class="comment">//SoundPlayer对象</span></span><br><span class="line"><span class="keyword">public</span> String npcName;<span class="comment">//定义NPC名称</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> npcType;<span class="comment">//定义NPC类型（敌人或道具）</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ANPC = <span class="number">0</span>;<span class="comment">//该字符常量表示敌人</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SNPC = <span class="number">1</span>;<span class="comment">//该字符常量表示道具</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">EnemyProp</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> type, String name, <span class="keyword">int</span> numImage, GameWorldManager gameW)</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">EnemyProp</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> type, String name, GameWorldManager gameW)</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">jump</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">jumpStopped</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">drop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">move</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasFoundPlayer</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Point <span class="title">thisPosition</span><span class="params">()</span>:return new <span class="title">Point</span><span class="params">(thisX, thisY)</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Point <span class="title">nextPosition</span><span class="params">()</span>:return new <span class="title">Point</span><span class="params">(nextX, nextY)</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">(Graphics g)</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setJumpSpeed</span><span class="params">(<span class="keyword">int</span> jumpS)</span></span></span><br></pre></td></tr></table></figure><p><strong>3.4 GameFrame</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">GameFrame</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><p><strong>3.5 GamePanel</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> FPS = <span class="number">50</span>;<span class="comment">//游戏运行帧率</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> WIDTH = <span class="number">500</span>;<span class="comment">//游戏窗口宽度</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> HEIGHT = <span class="number">360</span>;<span class="comment">//游戏窗口高度</span></span><br><span class="line"><span class="keyword">private</span> Image im;</span><br><span class="line"><span class="keyword">private</span> Graphics dbg;</span><br><span class="line"><span class="keyword">private</span> Thread gamethread;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> running = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> isPaused = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> state;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> GameRunning = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> GameOver = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> GamePaused = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> GameFinish = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">public</span> Player man;</span><br><span class="line"><span class="keyword">private</span> ArrayList enemy;</span><br><span class="line"><span class="keyword">private</span> GameWorldManager gameWorld;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> score;<span class="comment">//score变量用来表示游戏分数值</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">boolean</span> isGameOver = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">public</span> SoundPlayer sound;</span><br><span class="line"><span class="keyword">public</span> MusicPlayer music;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">boolean</span> isMusicStopped = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">public</span> Bullet bul;<span class="comment">//子弹对象</span></span><br><span class="line"><span class="keyword">public</span> ArrayList bullets;<span class="comment">//数组列表用来保存所有子弹</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">boolean</span> leftPressed = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">boolean</span> rightPressed = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> level = <span class="number">1</span>;<span class="comment">//记录当前关卡的编号</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> levelUp = <span class="keyword">false</span>;<span class="comment">//表示当前关卡是否通过</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TOTALLEVEL = <span class="number">1</span>;<span class="comment">//游戏的总关卡数</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">GamePanel</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">gameStart</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">changeState</span><span class="params">(<span class="keyword">int</span> s)</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">gameStop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">checkCollision</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">gamePaint</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">checkGameOver</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadLevel</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">checkShooting</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">gameRender</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">gameUpdate</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyTyped</span><span class="params">(KeyEvent e)</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyPressed</span><span class="params">(KeyEvent e)</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyReleased</span><span class="params">(KeyEvent e)</span></span></span><br></pre></td></tr></table></figure><p><strong>3.6 GameWorldManager</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> imMoveSize;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> TILE_SIZE = <span class="number">64</span>;</span><br><span class="line"><span class="keyword">private</span> BufferedImage im1,  im2,  im3;           <span class="comment">//分别保存3幅卷轴型图像</span></span><br><span class="line"><span class="keyword">private</span> Ribbon bg1,  bg2,  bg3;                 <span class="comment">//3个卷轴型图像对象</span></span><br><span class="line"><span class="keyword">private</span> ArrayList tiles;</span><br><span class="line"><span class="keyword">public</span> TileMap tMap;                            <span class="comment">//砖块型图像对象</span></span><br><span class="line"><span class="keyword">private</span> BufferedImage[] tileImage;                 <span class="comment">//保存所有砖块型图像</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">boolean</span> canMoveRight;                    <span class="comment">//标识图像向右滚动</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">boolean</span> canMoveLeft;                     <span class="comment">//标识图像向左滚动</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">boolean</span> canScroll = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">private</span> ArrayList sprites;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> anpcNum;</span><br><span class="line"><span class="keyword">public</span> Player player;</span><br><span class="line"><span class="keyword">public</span> GamePanel gameP;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">GameWorldManager</span><span class="params">(GamePanel gp)</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMoveFlag</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">(Graphics g)</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> TileMap <span class="title">loadTileMap</span><span class="params">(String filename)</span>: return newMap</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> BufferedImage <span class="title">loadImage</span><span class="params">(String fnm)</span>: return im</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Point <span class="title">checkTileCollision</span><span class="params">(Sprite sprite,<span class="keyword">int</span> oldX, <span class="keyword">int</span> oldY, <span class="keyword">int</span> newX, <span class="keyword">int</span> newY)</span>: return pointCache</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">worldCollisionHorizontal</span><span class="params">(Sprite sprite, Point thisPos, Point nextPos, <span class="keyword">int</span> offSetX)</span>: return <span class="keyword">true</span>/<span class="keyword">false</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">worldCollisionVertical</span><span class="params">(Sprite sprite, Point thisPos, Point nextPos, <span class="keyword">int</span> offSetY)</span>: return <span class="keyword">true</span>/<span class="keyword">false</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">spriteCollision</span><span class="params">(Sprite s1, Sprite s2, <span class="keyword">boolean</span> isPlayer)</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getOffsetY</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOffsetY</span><span class="params">(<span class="keyword">int</span> a)</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getOffsetX</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ArrayList <span class="title">getSprites</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isScrollLeft</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isScrollRight</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><p><strong>3.7 Life</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Life</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><p><strong>3.8 MusicPlayer</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Sequence sequence;</span><br><span class="line"><span class="keyword">private</span> Sequencer sequencer;</span><br><span class="line"><span class="keyword">private</span> File file;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MusicPlayer</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadMusic</span><span class="params">(String fileName)</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">playMusic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">stopPlaying</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isStopped</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><p><strong>3.9 Player</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> GRAVITY = <span class="number">1</span>;<span class="comment">//重力加速度值为1</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> INISPEED = <span class="number">20</span>;<span class="comment">//跳跃初速度为20</span></span><br><span class="line"><span class="keyword">private</span> Animation animRight, animLeft;<span class="comment">//向右/左行走的动画对象</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">boolean</span> runningRight, runningLeft, standRight, standLeft;<span class="comment">//标识是否向右/左运动，是否朝右/左站立不动</span></span><br><span class="line"><span class="keyword">private</span> GameWorldManager gameWorld;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> offsetX, offsetY;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> jumpSpeed;<span class="comment">//跳跃速度值</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">boolean</span> isJumping = <span class="keyword">false</span>;<span class="comment">//标识是否处于跳起阶段</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">boolean</span> canJump = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">boolean</span> onGround = <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> UNATTACK = <span class="number">3</span>;<span class="comment">//无敌态</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> UpScrollY = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DownScrollY = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> runningState = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> RUNRT = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> RUNLT = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> STDRT = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> STDLT = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> LFNUM = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> lives = LFNUM;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">private</span> ArrayList hearts;<span class="comment">//创建数组列表对象</span></span><br><span class="line"><span class="keyword">private</span> Life heart;<span class="comment">//创建生命对象</span></span><br><span class="line"><span class="keyword">private</span> GamePanel gameP;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> scrollCount = GamePanel.HEIGHT;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Player</span><span class="params">(GameWorldManager world, GamePanel gp)</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">drawHearts</span><span class="params">(Graphics g)</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateHearts</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">resetCount</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">move</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Point <span class="title">thisPosition</span><span class="params">()</span>:return new <span class="title">Point</span><span class="params">(thisX, thisY)</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Point <span class="title">nextPosition</span><span class="params">()</span>:return new <span class="title">Point</span><span class="params">(thisX, thisY)</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">(Graphics g)</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setJumpSpeed</span><span class="params">(<span class="keyword">int</span> jumpS)</span></span></span><br></pre></td></tr></table></figure><p><strong>3.10 Ribbon</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> BufferedImage bim;<span class="comment">//图像对象</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> xImHead;<span class="comment">//图像头指针</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> pWidth;<span class="comment">//窗口宽度</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> pHeight;    <span class="comment">//窗口高度</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> width;<span class="comment">//图像宽度</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> moveSize;<span class="comment">//移动速度</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">boolean</span> canMoveRight;<span class="comment">//向右移动标志</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">boolean</span> canMoveLeft; <span class="comment">//向左移动标志</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Ribbon</span><span class="params">(<span class="keyword">int</span> movS, BufferedImage im)</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">(Graphics g)</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">drawRibbon</span><span class="params">(Graphics g, BufferedImage im, <span class="keyword">int</span> dx1, <span class="keyword">int</span> dx2, <span class="keyword">int</span> sx1, <span class="keyword">int</span> sx2)</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><p><strong>3.11 SoundPlayer</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">File file;</span><br><span class="line">AudioInputStream stream;</span><br><span class="line">AudioFormat format;</span><br><span class="line">DataLine.Info info;</span><br><span class="line">Clip clip;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadSound</span><span class="params">(String fileName)</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">playSound</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><p><strong>3.12 Sprite</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">int</span> locX;                         <span class="comment">//精灵的横坐标</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">int</span> locY;                         <span class="comment">//精灵的纵坐标</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">int</span> dx;                           <span class="comment">//精灵的水平运动速度</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">int</span> dy;                           <span class="comment">//精灵的垂直运动速度</span></span><br><span class="line"><span class="keyword">protected</span> Animation animPlayer;             <span class="comment">//动画对象</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">int</span> numImages;                    <span class="comment">//精灵图像的张数</span></span><br><span class="line"><span class="keyword">protected</span> String imFileName;                <span class="comment">//精灵图像文件名</span></span><br><span class="line"><span class="keyword">protected</span> BufferedImage image;              <span class="comment">//精灵图像对象</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">int</span> width,  height;               <span class="comment">//精灵图像的宽度/高度</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SIZE = <span class="number">12</span>;</span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">boolean</span> isLooping;                <span class="comment">//标识精灵动画是否播放</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> pWidth,  pHeight;               <span class="comment">//游戏Panel范围</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> isActive = <span class="keyword">true</span>;            <span class="comment">//标记精灵的活动状态</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">int</span> state;</span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MOVE = <span class="number">0</span>;        <span class="comment">//移动态</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DISMISS = <span class="number">1</span>;     <span class="comment">//消失态</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ISHITTED = <span class="number">2</span>;    <span class="comment">//掉落态</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Sprite</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, String imfile, <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> BufferedImage <span class="title">setImage</span><span class="params">(String fnm)</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loopImage</span><span class="params">(<span class="keyword">int</span> animPeriod, <span class="keyword">int</span> seqDuration</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">public</span> <span class="keyword">void</span> stopLooping()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isActive</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setActive</span><span class="params">(<span class="keyword">boolean</span> a)</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">move</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">(Graphics g)</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDX</span><span class="params">(<span class="keyword">int</span> x)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDY</span><span class="params">(<span class="keyword">int</span> y)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getDX</span><span class="params">()</span> :return dx</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getDY</span><span class="params">()</span> :return dy</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setX</span><span class="params">(<span class="keyword">int</span> x)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setY</span><span class="params">(<span class="keyword">int</span> y)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getX</span><span class="params">()</span> :return locX</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getY</span><span class="params">()</span> :return locY</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getHeight</span><span class="params">()</span> :return height</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getWidth</span><span class="params">()</span> :return width</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">changeState</span><span class="params">(<span class="keyword">int</span> s)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getState</span><span class="params">()</span> :return state</span></span><br></pre></td></tr></table></figure><p><strong>3.13 TileMap</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> BufferedImage[][] tiles;              <span class="comment">//存放各个砖块型图像</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> xMapHead;                     <span class="comment">//TileMap头指针</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> TILE_SIZE = <span class="number">64</span>;                 <span class="comment">//砖块型图像尺寸为64x64</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> offsetX;                        <span class="comment">//水平方向偏移值</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> offsetY;                         <span class="comment">//垂直方向偏移值</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> pWidth;                        <span class="comment">//程序窗口宽度</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> pHeight;                        <span class="comment">//程序窗口高度</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> mapWidth;                      <span class="comment">//TileMap的宽度</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> mapMoveSize;                   <span class="comment">//TileMap的滚动速度</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">boolean</span> tMapMoveRight = <span class="keyword">false</span>;       <span class="comment">//标识TileMap向右滚动</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">boolean</span> tMapMoveLeft = <span class="keyword">false</span>;        <span class="comment">//标识TileMap向左滚动</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">TileMap</span><span class="params">(<span class="keyword">int</span> width, <span class="keyword">int</span> height)</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getMapHead</span><span class="params">()</span>:return xMapHead</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getWidth</span><span class="params">()</span> :return tiles.length1</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getHeight</span><span class="params">()</span> :return tiles[0].length</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> BufferedImage <span class="title">getTile</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span>: return tiles[x][y]</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTile</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, BufferedImage tile)</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">tilesToPixels</span><span class="params">(<span class="keyword">int</span> numTiles)</span>: return pixelSize</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">pixelsToTiles</span><span class="params">(<span class="keyword">int</span> pixelCoord)</span>: return numTiles</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">(Graphics g)</span></span></span><br></pre></td></tr></table></figure><h1 id="4-游戏测试"><a href="#4-游戏测试" class="headerlink" title="4. 游戏测试"></a>4. 游戏测试</h1><div align=center><p><img src="image-20200331163815947.png" alt="游戏"></p><p><img src="image-20200331163904036.png" alt="失败"></p></div>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;一个类似超级马里奥兄弟的ACT游戏，通过Java实现。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;Java-Game.jar&quot;&gt;下载试玩~&lt;/a&gt;</summary>
    
    
    
    <category term="游戏" scheme="http://www.zanple.top/categories/%E6%B8%B8%E6%88%8F/"/>
    
    
    <category term="游戏" scheme="http://www.zanple.top/tags/%E6%B8%B8%E6%88%8F/"/>
    
    <category term="Java" scheme="http://www.zanple.top/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>数媒自习室-基于ASP的动态网页开发</title>
    <link href="http://www.zanple.top/2019/11/26/digtalmedia-web/"/>
    <id>http://www.zanple.top/2019/11/26/digtalmedia-web/</id>
    <published>2019-11-25T16:18:55.000Z</published>
    <updated>2020-09-05T08:18:29.012Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一个比较完整的课设，独立完成了整个网站的UI设计、前端和部分后端功能的开发。</p></blockquote><p>数字媒体系的学习内容覆盖广，种类多。在平时的学习中需要学习各种教程。所以想到开发一个网站将数字媒体系的常见的教程进行整合，方便数字媒体系的学生进行学习。（部分内容来自<a href="https://www.doyoudo.com/">doyoudo</a>）<a id="more"></a></p><hr><h1 id="1-架构"><a href="#1-架构" class="headerlink" title="1. 架构"></a>1. 架构</h1><h2 id="1-1-网页架构"><a href="#1-1-网页架构" class="headerlink" title="1.1 网页架构"></a>1.1 网页架构</h2><div align=center><p><img src="%E6%95%B0%E5%AA%92%E8%87%AA%E4%B9%A0%E5%AE%A4-%E7%BD%91%E9%A1%B5%E6%9E%B6%E6%9E%84.png" alt="数媒自习室 （网页架构）"></p></div><p>数媒自习室分为六个主要模块：首页（展示网站的概括内容）、教程（提供各类教程）、学习路径（提供不同软件分类的完整学习路径）、资源导航（提供常用内容的相关资源）、关于我们、登录/注册（提供网站的登录与注册和后台登录的功能）。</p><h2 id="1-2-技术架构"><a href="#1-2-技术架构" class="headerlink" title="1.2 技术架构"></a>1.2 技术架构</h2><div align=center><p><img src="%E6%95%B0%E5%AA%92%E8%87%AA%E4%B9%A0%E5%AE%A4-%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84.png" alt="数媒自习室 （技术架构）"></p></div><p>网站整体使用<code>Html5</code>+<code>CSS</code>，通过<code>JavaScript</code>和<code>jQuery</code>实现网站的动态效果及功能，使用<code>ASP</code>开发后端功能，通过<code>ADO</code>访问<code>Access</code>数据库并插入语句、根据数据库动态修改网页内容、使用conn.execute方法操纵数据库。</p><h2 id="1-3-资源架构"><a href="#1-3-资源架构" class="headerlink" title="1.3 资源架构"></a>1.3 资源架构</h2><div align=center><p><img src="%E6%95%B0%E5%AA%92%E8%87%AA%E4%B9%A0%E5%AE%A4-%E8%B5%84%E6%BA%90%E6%9E%B6%E6%9E%84.png" alt="数媒自习室 （资源架构）"></p></div><p>使用<code>global.css</code>与<code>frame.css</code>对网页的布局进行控制，<code>jquery-3.4.1.min.js</code>提供网站的部分动态功能，通过<code>conn.asp</code>与<code>chkloginly.asp</code>对数据库<code>comment.mdb</code>中的语句进行添加与删除。</p><h1 id="2-UI设计及部分界面展示"><a href="#2-UI设计及部分界面展示" class="headerlink" title="2. UI设计及部分界面展示"></a>2. UI设计及部分界面展示</h1><div align=center><p><img src="%E7%99%BB%E5%BD%95.png" alt="登录"></p><p><img src="%E4%B8%BB%E9%A1%B5_%E7%88%B1%E5%A5%87%E8%89%BA.jpg" alt="主页"></p><p><img src="%E5%AD%A6%E4%B9%A0%E8%B7%AF%E5%BE%84-%E8%A7%86%E9%A2%91_%E7%88%B1%E5%A5%87%E8%89%BA-1585390234220.jpg" alt="学习路径-视频"></p><p><img src="%E8%AF%84%E8%AE%BA%E7%AE%A1%E7%90%86_%E7%88%B1%E5%A5%87%E8%89%BA.jpg" alt="评论管理"></p></div><h1 id="3-技术实现"><a href="#3-技术实现" class="headerlink" title="3. 技术实现"></a>3. 技术实现</h1><p>网页前端静态内容比较简单，<code>html</code>和<code>css</code>就不放上来了。下面写一下动态内容和数据库的实现吧。</p><h2 id="3-1-框架"><a href="#3-1-框架" class="headerlink" title="3.1 框架"></a>3.1 <strong>框架</strong></h2><h3 id="3-1-1-返回顶部悬浮样式变化"><a href="#3-1-1-返回顶部悬浮样式变化" class="headerlink" title="3.1.1 返回顶部悬浮样式变化"></a>3.1.1 返回顶部悬浮样式变化</h3><p>当鼠标经过时的<code>mouseover</code>事件运行函数，通过<code>jQuery</code>中的<code>attr()</code>方法对<code>&lt;img&gt;</code>图片标签中的源地址进行修改从而实现返回顶部图片的更换。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> toggle = <span class="literal">true</span>;</span><br><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$(<span class="string">"#ReturnTop"</span>).mouseover(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (toggle) &#123;</span><br><span class="line">$(<span class="string">".returntop img"</span>).attr(<span class="string">"src"</span>, <span class="string">"svg/returntop2.svg"</span>);</span><br><span class="line">toggle = <span class="literal">false</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">$(<span class="string">".returntop img"</span>).attr(<span class="string">"src"</span>, <span class="string">"svg/returntop.svg"</span>);</span><br><span class="line">toggle = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="3-2-主页"><a href="#3-2-主页" class="headerlink" title="3.2 主页"></a>3.2 主页</h2><h3 id="3-2-1-主页轮播图"><a href="#3-2-1-主页轮播图" class="headerlink" title="3.2.1 主页轮播图"></a>3.2.1 主页轮播图</h3><div align=center><p><img src="clip_image002.jpg" alt="轮播图"></p></div><p>用图片做链接，把<code>img</code>元素嵌入到<code>a</code>元素中，使用定时函数实现当图片轮显框没有单击时也能自动循环显示，当单击按钮时，右下角的方形图标颜色改变。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params">param</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">arguments</span>[<span class="number">1</span>] == <span class="literal">true</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">document</span>.querySelectorAll(param);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">document</span>.querySelector(param);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> $box = $(<span class="string">".box"</span>);</span><br><span class="line"><span class="keyword">var</span> $box1 = $(<span class="string">".box-1 ul li"</span>,<span class="literal">true</span>);</span><br><span class="line"><span class="keyword">var</span> $box2 = $(<span class="string">".box-2 ul"</span>);</span><br><span class="line"><span class="keyword">var</span> $box3 = $(<span class="string">".box-3"</span>);</span><br><span class="line"><span class="keyword">var</span> $length = $box1.length;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> str = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i =<span class="number">0</span>;i&lt;$length;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">0</span>)&#123;</span><br><span class="line">str +=<span class="string">"&lt;li class='on'&gt;"</span>+(i+<span class="number">1</span>)+<span class="string">"&lt;/li&gt;"</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">str += <span class="string">"&lt;li&gt;"</span>+(i+<span class="number">1</span>)+<span class="string">"&lt;/li&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$box2.innerHTML = str;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> current = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> timer;</span><br><span class="line">timer = setInterval(go,<span class="number">1000</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">go</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> j =<span class="number">0</span>;j&lt;$length;j++)&#123;</span><br><span class="line">$box1[j].style.display = <span class="string">"none"</span>;</span><br><span class="line">$box2.children[j].className = <span class="string">""</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($length == current)&#123;</span><br><span class="line">current = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">$box1[current].style.display = <span class="string">"block"</span>;</span><br><span class="line">$box2.children[current].className = <span class="string">"on"</span>;</span><br><span class="line">current++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> k=<span class="number">0</span>;k&lt;$length;k++)&#123;</span><br><span class="line">$box1[k].onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">clearInterval(timer);</span><br><span class="line">&#125;</span><br><span class="line">$box1[k].onmouseout = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">timer = setInterval(go,<span class="number">2000</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> p=<span class="number">0</span>;p&lt;$box3.children.length;p++)&#123;</span><br><span class="line">$box3.children[p].onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">clearInterval(timer);</span><br><span class="line">&#125;;</span><br><span class="line">$box3.children[p].onmouseout = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">timer = setInterval(go,<span class="number">2000</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> u =<span class="number">0</span>;u&lt;$length;u++)&#123;</span><br><span class="line">$box2.children[u].index  = u;</span><br><span class="line">$box2.children[u].onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">clearInterval(timer);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>;j&lt;$length;j++)&#123;</span><br><span class="line">$box1[j].style.display = <span class="string">"none"</span>;</span><br><span class="line">$box2.children[j].className = <span class="string">""</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.className = <span class="string">"on"</span>;</span><br><span class="line">$box1[<span class="keyword">this</span>.index].style.display = <span class="string">"block"</span>;</span><br><span class="line">current = <span class="keyword">this</span>.index +<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">$box2.children[u].onmouseout = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">timer = setInterval(go,<span class="number">2000</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$box3.children[<span class="number">0</span>].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">back();</span><br><span class="line">&#125;</span><br><span class="line">$box3.children[<span class="number">1</span>].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">go();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">back</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> j =<span class="number">0</span>;j&lt;$length;j++)&#123;</span><br><span class="line">$box1[j].style.display = <span class="string">"none"</span>;</span><br><span class="line">$box2.children[j].className = <span class="string">""</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(current == <span class="number">0</span>)&#123;</span><br><span class="line">current = $length;</span><br><span class="line">&#125;</span><br><span class="line">$box1[current<span class="number">-1</span>].style.display = <span class="string">"block"</span>;</span><br><span class="line">$box2.children[current<span class="number">-1</span>].className = <span class="string">"on"</span>;</span><br><span class="line">current--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-3-教程页面"><a href="#3-3-教程页面" class="headerlink" title="3.3 教程页面"></a>3.3 教程页面</h2><h3 id="3-3-1-lightbox展示图片"><a href="#3-3-1-lightbox展示图片" class="headerlink" title="3.3.1 lightbox展示图片"></a>3.3.1 lightbox展示图片</h3><div align=center><p><img src="clip_image002-1585390633753.jpg" alt="lightbox"></p></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">_initialize</span>(<span class="params"></span>) </span></span><br><span class="line"><span class="function"><span class="title">function</span> <span class="title">_start</span>(<span class="params">objClicked,jQueryMatchedObj</span>)</span></span><br><span class="line"><span class="function"><span class="title">function</span> <span class="title">_set_interface</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"><span class="title">function</span> <span class="title">_set_image_to_view</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"><span class="title">function</span> <span class="title">_resize_container_image_box</span>(<span class="params">intImageWidth,intImageHeight</span>)</span></span><br><span class="line"><span class="function"><span class="title">function</span> <span class="title">_show_image</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"><span class="title">function</span> <span class="title">_show_image_data</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"><span class="title">function</span> <span class="title">_set_navigation</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"><span class="title">function</span> <span class="title">_enable_keyboard_navigation</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"><span class="title">function</span> <span class="title">_disable_keyboard_navigation</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"><span class="title">function</span> <span class="title">_keyboard_action</span>(<span class="params">objEvent</span>)</span></span><br><span class="line"><span class="function"><span class="title">function</span> <span class="title">_preload_neighbor_images</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"><span class="title">function</span> <span class="title">_finish</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"><span class="title">function</span> <span class="title">___getPageSize</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"><span class="title">function</span> <span class="title">___getPageScroll</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"><span class="title">function</span> <span class="title">___pause</span>(<span class="params">ms</span>)</span></span><br></pre></td></tr></table></figure><h2 id="3-4-学习路径页面"><a href="#3-4-学习路径页面" class="headerlink" title="3.4 学习路径页面"></a>3.4 学习路径页面</h2><h3 id="3-4-1-视频嵌入"><a href="#3-4-1-视频嵌入" class="headerlink" title="3.4.1 视频嵌入"></a>3.4.1 视频嵌入</h3><div align=center><p><img src="clip_image002-1585390679214.jpg" alt="视频"></p></div><p>使用Bilibili提供的<code>&lt;iframe&gt;</code>嵌入教程视频。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">id</span>=<span class="string">"videoplay"</span>; <span class="attr">src</span>=<span class="string">"https://player.bilibili.com/player.html?aid=41848203&amp;cid=73474961&amp;page=1"</span> <span class="attr">scrolling</span>=<span class="string">"no"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">frameborder</span>=<span class="string">"no"</span> <span class="attr">framespacing</span>=<span class="string">"0"</span> <span class="attr">allowfullscreen</span>=<span class="string">"true"</span> <span class="attr">style</span>=<span class="string">"width: 830px; height: 580px; max-width: 100%"</span>&gt;</span> <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-4-2-实时聊天"><a href="#3-4-2-实时聊天" class="headerlink" title="3.4.2 实时聊天"></a>3.4.2 实时聊天</h3><div align=center><p><img src="clip_image002-1585390779667.jpg" alt="实时聊天"></p></div><p>用<code>Application(“bbs”)</code>来保存所有用户的发言并显示，当保存的发言达到15跳后使用removeall清楚Application对象。Application对象针对所有用户，可以被多个用户共享。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;%  </span><br><span class="line">Dim str &#39;str中存储留言时间、昵称、内容等信息</span><br><span class="line">if request.Form(&quot;LiuYan&quot;)&lt;&gt;&quot;&quot; then </span><br><span class="line">str&#x3D;Time()&amp;&quot;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;</span><br><span class="line">str&#x3D;str&amp;request.Form(&quot;LiuYan&quot;)&amp;&quot;&lt;br&gt;&quot;</span><br><span class="line">Application.Lock  </span><br><span class="line">Application(&quot;bbs&quot;)&#x3D;str&amp;Application(&quot;bbs&quot;)</span><br><span class="line">Application(&quot;visAll&quot;)&#x3D;Application(&quot;visAll&quot;)+1</span><br><span class="line">Application.Unlock</span><br><span class="line">str&#x3D;Null&#39;将已存储到Application变量中的留言清除</span><br><span class="line">end if </span><br><span class="line">response.write Application(&quot;bbs&quot;) </span><br><span class="line">if Application(&quot;visAll&quot;)&#x3D;18 then</span><br><span class="line">application.contents.removeall</span><br><span class="line">response.Write(&quot;实时聊天内容已满，即将清除聊天窗口内容……&quot;)</span><br><span class="line">end if</span><br><span class="line"> %&gt;</span><br></pre></td></tr></table></figure><h3 id="3-4-3-用户评论"><a href="#3-4-3-用户评论" class="headerlink" title="3.4.3 用户评论"></a>3.4.3 用户评论</h3><div align=center><p><img src="clip_image002-1585390820310.jpg" alt="用户评论"></p></div><p>通过<code>ADO</code>访问<code>Access</code>数据库并插入语句、根据数据库动态修改网页内容、使用conn.execute方法操纵数据库。</p><h4 id="3-4-3-1-Insert添加记录的实现"><a href="#3-4-3-1-Insert添加记录的实现" class="headerlink" title="3.4.3.1 Insert添加记录的实现"></a>3.4.3.1 Insert添加记录的实现</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--#include file&#x3D;&quot;conn.asp&quot;--&gt;</span><br><span class="line">&lt;% </span><br><span class="line">title&#x3D;request.Form(&quot;title&quot;)</span><br><span class="line">author&#x3D;request.Form(&quot;author&quot;)</span><br><span class="line">email&#x3D;request.Form(&quot;email&quot;)</span><br><span class="line">content&#x3D;request.Form(&quot;content&quot;)</span><br><span class="line">Set rs&#x3D;Server.CreateObject(&quot;ADODB.Recordset&quot;) </span><br><span class="line">rs.open &quot;select * from lyb&quot;,conn,1,3&#39;创建记录集，并设置记录集可写</span><br><span class="line">rs.addnew&#39;添加一条新记录，如果漏掉，将会改写原来的记录</span><br><span class="line">rs(&quot;author&quot;)&#x3D;author</span><br><span class="line">rs(&quot;content&quot;)&#x3D;content</span><br><span class="line">rs(&quot;date&quot;)&#x3D;date()</span><br><span class="line">rs.update &#39;更新记录集，将记录写入数据表中</span><br><span class="line">Response.Redirect(&quot;xxljplayer.asp&quot;) %&gt;</span><br></pre></td></tr></table></figure><h4 id="3-4-3-2-用户评论的分页及评论展示"><a href="#3-4-3-2-用户评论的分页及评论展示" class="headerlink" title="3.4.3.2 用户评论的分页及评论展示"></a>3.4.3.2 用户评论的分页及评论展示</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--#include file&#x3D;&quot;conn.asp&quot;--&gt;</span><br><span class="line">&lt;% pageNo&#x3D; Request(&quot;pageNo&quot;)</span><br><span class="line">if not IsNumeric(pageNo) or pageNo&#x3D;&quot;&quot; Then &#39;如果pageNo为空或非法则显示第一页</span><br><span class="line"> pageNo&#x3D;1</span><br><span class="line">Else</span><br><span class="line"> pageNo&#x3D;cInt(pageNo) &#39;pageNo一定要转换为数值型，因为要进行数值比较</span><br><span class="line">End if</span><br><span class="line">Set rs&#x3D;Server.CreateObject(&quot;ADODB.Recordset&quot;) </span><br><span class="line">rs.open &quot;select * from lyb order by id desc&quot;,conn,1</span><br><span class="line">rs.pagesize&#x3D;5 &#39;设置每页显示5条记录</span><br><span class="line">pageS&#x3D;rs.pagesize &#39;用pageS保存rs.pagesize</span><br><span class="line">rs.AbsolutePage&#x3D;pageNo&#39;从第pageNo页开始显示</span><br><span class="line"> %&gt;</span><br><span class="line">&lt;% do while not rs.eof and pageS&gt;0 %&gt; </span><br><span class="line">&lt;div id&#x3D;&quot;main&quot;&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;mainimg&quot;&gt;&lt;img src&#x3D;&quot;..&#x2F;img&#x2F;Photo.png&quot; width&#x3D;&quot;76px&quot; height&#x3D;&quot;76px&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;maintext&quot;&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;mainnice&quot;&gt;&lt;img id&#x3D;&quot;Dianzan&quot; src&#x3D;&quot;..&#x2F;svg&#x2F;unzan.svg&quot; width&#x3D;&quot;16px&quot; height&#x3D;&quot;16px&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line"> &lt;p&gt;&lt;b&gt;&lt;% &#x3D; rs(&quot;author&quot;) %&gt;&lt;&#x2F;b&gt;&lt;&#x2F;p&gt;</span><br><span class="line">    &lt;p&gt;&lt;% &#x3D; rs(&quot;content&quot;) %&gt;&lt;&#x2F;p&gt;</span><br><span class="line"> &lt;p align &#x3D; &quot;left&quot; style&#x3D;&quot;font-size:10px; color: #B2B2B2&quot;&gt;&lt;% &#x3D; rs(&quot;date&quot;) %&gt;&lt;&#x2F;p&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;mainline&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"> </span><br><span class="line">&lt;% pageS&#x3D;pageS-1</span><br><span class="line">rs.movenext</span><br><span class="line">loop%&gt;</span><br><span class="line">&lt;p&gt;&amp;nbsp;&lt;&#x2F;p&gt;</span><br><span class="line">&lt;p align&#x3D;&quot;center&quot;&gt; &lt;% if pageNo&lt;&gt;1 then &#39;设置超链接页码或翻页链接，实现分页导航</span><br><span class="line">response.write &quot;&lt;a href&#x3D;&#39;?pageNo&#x3D;1&#39;&gt;首页&lt;&#x2F;a&gt;  &quot;</span><br><span class="line">response.write &quot;&lt;a href&#x3D;&#39;?pageNo&#x3D;&quot;&amp;pageNo-1&amp;&quot;&#39;&gt;上一页&lt;&#x2F;a&gt;  &quot;</span><br><span class="line">else</span><br><span class="line">response.write &quot;首页   &quot;</span><br><span class="line">response.write &quot;上一页   &quot;</span><br><span class="line">end if</span><br><span class="line">For i&#x3D;1 to rs.PageCount </span><br><span class="line"> if i&#x3D;pageNo then </span><br><span class="line">   response.write i&amp;&quot;  &quot; &#39;分页，如果是当前页,则不存在链接</span><br><span class="line">  else</span><br><span class="line">   response.write &quot;&lt;a href&#x3D;&#39;?pageNo&#x3D;&quot;&amp;i&amp;&quot;&#39;&gt;&quot;&amp;i&amp;&quot;&lt;&#x2F;a&gt;&amp;nbsp;&quot; </span><br><span class="line">  end if </span><br><span class="line">Next</span><br><span class="line">if pageNo&lt;rs.PageCount then</span><br><span class="line">response.write &quot;&lt;a href&#x3D;&#39;?pageNo&#x3D;&quot;&amp;pageNo+1&amp;&quot;&#39;&gt;下一页&lt;&#x2F;a&gt;&amp;nbsp;&quot;</span><br><span class="line">response.write &quot;&lt;a href&#x3D;&#39;?pageNo&#x3D;&quot;&amp;PageCount&amp;&quot;&#39;&gt;末页&lt;&#x2F;a&gt;&amp;nbsp;&quot;</span><br><span class="line">else</span><br><span class="line">response.write &quot;下一页   &quot;</span><br><span class="line">response.write &quot;末页   &quot;</span><br><span class="line">end if</span><br><span class="line">response.write &quot;共&quot;&amp;rs.RecordCount&amp;&quot;条记录&amp;nbsp;&amp;nbsp;&quot; &#39;共多少条记录</span><br><span class="line">response.write pageNo&amp;&quot;&#x2F;&quot;&amp;rs.PageCount&amp;&quot;页&quot;&#39;当前页的位置</span><br><span class="line">  %&gt; &lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure><h4 id="3-4-3-3-conn-execute方法操纵数据库"><a href="#3-4-3-3-conn-execute方法操纵数据库" class="headerlink" title="3.4.3.3 conn.execute方法操纵数据库"></a>3.4.3.3 conn.execute方法操纵数据库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;% dim conn</span><br><span class="line">set conn&#x3D;Server.CreateObject(&quot;ADODB.Connection&quot;) </span><br><span class="line">conn.open(&quot;Provider&#x3D;Microsoft.Jet.OLEDB.4.0;Data Source&#x3D;&quot; &amp; Server.MapPath(&quot;comment.mdb&quot;) )</span><br><span class="line">&#39;conn.open(&quot;Dbq&#x3D;&quot; &amp; Server.Mappath(&quot;comment.mdb&quot;) &amp; &quot;;Driver&#x3D;&#123;Microsoft Access Driver (*.mdb)&#125;&quot; )</span><br><span class="line"> %&gt;</span><br></pre></td></tr></table></figure><h3 id="3-4-4-评论点赞功能"><a href="#3-4-4-评论点赞功能" class="headerlink" title="3.4.4 评论点赞功能"></a>3.4.4 评论点赞功能</h3><p>实现点击后点赞图标变换的功能。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#Dianzan"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (toggle2) &#123;</span><br><span class="line">$(<span class="string">"#mainnice img"</span>).attr(<span class="string">"src"</span>, <span class="string">"../svg/onzan.svg"</span>);</span><br><span class="line">toggle2 = <span class="literal">false</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">$(<span class="string">"#mainnice img"</span>).attr(<span class="string">"src"</span>, <span class="string">"../svg/unzan.svg"</span>);</span><br><span class="line">toggle2 = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="3-5-关于我们页面"><a href="#3-5-关于我们页面" class="headerlink" title="3.5 关于我们页面"></a>3.5 关于我们页面</h2><h3 id="3-5-1-段落的隐藏与显示"><a href="#3-5-1-段落的隐藏与显示" class="headerlink" title="3.5.1 段落的隐藏与显示"></a>3.5.1 段落的隐藏与显示</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$(<span class="string">"h2+ol"</span>).hide();</span><br><span class="line">$(<span class="string">"h2"</span>).hover (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$(<span class="string">"+ol"</span>,<span class="keyword">this</span>).slideDown(<span class="string">"slow"</span>);</span><br><span class="line">&#125;, </span><br><span class="line">);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="3-6-登录页面"><a href="#3-6-登录页面" class="headerlink" title="3.6 登录页面"></a>3.6 登录页面</h2><h3 id="3-6-1-实时时间显示"><a href="#3-6-1-实时时间显示" class="headerlink" title="3.6.1 实时时间显示"></a>3.6.1 实时时间显示</h3><p>利用JavaScript实现实时时钟显示并显示星期几。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clock</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">d = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="keyword">var</span> spt = <span class="built_in">document</span>.getElementById(<span class="string">"time"</span>);</span><br><span class="line">spt.innerHTML=d.getFullYear()+<span class="string">"年"</span>+(d.getMonth()+<span class="number">1</span>)+<span class="string">"月"</span>+d.getDate()+<span class="string">"日 "</span>+d.getHours()+<span class="string">":"</span>+d.getMinutes()+<span class="string">":"</span>+d.getSeconds();</span><br><span class="line"><span class="keyword">var</span> spweek = <span class="built_in">document</span>.getElementById(<span class="string">"xq"</span>);</span><br><span class="line">spweek.innerHTML=week();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">week</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> xingqi = d.getDay();</span><br><span class="line"><span class="keyword">switch</span> (xingqi)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">"星期天"</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">"星期一"</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">"星期二"</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">"星期三"</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">"星期四"</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">"星期五"</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">"星期六"</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-6-2聚焦表单"><a href="#3-6-2聚焦表单" class="headerlink" title="3.6.2聚焦表单"></a>3.6.2聚焦表单</h3><p>利用<code>onFocus</code>自动聚焦表单。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myFocus</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">this</span>.focus();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mySelect</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">this</span>.select();</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> elements = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"input"</span>);</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; elements.length;i++) &#123;</span><br><span class="line"><span class="keyword">var</span> type = elements[i].type;</span><br><span class="line"><span class="keyword">if</span> (type == <span class="string">"text"</span> || type == <span class="string">"password"</span>) &#123;</span><br><span class="line">  elements[i].onmouseover =myFocus;</span><br><span class="line">   elements[i].onfocus = mySelect;</span><br><span class="line">&#125;    &#125; </span><br><span class="line">setInterval(<span class="string">"clock()"</span>,<span class="number">1000</span>);</span><br><span class="line"><span class="keyword">var</span> elements = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"input"</span>);</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; elements.length;i++) &#123;</span><br><span class="line">        <span class="keyword">var</span> type = elements[i].type;</span><br><span class="line">       <span class="keyword">if</span> (type == <span class="string">"text"</span> || type == <span class="string">"password"</span>) &#123;</span><br><span class="line">          elements[i].onfocus = myFocus;</span><br><span class="line">   elements[i].onblur =myBlur;</span><br><span class="line">        &#125; &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-6-3密码校验"><a href="#3-6-3密码校验" class="headerlink" title="3.6.3密码校验"></a>3.6.3密码校验</h3><p>将用户输入的用户名和密码在admin表中进行查找，如果查找得到的记录集不为空，就表明有匹配的用户名和密码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">StrSQL&#x3D;&quot;DBQ&#x3D;&quot;+server.mappath(&quot;comment.mdb&quot;)+&quot;;DRIVER&#x3D;&#123;Microsoft Access Driver (*.mdb)&#125;;&quot;</span><br><span class="line">set conn&#x3D;server.createobject(&quot;ADODB.CONNECTION&quot;)</span><br><span class="line">conn.open StrSQL</span><br><span class="line">sub CloseConn()</span><br><span class="line">conn.close</span><br><span class="line">set conn&#x3D;nothing</span><br><span class="line">end sub</span><br><span class="line">function decrypt(dcode)</span><br><span class="line">dim texts</span><br><span class="line">dim i</span><br><span class="line">for i&#x3D;1 to len(dcode)</span><br><span class="line">texts&#x3D;texts &amp; chr(asc(mid(dcode,i,2))-i)</span><br><span class="line">next</span><br><span class="line">decrypt&#x3D;texts</span><br><span class="line">end function</span><br><span class="line">function encrypt(ecode)</span><br><span class="line">Dim texts</span><br><span class="line">dim i</span><br><span class="line">for i&#x3D;1 to len(ecode)</span><br><span class="line">texts&#x3D;texts &amp; chr(asc(mid(ecode,i,2))+i)</span><br><span class="line">next</span><br><span class="line">encrypt &#x3D; texts</span><br><span class="line">end function</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><h2 id="3-7-注册页面"><a href="#3-7-注册页面" class="headerlink" title="3.7 注册页面"></a>3.7 注册页面</h2><h3 id="3-7-1表单校验"><a href="#3-7-1表单校验" class="headerlink" title="3.7.1表单校验"></a>3.7.1表单校验</h3><p>在输入完一项即失去交掉时进行验证，提示用户进行修改。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myBlur</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">this</span>.style.backgroundColor=<span class="string">"#ffffff"</span>;</span><br><span class="line">startCheck(<span class="keyword">this</span>);<span class="comment">//这一句是新增的验证表单的代码</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">startCheck</span>(<span class="params">oInput</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(oInput.name==<span class="string">"User"</span>)&#123;<span class="comment">//如果是用户名的输入框</span></span><br><span class="line"><span class="keyword">if</span>(!oInput.value)&#123;<span class="comment">//如果值不为空</span></span><br><span class="line">oInput.focus();<span class="comment">//聚焦到用户名的输入框</span></span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"UserResult"</span>).innerHTML = <span class="string">"用户名不能为空"</span>;</span><br><span class="line"><span class="keyword">return</span>;&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"UserResult"</span>).innerHTML = <span class="string">""</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(oInput.name==<span class="string">"passwd2"</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">document</span>.getElementsByName(<span class="string">"passwd1"</span>)[<span class="number">0</span>].value!= <span class="built_in">document</span>.getElementsByName(<span class="string">"passwd2"</span>)[<span class="number">0</span>].value)<span class="comment">//如果两个密码框值不相等</span></span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"pwdResult"</span>).innerHTML = <span class="string">"两次输入的密码不一致"</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"pwdResult"</span>).innerHTML = <span class="string">""</span>;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-8-评论管理页面"><a href="#3-8-评论管理页面" class="headerlink" title="3.8 评论管理页面"></a>3.8 评论管理页面</h2><h3 id="3-8-1验证用户登录"><a href="#3-8-1验证用户登录" class="headerlink" title="3.8.1验证用户登录"></a>3.8.1验证用户登录</h3><p>验证用户的<code>Session(“admin”)</code>变量是否为空，如果为空就表明没有登录，而是通过直接输入admin.asp的URL进入的，此时必须将其引导至登录页。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if session(&quot;admin&quot;) &#x3D; &quot;&quot; then response.redirect &quot;denglu.asp&quot; %&gt;</span><br></pre></td></tr></table></figure><h3 id="3-8-2数据库语句的删除"><a href="#3-8-2数据库语句的删除" class="headerlink" title="3.8.2数据库语句的删除"></a>3.8.2数据库语句的删除</h3><p>利用Connection对象的Execute方法执行一条Delete语句来删除记录。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;% id&#x3D;cint(request.QueryString(&quot;id&quot;))</span><br><span class="line">Set rs&#x3D;Server.CreateObject(&quot;ADODB.Recordset&quot;) </span><br><span class="line">rs.open &quot;select * from lyb where id&#x3D;&quot;&amp;id ,conn,1,3 &#39;找到要删除的记录</span><br><span class="line">rs.delete&#39;删除当前记录</span><br><span class="line">rs.update &#39;更新记录集</span><br><span class="line">Response.Redirect(&quot;admin.asp&quot;)</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;% dim conn</span><br><span class="line">set conn&#x3D;Server.CreateObject(&quot;ADODB.Connection&quot;) </span><br><span class="line">conn.open(&quot;Provider&#x3D;Microsoft.Jet.OLEDB.4.0;Data Source&#x3D;&quot; &amp; Server.MapPath(&quot;comment.mdb&quot;) )</span><br><span class="line">&#39;conn.open(&quot;Dbq&#x3D;&quot; &amp; Server.Mappath(&quot;comment.mdb&quot;) &amp; &quot;;Driver&#x3D;&#123;Microsoft Access Driver (*.mdb)&#125;&quot; )</span><br><span class="line"> %&gt;</span><br></pre></td></tr></table></figure><h3 id="3-8-3数据库语句的批量删除"><a href="#3-8-3数据库语句的批量删除" class="headerlink" title="3.8.3数据库语句的批量删除"></a>3.8.3数据库语句的批量删除</h3><p>通过action属性将表单提交给自身。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style&#x3D;&quot;padding: 15px 15px 30px; background-color: white; border-radius: 0px 0px 3px 3px&quot;&gt;</span><br><span class="line">&lt;form method&#x3D;&quot;post&quot; action&#x3D;&quot;?del&#x3D;1&quot;&gt; &lt;!--表单提交给自身--&gt;</span><br><span class="line">&lt;table class&#x3D;&quot;comment&quot; border&#x3D;&quot;1&quot; width&#x3D;&quot;100%&quot;&gt;</span><br><span class="line">  &lt;tr &gt;</span><br><span class="line">&lt;th&gt;内容&lt;&#x2F;th&gt;&lt;th&gt;作者&lt;&#x2F;th&gt;&lt;th&gt;日期&lt;&#x2F;th&gt;&lt;th&gt;删除&lt;&#x2F;th&gt;</span><br><span class="line">  &lt;&#x2F;tr&gt;</span><br><span class="line">  &lt;% do while not rs.eof %&gt;</span><br><span class="line">  &lt;tr&gt;</span><br><span class="line">   &lt;td&gt;&lt;%&#x3D; rs(&quot;content&quot;) %&gt;&lt;&#x2F;td&gt;</span><br><span class="line">&lt;td&gt;&lt;%&#x3D; rs(&quot;author&quot;) %&gt;&lt;&#x2F;td&gt; </span><br><span class="line">&lt;td&gt;&lt;%&#x3D; rs(&quot;date&quot;) %&gt; &lt;&#x2F;td&gt;</span><br><span class="line">&lt;td align&#x3D;&quot;center&quot;&gt;</span><br><span class="line">&lt;input  type&#x3D;&quot;checkbox&quot; name&#x3D;&quot;selected&quot; value&#x3D;&quot;&lt;%&#x3D;rs(&quot;id&quot;)%&gt;&quot;&gt;&lt;&#x2F;td&gt; &lt;!--复选框--&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;tr&gt;</span><br><span class="line">&lt;% rs.movenext</span><br><span class="line">loop%&gt;</span><br><span class="line">&lt;tr &gt;</span><br><span class="line">&lt;td&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;</span><br><span class="line">&lt;td align&#x3D;&quot;center&quot; style&#x3D;&quot;width: 80px&quot;&gt;&lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;删除&quot; style&#x3D;&quot;width: 100px; height: 30px; padding: 1px 5px; border: 0px; background-color: #E71D73; border-radius: 20px; color: white; font-size: 14px;&quot;&gt;&lt;&#x2F;td&gt; &lt;!--删除按钮--&gt;</span><br><span class="line">&lt;&#x2F;tr&gt;</span><br><span class="line">&lt;&#x2F;table&gt;&lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;一个比较完整的课设，独立完成了整个网站的UI设计、前端和部分后端功能的开发。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;数字媒体系的学习内容覆盖广，种类多。在平时的学习中需要学习各种教程。所以想到开发一个网站将数字媒体系的常见的教程进行整合，方便数字媒体系的学生进行学习。（部分内容来自&lt;a href=&quot;https://www.doyoudo.com/&quot;&gt;doyoudo&lt;/a&gt;）</summary>
    
    
    
    <category term="Web" scheme="http://www.zanple.top/categories/Web/"/>
    
    
    <category term="works" scheme="http://www.zanple.top/tags/works/"/>
    
    <category term="UI" scheme="http://www.zanple.top/tags/UI/"/>
    
    <category term="Web" scheme="http://www.zanple.top/tags/Web/"/>
    
    <category term="ASP" scheme="http://www.zanple.top/tags/ASP/"/>
    
    <category term="jQuery" scheme="http://www.zanple.top/tags/jQuery/"/>
    
    <category term="JavaScript" scheme="http://www.zanple.top/tags/JavaScript/"/>
    
    <category term="数据库" scheme="http://www.zanple.top/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Unity-新式数字博物馆</title>
    <link href="http://www.zanple.top/2019/08/23/unity-new-museum/"/>
    <id>http://www.zanple.top/2019/08/23/unity-new-museum/</id>
    <published>2019-08-23T08:24:26.000Z</published>
    <updated>2019-08-23T08:24:26.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一个基于Unity的虚拟现实大创项目。</p></blockquote><h1 id="1-引言"><a href="#1-引言" class="headerlink" title="1. 引言"></a>1. 引言</h1><p>博物馆作为一个向公众展示产品文化，传承人类文明与社会历史文化的重要平台，在人们日益重视精神文化的生活中占据着重要地位，而博物馆的存在在于让观众对其展品能够有一定深度的了解。因此，运用各种展现方式来激发观众的展品的兴趣与求知欲便尤为重要。<a id="more"></a>而传统博物馆与目前已有的数字虚拟化博物馆在人们普遍的逻辑思维里便只是一个“收藏文物和展示文物”的地方，形成这种思维的主要原因是传统博物馆与目前已有的数字虚拟化博物馆的展陈设计过于呆板无趣，且展品大多数锁在玻璃柜里。目前大多博物馆都还停留在模仿一些著名博物馆的展陈方式而没有结合自身展品的特征来进行展览，而数字虚拟博物馆局限于对现实博物馆的还原，缺乏对展品展陈方式的创新和与展品的互动，导致观众失去参观的兴趣和进一步了解的欲望，进一步制约着博物馆的发展。</p><p>随着科技的发展，虚拟现实（Virtual Reality/VR）技术也得到了飞快的进步，人们对VR技术的关注日渐升温，且VR技术的沉浸性这一基本特征可以帮助博物馆还原展品的发展状态与内在联系，突破二维展示的局限，最大化的还原场景的真实性，为展览呈现效果单一的缺陷带来显著改变。而VR技术的交互性和多感知性则可进一步拉近与观众的距离，增加展陈的趣味性，提升观众的兴趣，从而达到增强观众的参观体验。</p><h1 id="2-项目意义："><a href="#2-项目意义：" class="headerlink" title="2. 项目意义："></a>2. 项目意义：</h1><h2 id="2-1-对博物馆运维成本与文物保护上的作用"><a href="#2-1-对博物馆运维成本与文物保护上的作用" class="headerlink" title="2.1 对博物馆运维成本与文物保护上的作用"></a>2.1 对博物馆运维成本与文物保护上的作用</h2><p>在博物馆很多艺术品都是经历了很长的历史而保留下来的，有些文物已经出现剥落、脱色、脆化等情况，而且经过人工修复也无法长期展示和研究。使用虚拟技术有利于易损文物的保护，降低博物馆对文物的维修成本。另一方面，通过运用VR技术构建场景体验式博物馆，可以克服传统展示易受展厅空间限制的缺点，减少展品展柜和场景体验区的占用空间，降低搭建场景体验区的成本。</p><h2 id="2-2-对博物馆藏品展示方式上的作用"><a href="#2-2-对博物馆藏品展示方式上的作用" class="headerlink" title="2.2 对博物馆藏品展示方式上的作用"></a>2.2 对博物馆藏品展示方式上的作用</h2><p>我国各种博物馆保存的文物达到了 100 多万件，而且因为展柜占用的空间，还有将文物存放在展柜中，更是影响观众的欣赏。而运用VR技术则可以让观众进行虚拟操作，与展品进行互动，拉近了观众与藏品的距离，而且也能加深人们对艺术品的理解力，提高人们观赏历史文物的兴趣。</p><p>当下数字虚拟博物馆大多还局限于对现实博物馆的还原，没有真正运用虚拟现实技术的优势。而场景体验式的特点，为观众提供身临其境的感觉，实现观众在博物馆这个限定空间内能够沉浸于多个场景的时空中，将延伸与拓展博物馆展示的更大价值和意义。当观众在博物馆内戴上VR 头盔或眼镜后，观看的场景与在馆内观看其他视频的环境截然不同。并且这样的虚拟场景不再局限于传统博物馆对单类展品发展的线性介绍，而可以同时对多类展品的发展有机地联系在一起，实现在同一空间不同时间的综合展览，让观众对不同展品的时间发展有更为深入的理解。这样非线性思维方式使得体验成为一种超越时间和空间的跳跃式行为，观众可以从任意一个展品感受历史的发展，又在历史的发展中与任意一个展品相遇。这种更接近于人类大脑信息记忆的随意性和跳跃性体验，恢复了观众亲近事件的自然状态，让每个人见证参与的历史化作场景回到我们身边。</p><h2 id="2-3-对博物馆教育功能的意义"><a href="#2-3-对博物馆教育功能的意义" class="headerlink" title="2.3 对博物馆教育功能的意义"></a>2.3 对博物馆教育功能的意义</h2><p>利用虚拟现实和三维技术给人们提供一个真实的、直观的艺术展品与场景。利用VR这一新兴的体验方式，极大的提高了观众的参观兴趣，同时能够充分满足观众对展品观赏的需求。尤其对于青少年观众来说，他们更注重与展览的趣味性，VR技术对于他们的吸引性更强。</p><p>而场景体验式的博物馆，可以让观众同时了解到多种展品的历史发展状态，让观众对历史的发展有更为全面的认知。数字博物馆内的参观引导机制与博物馆文创周边的结合，增强观众尤其是青少年对展品及历史探索的主动性。</p><h1 id="3-实际应用"><a href="#3-实际应用" class="headerlink" title="3. 实际应用"></a>3. 实际应用</h1><h2 id="3-1-应用于博物馆文物的展示"><a href="#3-1-应用于博物馆文物的展示" class="headerlink" title="3.1 应用于博物馆文物的展示"></a>3.1 应用于博物馆文物的展示</h2><p>利用计算机三维建模技术对特定历史时期的场景及相关文物进行建模，结合VR设备实现对特定历史时期的场景和文物的还原。使观众能在参观博物馆时能够“置身”于某个时空，冲任意角度真实地感受所处的历史背景，大大加深了观众对展品的了解与兴趣，丰富了参观博物馆的实际体验，降低馆方建造场景式体验区的成本。借助VR设备的手柄，观众可以在虚拟的场景中与展品进行一定的互动，能够将展品“拿在手中”，从多个角度零距离的观察展品。</p><p>而虚拟博物馆的场景式特点，可以在同一空间下对多种物品的发展同时进行展示，让观众对不同展品的发展历程有更为立体的认识，传统博物馆只能分别对展品发展历程展示的缺陷。</p><p>对场景中的探索过程进行一定的设计，结合博物馆的文创周边产品，能够让观众不再是被动盲目的接受知识，引导观众主动去探索展品。</p><p>对于面对青少年的特殊展厅，加入引导人的体验机制，让青少年在与展品进行互动和深入了解后进行答题，予以一定的奖励，进一步加深博物馆的教育功能。</p><h2 id="3-2-应用于移动式博物馆"><a href="#3-2-应用于移动式博物馆" class="headerlink" title="3.2 应用于移动式博物馆"></a>3.2 应用于移动式博物馆</h2><p>利用VR设备的便携性，能够解决传统博物馆在地理空间上的分配不均问题，降低公众参观博物馆的门槛，拉近博物馆与公众的距离。利用这一特征，各大博物馆可以开设移动式新型博物馆，定期到各社区与学校开展相应的文化活动，满足公众的文化需求，而基于虚拟现实技术的场景体验式数字博物馆，可以避免移动式博物馆空间小，能够展示展品少的缺点；同时借助VR这一新兴技术，可以极大地刺激观众的兴趣，让更多人能够主动地到博物馆参展。</p><h1 id="4-研究内容"><a href="#4-研究内容" class="headerlink" title="4. 研究内容"></a>4. 研究内容</h1><p>在2017年3月由美国博物馆联盟所属未来博物馆中心发布的引导现代博物馆发展的报告中，提出了九大提升优化博物馆体验的设计方法。其中重点提到了虚拟现实技术在助力博物馆展示的突破点。虚拟现实（VR，Virtual Reality）是利用电脑模拟产生的三维空间，进而营造出虚拟世界的一种新媒体技术。使用者佩戴特制的头盔显示器、手柄以及身体部位跟踪器等设备，在虚拟场景中通过视觉、听觉和触觉等感官的模拟，获得如同身临其境的感受。随着 2016 年以来虚拟现实技术的迅猛发展，世界各地的博物馆也相继尝试将这样一种新兴技术作为特殊的叙事性设计加以应用。</p><p>本项目的主要研究内容是借助VR设备，利用计算机三维建模技术对场景和展品进行建模。选取八九十年代至今这一典型历史时期。将这一历史时期分为八九十年代、二十世纪末、2008年与当下时期这四个变化较大的时间段，通过对居民客厅的再现，还原改革开放以来民众家居生活用品及电子产品的发展历程，探索制定引导参观机制以提高观众探索的主动性，加强博物馆的教育功能。团队利用Cinema 4D对场景和展品的建模，Unity进行该应用的开发，最后借助HTC Vive将应用中的场景映射到观众眼前。</p><h1 id="5-关键问题"><a href="#5-关键问题" class="headerlink" title="5. 关键问题"></a>5. 关键问题</h1><h2 id="5-1-拟真场景的搭建与展品的建模"><a href="#5-1-拟真场景的搭建与展品的建模" class="headerlink" title="5.1 拟真场景的搭建与展品的建模"></a>5.1 拟真场景的搭建与展品的建模</h2><p>对不同时期的场景和展品需要进行一定的研究，确保搭建的符合该时期的历史事实。如场景的灯光与房间的材质的还原，展品材质的还原，都需要对大量该历史时期的记载进行参考，将展品与场景整合模拟出较为真实的历史场景。</p><h2 id="5-2-借助VR设备实现观众与场景的交互"><a href="#5-2-借助VR设备实现观众与场景的交互" class="headerlink" title="5.2 借助VR设备实现观众与场景的交互"></a>5.2 借助VR设备实现观众与场景的交互</h2><p>观众需要利用手柄对虚拟场景进行交互，如行走，拿取，旋转等操作。如何利用手柄实现与虚拟博物馆的最佳交互方式，还原不同展品的真实交互方式，需要通过一定的实验与测试进行对比。</p><h2 id="5-3-引导参观机制与观众体验的平衡"><a href="#5-3-引导参观机制与观众体验的平衡" class="headerlink" title="5.3 引导参观机制与观众体验的平衡"></a>5.3 引导参观机制与观众体验的平衡</h2><p>通过设定引导参观机制来让观众主动探索博物馆，同时避免该机制过于繁杂导致观众的探索兴趣降低。例如对于青少年这一群体，如何通过设定一定的问题与奖励机制，鼓励青少年能够主动了解展品背后的历史知识，需要通过一定的实验与测试进行设定。</p><h1 id="6-实现"><a href="#6-实现" class="headerlink" title="6. 实现"></a>6. 实现</h1><p>建模部分基本在<code>3ds Max</code>和<code>Cinema 4D</code>完成，部分模型来自<a href="https://www.3d66.com/">3D溜溜网。</a>将模型导出为fbx格式（3ds Max文件直接用unity导入）。</p><div align=center><p><img src="unity-new-museum.png" alt="导入Unity"></p><img src="image-20200328171409707.png" alt="2010模型" style="zoom: 80%;" /></div><p>制作不同时期家具的UI界面：</p><div align=center><img src="image-20200328171656170.png" alt="90年代" style="zoom:80%;" /><img src="image-20200328171757293.png" alt="2019" style="zoom:80%;" /></div><p>在Unity中绑定各个物品的触发事件，如电视的播放，风扇的旋转等。</p><p>为了增加每个时期的真实性，对每个时代的介绍故事进行策划，其中2010的故事撰写时我参考了很多资料如阎雷的《昨天的中国》等，并选取特定的时期并结合房间物品特色以日记的形式叙述故事：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">1985年 11月7日 晴&#x2F;雾</span><br><span class="line">今天窗外白茫茫一片，被太阳穿透的奶白色晨雾，让窗外的整个世界看上去像一幅雕刻作品，深蓝色的天空仿佛预示着冬天即将来临。</span><br><span class="line">傍晚从楼层管理员那里买到了一瓶酸奶。</span><br><span class="line">最近开了好多个体商店，买东西似乎变得越来越方便。家里的缝纫机最近不大顺滑，大抵是要买润滑油了吧。</span><br><span class="line">明天早起骑车到白天鹅宾馆看展览，顺便到新开的商店看看。</span><br><span class="line"></span><br><span class="line">1999年 12月20日 晴</span><br><span class="line">澳门回归了！</span><br><span class="line">昨晚看来澳门回归的交接仪式，五星红旗终于再次飘扬在澳门上，澳门再也不是“ma-cau”了！</span><br><span class="line">最近大家都在谈论12月31日世界末日的传言，哈哈哈哈要是真是世界末日我要和我的魂斗罗呆在一起。</span><br><span class="line">晚上和李明去PS厅打拳皇97，再到他家看看什么特丽龙彩电是怎样的。</span><br><span class="line">过了这个世纪我也要去买一台“NOKIA”。</span><br><span class="line"></span><br><span class="line">2010年 5月12日 雨</span><br><span class="line"></span><br><span class="line">今天是5月12日，汶川大地震两年了，逝者安息！但愿希望能更快地从悲壮中生长出来吧。</span><br><span class="line">上海世博会开幕了十几天了，不知不觉奥运会过了两年了，仿佛还是昨天的事，中国逐渐走向世界的大舞台了啊。</span><br><span class="line">连续下了几天的雨了，要是有个机器人能够帮我打理好家里的一切像扫地做饭多好啊，这样我就可以躺在床上什么事也不做了。</span><br><span class="line">昨天新买的手机发现居然不能放内存卡了！</span><br><span class="line"></span><br><span class="line">2018年 11月2日 阴</span><br><span class="line">今天第一次看到港珠澳大桥，天哪，这么浩大的工程是怎么完成的。</span><br><span class="line">柔宇科技的折叠手机有点炫酷，虽然边框还是有点大。毕竟这年头连显示器、电视都做到接近无边框了。</span><br><span class="line">小爱同学坏了今天修好寄回来了，无聊的时候还是有点意思的。</span><br><span class="line">晚上回家又塞车了…什么时候能有自动驾驶啊。</span><br><span class="line">明天就是LPL总决赛了，IG加油啊。</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;一个基于Unity的虚拟现实大创项目。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;1-引言&quot;&gt;&lt;a href=&quot;#1-引言&quot; class=&quot;headerlink&quot; title=&quot;1. 引言&quot;&gt;&lt;/a&gt;1. 引言&lt;/h1&gt;&lt;p&gt;博物馆作为一个向公众展示产品文化，传承人类文明与社会历史文化的重要平台，在人们日益重视精神文化的生活中占据着重要地位，而博物馆的存在在于让观众对其展品能够有一定深度的了解。因此，运用各种展现方式来激发观众的展品的兴趣与求知欲便尤为重要。</summary>
    
    
    
    <category term="Unity" scheme="http://www.zanple.top/categories/Unity/"/>
    
    
    <category term="建模" scheme="http://www.zanple.top/tags/%E5%BB%BA%E6%A8%A1/"/>
    
    <category term="游戏" scheme="http://www.zanple.top/tags/%E6%B8%B8%E6%88%8F/"/>
    
    <category term="Unity" scheme="http://www.zanple.top/tags/Unity/"/>
    
    <category term="VR" scheme="http://www.zanple.top/tags/VR/"/>
    
    <category term="大创" scheme="http://www.zanple.top/tags/%E5%A4%A7%E5%88%9B/"/>
    
  </entry>
  
  <entry>
    <title>Java Swing图形用户界面</title>
    <link href="http://www.zanple.top/2019/06/21/java-swing/"/>
    <id>http://www.zanple.top/2019/06/21/java-swing/</id>
    <published>2019-06-21T03:46:01.000Z</published>
    <updated>2019-06-21T03:46:01.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>通过图形用户界面（Graphics User Interface，GUI），用户和程序之间可以方便地进行交互。Java包含了许多来支持GUI设计的类，如：按钮、菜单、列表、文本框等组件类，同时它还包含窗口、面板等容器类。学习组件除了了解组件的属性和功能外，一个更重要的方面是学习怎样处理组件上发生的界面事件。在学习处理事件时，必须很好地掌握事件源、监视器、处理事件的接口这三个概念。<a id="more"></a></p><p>（1）事件源</p><p>能够产生事件的对象都可以成为事件源，如文本框、按钮、下拉式列表等。也就是说，事件源必须是一个对象，而且这个对象必须是Java认为能够发生事件的对象。</p><p>（2）监视器。</p><p>我们需要一个对象对事件源进行监视，以便对发生的事件作出处理。事件源通过调用相应的方法将某个对象作为自己的监视器。</p><p>（3）处理事件的接口。</p><p>监视器负责处理事件源发生的事件。Java语言使用了接口回调技术设计了它的处理事件模式。事件源增加监视的方法</p><p>addXXXListener(XXXListener listener)</p><p>中的参数是一个接口，listener可以引用任何实现了该接口的类所创建的对象，当事件源发生事件时，接口listener立刻回调被类实现的接口中的某个方法。</p></blockquote><h1 id="1-算术测试"><a href="#1-算术测试" class="headerlink" title="1. 算术测试"></a>1. 算术测试</h1><p>编写一个算术测试小软件，用来训练小学生的算术能力。程序有3个类组成，其中Teacher对象充当监视器，负责给出算术题目，并判断回答者的答案是否正确。ComputerFrame对象负责为算术题目提供视图，比如用户可以通过ComputerFrame对象提供的GUI界面看到题目，并通过该GUI界面给出题目的答案；MailClass是软件的主类。</p><div align=center><p><img src="image-20200327164941342.png" alt="算术测试"></p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">MainClass.java</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainClass</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</span><br><span class="line">      ComputerFrame frame;</span><br><span class="line">      frame=<span class="keyword">new</span> ComputerFrame(); </span><br><span class="line">      frame.setTitle(<span class="string">"算术测试"</span>);  </span><br><span class="line">      frame.setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">650</span>,<span class="number">180</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">ComputerFrame.java</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ComputerFrame</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line">   JMenuBar menubar;</span><br><span class="line">   JMenu choiceGrade; <span class="comment">//选择级别的菜单</span></span><br><span class="line">   JMenuItem  grade1,grade2;</span><br><span class="line">   JTextField textOne,textTwo,textResult;</span><br><span class="line">   JButton getProblem,giveAnwser;</span><br><span class="line">   JLabel operatorLabel,message;</span><br><span class="line">   Teacher teacherZhang;</span><br><span class="line">   ComputerFrame() &#123; </span><br><span class="line">      teacherZhang=<span class="keyword">new</span> Teacher();</span><br><span class="line">      teacherZhang.setMaxInteger(<span class="number">20</span>);</span><br><span class="line">      setLayout(<span class="keyword">new</span> FlowLayout());</span><br><span class="line">      menubar = <span class="keyword">new</span> JMenuBar(); </span><br><span class="line">      choiceGrade = <span class="keyword">new</span> JMenu(<span class="string">"选择级别"</span>); </span><br><span class="line">      grade1 = <span class="keyword">new</span> JMenuItem(<span class="string">"幼儿级别"</span>);</span><br><span class="line">      grade2 = <span class="keyword">new</span> JMenuItem(<span class="string">"儿童级别"</span>);</span><br><span class="line">      grade1.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">                                   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">                                      teacherZhang.setMaxInteger(<span class="number">10</span>);</span><br><span class="line">                                   &#125;</span><br><span class="line">                              &#125;);</span><br><span class="line">      grade2.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">                                   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">                                      teacherZhang.setMaxInteger(<span class="number">50</span>);</span><br><span class="line">                                   &#125;</span><br><span class="line">                              &#125;); </span><br><span class="line">      choiceGrade.add(grade1);</span><br><span class="line">      choiceGrade.add(grade2);</span><br><span class="line">      menubar.add(choiceGrade);</span><br><span class="line">      setJMenuBar(menubar); </span><br><span class="line">      textOne = <span class="keyword">new</span> JTextField(<span class="number">5</span>); <span class="comment">//创建textOne,其可见字符长是5</span></span><br><span class="line">      textTwo=<span class="keyword">new</span> JTextField(<span class="number">5</span>);</span><br><span class="line">      textResult=<span class="keyword">new</span> JTextField(<span class="number">5</span>);  </span><br><span class="line">      operatorLabel=<span class="keyword">new</span> JLabel(<span class="string">"+"</span>);</span><br><span class="line">      operatorLabel.setFont(<span class="keyword">new</span> Font(<span class="string">"Arial"</span>,Font.BOLD,<span class="number">20</span>)); </span><br><span class="line">      message=<span class="keyword">new</span> JLabel(<span class="string">"你还没有回答呢"</span>);</span><br><span class="line">      getProblem=<span class="keyword">new</span> JButton(<span class="string">"获取题目"</span>);</span><br><span class="line">      giveAnwser=<span class="keyword">new</span> JButton(<span class="string">"确认答案"</span>);</span><br><span class="line">      add(getProblem); </span><br><span class="line">      add(textOne);</span><br><span class="line">      add(operatorLabel);</span><br><span class="line">      add(textTwo);</span><br><span class="line">      add(<span class="keyword">new</span> JLabel(<span class="string">"="</span>));</span><br><span class="line">      add(textResult);</span><br><span class="line">      add(giveAnwser); </span><br><span class="line">      add(message);</span><br><span class="line">      textResult.requestFocus();</span><br><span class="line">      textOne.setEditable(<span class="keyword">false</span>);</span><br><span class="line">      textTwo.setEditable(<span class="keyword">false</span>);</span><br><span class="line">      getProblem.setActionCommand(<span class="string">"getProblem"</span>);</span><br><span class="line">      textResult.setActionCommand(<span class="string">"answer"</span>);</span><br><span class="line">      giveAnwser.setActionCommand(<span class="string">"answer"</span>);</span><br><span class="line">      teacherZhang.setJTextField(textOne,textTwo,textResult);</span><br><span class="line">      teacherZhang.setJLabel(operatorLabel,message); </span><br><span class="line">getProblem.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">teacherZhang.actionPerformed(e);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;);</span><br><span class="line">      giveAnwser.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">teacherZhang.actionPerformed(e);</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;);</span><br><span class="line"> textResult.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">teacherZhang.actionPerformed(e);</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;);      </span><br><span class="line">setVisible(<span class="keyword">true</span>);</span><br><span class="line">     validate();</span><br><span class="line">     setDefaultCloseOperation(DISPOSE_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">Teacher.java</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Teacher</span> <span class="keyword">implements</span> <span class="title">ActionListener</span> </span>&#123;</span><br><span class="line">   <span class="keyword">int</span> numberOne,numberTwo;</span><br><span class="line">   String operator=<span class="string">""</span>;</span><br><span class="line">   <span class="keyword">boolean</span> isRight;</span><br><span class="line">   Random random;  <span class="comment">//用于给出随机数</span></span><br><span class="line">   <span class="keyword">int</span> maxInteger;  <span class="comment">//题目中最大的整数</span></span><br><span class="line">   JTextField textOne,textTwo,textResult;</span><br><span class="line">   JLabel operatorLabel,message;</span><br><span class="line">   Teacher() &#123;</span><br><span class="line">      random = <span class="keyword">new</span> Random(); </span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMaxInteger</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">      maxInteger=n;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">      String str = e.getActionCommand();</span><br><span class="line">      <span class="keyword">if</span>(str.equals(<span class="string">"getProblem"</span>)) &#123;</span><br><span class="line">          numberOne = random.nextInt(maxInteger)+<span class="number">1</span>;<span class="comment">//1至maxInteger之间的随机数;</span></span><br><span class="line">          numberTwo=random.nextInt(maxInteger)+<span class="number">1</span>;</span><br><span class="line">          <span class="keyword">double</span> d=Math.random(); <span class="comment">// 获取(0,1)之间的随机数</span></span><br><span class="line">          <span class="keyword">if</span>(d&gt;=<span class="number">0.5</span>)</span><br><span class="line">             operator=<span class="string">"+"</span>;</span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">            operator=<span class="string">"-"</span>;  </span><br><span class="line">          textOne.setText(<span class="string">""</span>+numberOne);</span><br><span class="line">          textTwo.setText(<span class="string">""</span>+numberTwo); </span><br><span class="line">          operatorLabel.setText(operator); </span><br><span class="line">          message.setText(<span class="string">"请回答"</span>);</span><br><span class="line">          textResult.setText(<span class="keyword">null</span>); </span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>(str.equals(<span class="string">"answer"</span>)) &#123;</span><br><span class="line">          String answer=textResult.getText();</span><br><span class="line">          <span class="keyword">try</span>&#123;  <span class="keyword">int</span> result=Integer.parseInt(answer); </span><br><span class="line">                <span class="keyword">if</span>(operator.equals(<span class="string">"+"</span>))&#123;</span><br><span class="line">                  <span class="keyword">if</span>(result==numberOne+numberTwo)</span><br><span class="line">                     message.setText(<span class="string">"你回答正确"</span>);</span><br><span class="line">                  <span class="keyword">else</span></span><br><span class="line">                    message.setText(<span class="string">"你回答错误"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(operator.equals(<span class="string">"-"</span>))&#123;</span><br><span class="line">                  <span class="keyword">if</span>(result==numberOne-numberTwo)</span><br><span class="line">                     message.setText(<span class="string">"你回答正确"</span>);</span><br><span class="line">                  <span class="keyword">else</span></span><br><span class="line">                    message.setText(<span class="string">"你回答错误"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">catch</span>(NumberFormatException ex) &#123;</span><br><span class="line">                message.setText(<span class="string">"请输入数字字符"</span>);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setJTextField</span><span class="params">(JTextField ... t)</span> </span>&#123;</span><br><span class="line">      textOne=t[<span class="number">0</span>];</span><br><span class="line">      textTwo=t[<span class="number">1</span>];</span><br><span class="line">      textResult=t[<span class="number">2</span>]; </span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setJLabel</span><span class="params">(JLabel ...label)</span> </span>&#123;</span><br><span class="line">      operatorLabel=label[<span class="number">0</span>];</span><br><span class="line">      message=label[<span class="number">1</span>];</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-华容道"><a href="#2-华容道" class="headerlink" title="2. 华容道"></a>2. 华容道</h1><p>华容道是大家很熟悉的一个传统智力游戏。编写GUI程序，用户通过键盘和鼠标事件来实现曹操、关羽等人物的移动。</p><div align=center><p><img src="image-20200327165218787.png" alt="华容道"></p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">MainClass.java</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainClass</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</span><br><span class="line">      <span class="keyword">new</span> Hua_Rong_Road();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line">Hua_Rong_Road.java </span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hua_Rong_Road</span> <span class="keyword">extends</span> <span class="title">JFrame</span> <span class="keyword">implements</span> <span class="title">MouseListener</span>,<span class="title">KeyListener</span>,<span class="title">ActionListener</span> </span>&#123;</span><br><span class="line">   Person person[]=<span class="keyword">new</span> Person[<span class="number">10</span>];</span><br><span class="line">   JButton left,right,above,below;  </span><br><span class="line">   JButton restart=<span class="keyword">new</span> JButton(<span class="string">"重新开始"</span>);</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">Hua_Rong_Road</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      init();</span><br><span class="line">      setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE); </span><br><span class="line">      setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">320</span>,<span class="number">500</span>);</span><br><span class="line">      setVisible(<span class="keyword">true</span>);</span><br><span class="line">      validate();</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      setLayout(<span class="keyword">null</span>); </span><br><span class="line">      add(restart);</span><br><span class="line">      restart.setBounds(<span class="number">100</span>,<span class="number">320</span>,<span class="number">120</span>,<span class="number">35</span>);</span><br><span class="line">      restart.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">      String name[]=&#123;<span class="string">"曹操"</span>,<span class="string">"关羽"</span>,<span class="string">"张"</span>,<span class="string">"刘"</span>,<span class="string">"周"</span>,<span class="string">"黄"</span>,<span class="string">"兵"</span>,<span class="string">"兵"</span>,<span class="string">"兵"</span>,<span class="string">"兵"</span>&#125;;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;name.length;k++) &#123;</span><br><span class="line">         person[k]=<span class="keyword">new</span> Person(k,name[k]);</span><br><span class="line">         person[k].addMouseListener(<span class="keyword">this</span>);</span><br><span class="line">         person[k].addKeyListener(<span class="keyword">this</span>);</span><br><span class="line">         add(person[k]);</span><br><span class="line">      &#125;</span><br><span class="line">      person[<span class="number">0</span>].setBounds(<span class="number">104</span>,<span class="number">54</span>,<span class="number">100</span>,<span class="number">100</span>); </span><br><span class="line">      person[<span class="number">1</span>].setBounds(<span class="number">104</span>,<span class="number">154</span>,<span class="number">100</span>,<span class="number">50</span>); </span><br><span class="line">      person[<span class="number">2</span>].setBounds(<span class="number">54</span>, <span class="number">154</span>,<span class="number">50</span>,<span class="number">100</span>); </span><br><span class="line">      person[<span class="number">3</span>].setBounds(<span class="number">204</span>,<span class="number">154</span>,<span class="number">50</span>,<span class="number">100</span>); </span><br><span class="line">      person[<span class="number">4</span>].setBounds(<span class="number">54</span>, <span class="number">54</span>, <span class="number">50</span>,<span class="number">100</span>); </span><br><span class="line">      person[<span class="number">5</span>].setBounds(<span class="number">204</span>, <span class="number">54</span>, <span class="number">50</span>,<span class="number">100</span>);  </span><br><span class="line">      person[<span class="number">6</span>].setBounds(<span class="number">54</span>,<span class="number">254</span>,<span class="number">50</span>,<span class="number">50</span>);  </span><br><span class="line">      person[<span class="number">7</span>].setBounds(<span class="number">204</span>,<span class="number">254</span>,<span class="number">50</span>,<span class="number">50</span>); </span><br><span class="line">      person[<span class="number">8</span>].setBounds(<span class="number">104</span>,<span class="number">204</span>,<span class="number">50</span>,<span class="number">50</span>); </span><br><span class="line">      person[<span class="number">9</span>].setBounds(<span class="number">154</span>,<span class="number">204</span>,<span class="number">50</span>,<span class="number">50</span>); </span><br><span class="line">      person[<span class="number">9</span>].requestFocus();</span><br><span class="line">      left=<span class="keyword">new</span> JButton();  </span><br><span class="line">      right=<span class="keyword">new</span> JButton();</span><br><span class="line">      above=<span class="keyword">new</span> JButton(); </span><br><span class="line">      below=<span class="keyword">new</span> JButton();</span><br><span class="line">      add(left); </span><br><span class="line">      add(right);</span><br><span class="line">      add(above); </span><br><span class="line">      add(below);</span><br><span class="line">      left.setBounds(<span class="number">49</span>,<span class="number">49</span>,<span class="number">5</span>,<span class="number">260</span>);</span><br><span class="line">      right.setBounds(<span class="number">254</span>,<span class="number">49</span>,<span class="number">5</span>,<span class="number">260</span>);</span><br><span class="line">      above.setBounds(<span class="number">49</span>,<span class="number">49</span>,<span class="number">210</span>,<span class="number">5</span>);</span><br><span class="line">      below.setBounds(<span class="number">49</span>,<span class="number">304</span>,<span class="number">210</span>,<span class="number">5</span>);</span><br><span class="line">      validate();</span><br><span class="line">   &#125; </span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyTyped</span><span class="params">(KeyEvent e)</span></span>&#123;&#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyReleased</span><span class="params">(KeyEvent e)</span></span>&#123;&#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyPressed</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line">     Person man=(Person)e.getSource();</span><br><span class="line">     <span class="keyword">if</span>(e.getKeyCode()==KeyEvent.VK_DOWN)</span><br><span class="line">         go(man,below);</span><br><span class="line">     <span class="keyword">if</span>(e.getKeyCode()==KeyEvent.VK_UP)</span><br><span class="line">         go(man,above);</span><br><span class="line">     <span class="keyword">if</span>(e.getKeyCode()==KeyEvent.VK_LEFT)</span><br><span class="line">         go(man,left);</span><br><span class="line">     <span class="keyword">if</span>(e.getKeyCode()==KeyEvent.VK_RIGHT)</span><br><span class="line">        go(man,right);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mousePressed</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">     Person man=(Person)e.getSource();</span><br><span class="line">     <span class="keyword">int</span> x=-<span class="number">1</span>,y=-<span class="number">1</span>;</span><br><span class="line">     x=e.getX();</span><br><span class="line">     y=e.getY();</span><br><span class="line">     <span class="keyword">int</span> w=man.getBounds().width;</span><br><span class="line">     <span class="keyword">int</span> h=man.getBounds().height;</span><br><span class="line">     <span class="keyword">if</span>(y&gt;h/<span class="number">2</span>)</span><br><span class="line">        go(man,below); </span><br><span class="line">     <span class="keyword">if</span>(y&lt;h/<span class="number">2</span>)</span><br><span class="line">        go(man,above);</span><br><span class="line">     <span class="keyword">if</span>(x&lt;w/<span class="number">2</span>)</span><br><span class="line">        go(man,left);</span><br><span class="line">     <span class="keyword">if</span>(x&gt;w/<span class="number">2</span>)</span><br><span class="line">        go(man,right);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseReleased</span><span class="params">(MouseEvent e)</span> </span>&#123;&#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseEntered</span><span class="params">(MouseEvent e)</span>  </span>&#123;&#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseExited</span><span class="params">(MouseEvent e)</span>   </span>&#123;&#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span>  </span>&#123;&#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">go</span><span class="params">(Person man,JButton direction)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">boolean</span> move=<span class="keyword">true</span>;</span><br><span class="line">      Rectangle manRect=man.getBounds();</span><br><span class="line">      <span class="keyword">int</span> x=man.getBounds().x;</span><br><span class="line">      <span class="keyword">int</span> y=man.getBounds().y;</span><br><span class="line">      <span class="keyword">if</span>(direction==below)</span><br><span class="line">         y=y+<span class="number">50</span>;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>(direction==above)</span><br><span class="line">         y=y-<span class="number">50</span>;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>(direction==left)</span><br><span class="line">         x=x-<span class="number">50</span>;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>(direction==right)</span><br><span class="line">         x=x+<span class="number">50</span>;</span><br><span class="line">      manRect.setLocation(x,y);</span><br><span class="line">      Rectangle directionRect=direction.getBounds();</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">10</span>;k++) &#123;</span><br><span class="line">          Rectangle personRect=person[k].getBounds();</span><br><span class="line">         <span class="keyword">if</span>((manRect.intersects(personRect))&amp;&amp;(man.number!=k))</span><br><span class="line">            move=<span class="keyword">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(manRect.intersects(directionRect))</span><br><span class="line">            move=<span class="keyword">false</span>;</span><br><span class="line">      <span class="keyword">if</span>(move==<span class="keyword">true</span>)</span><br><span class="line">            man.setLocation(x,y);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">      dispose(); </span><br><span class="line">      <span class="keyword">new</span> Hua_Rong_Road();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Person.java </span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> <span class="keyword">extends</span> <span class="title">JButton</span> <span class="keyword">implements</span> <span class="title">FocusListener</span> </span>&#123; </span><br><span class="line">   <span class="keyword">int</span> number;</span><br><span class="line">   Color c=<span class="keyword">new</span> Color(<span class="number">255</span>,<span class="number">245</span>,<span class="number">170</span>);</span><br><span class="line">   Font font=<span class="keyword">new</span> Font(<span class="string">"宋体"</span>,Font.BOLD,<span class="number">12</span>);</span><br><span class="line">   Person(<span class="keyword">int</span> number,String s) &#123;</span><br><span class="line">       <span class="keyword">super</span>(s);</span><br><span class="line">       setBackground(c);</span><br><span class="line">       setFont(font);</span><br><span class="line">       <span class="keyword">this</span>.number=number;</span><br><span class="line">       c=getBackground();</span><br><span class="line">       addFocusListener(<span class="keyword">this</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">focusGained</span><span class="params">(FocusEvent e)</span> </span>&#123;</span><br><span class="line">      setBackground(Color.red);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">focusLost</span><span class="params">(FocusEvent e)</span> </span>&#123;</span><br><span class="line">      setBackground(c);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>任何组件上都可以发生鼠标事件，如：鼠标进入组件、退出组件、在组件上方单击鼠标、拖动鼠标等都触发鼠标事件，即导致MouseEvent类自动创建一个事件对象。事件源注册监视器的方法是addMouseListener(MouseListener listener)。当某个组件处于激活状态时，如果用户敲击键盘上一个键就导致这个组件触发KeyEvent事件。使用KeyListener接口处理键盘事件。组件可以触发焦点事件。当组件具有焦点监视器后，如果组件从无输入焦点变成有输入焦点或从有输入焦点变成无输入焦点都会触发FocusEvent事件。使用FocusListener接口处理焦点事件。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;通过图形用户界面（Graphics User Interface，GUI），用户和程序之间可以方便地进行交互。Java包含了许多来支持GUI设计的类，如：按钮、菜单、列表、文本框等组件类，同时它还包含窗口、面板等容器类。学习组件除了了解组件的属性和功能外，一个更重要的方面是学习怎样处理组件上发生的界面事件。在学习处理事件时，必须很好地掌握事件源、监视器、处理事件的接口这三个概念。</summary>
    
    
    
    <category term="Java" scheme="http://www.zanple.top/categories/Java/"/>
    
    
    <category term="游戏" scheme="http://www.zanple.top/tags/%E6%B8%B8%E6%88%8F/"/>
    
    <category term="Java" scheme="http://www.zanple.top/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>计算机图形学-多边形扫描转换</title>
    <link href="http://www.zanple.top/2019/06/18/cg-polygon-scan/"/>
    <id>http://www.zanple.top/2019/06/18/cg-polygon-scan/</id>
    <published>2019-06-18T11:49:25.000Z</published>
    <updated>2019-06-18T11:49:25.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>输入一个用顶点序列表示的多边形，利用 x-扫描线算法实现多边形填充；</p><p>利用屏幕取点法确定多边形的顶点序列，绘制闭合多边形并用颜色填充。<a id="more"></a></p></blockquote><h1 id="1-原理"><a href="#1-原理" class="headerlink" title="1. 原理"></a>1. 原理</h1><h2 id="1-1-基本概念"><a href="#1-1-基本概念" class="headerlink" title="1.1 基本概念"></a>1.1 基本概念</h2><div align=center><p><img src="image-20200327191837468.png" alt="多边形扫描转换"></p><p><img src="image-20200327191846730.png" alt="扫描线算法"></p></div><h2 id="1-2-实现步骤"><a href="#1-2-实现步骤" class="headerlink" title="1.2 实现步骤"></a>1.2 实现步骤</h2><div align=center><p><img src="image-20200327191854796.png" alt="实现步骤"></p><p><img src="image-20200327191904852.png" alt="实现步骤"></p></div><h2 id="1-3-涉及的问题"><a href="#1-3-涉及的问题" class="headerlink" title="1.3 涉及的问题"></a>1.3 涉及的问题</h2><div align=center><p><img src="image-20200327191924342.png" alt="涉及的问题"></p><p><img src="image-20200327191935015.png" alt="涉及的问题"></p></div><h1 id="2-程序实现"><a href="#2-程序实现" class="headerlink" title="2. 程序实现"></a>2. 程序实现</h1><h2 id="2-1-数据结构"><a href="#2-1-数据结构" class="headerlink" title="2.1 数据结构"></a>2.1 数据结构</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">EdgeNode</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> ymax;<span class="comment">//直线上端点的y坐标</span></span><br><span class="line"><span class="keyword">double</span> xmin;<span class="comment">//直线下端点的x坐标</span></span><br><span class="line"><span class="keyword">double</span> fm;<span class="comment">//斜率倒数</span></span><br><span class="line">EdgeNode* next;<span class="comment">//连接下一个边</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">HeadNode</span> &#123;</span><span class="comment">//头节点 相当于EdgeTable  ET 表中登记项的y值</span></span><br><span class="line"><span class="keyword">int</span> ymin;<span class="comment">//最小y值，</span></span><br><span class="line">EdgeNode* link;<span class="comment">//连接边节点</span></span><br><span class="line">HeadNode* next;<span class="comment">//连接下一个头节点</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="2-2-GetET-创建边表"><a href="#2-2-GetET-创建边表" class="headerlink" title="2.2 GetET 创建边表"></a>2.2 GetET 创建边表</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">CCG4_2View::HeadNode* <span class="title">CCG4_2View::GetET</span><span class="params">(CArray&lt;CPoint, CPoint&gt;* points)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HeadNode* pHead = <span class="literal">NULL</span>;<span class="comment">//初始化边表的头节点</span></span><br><span class="line"><span class="keyword">int</span> ymin;</span><br><span class="line"><span class="keyword">int</span> nymin, nymax;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;points-&gt;GetSize(); i++)<span class="comment">//构造边链表</span></span><br><span class="line">&#123;</span><br><span class="line">CPoint point1 = (CPoint)points-&gt;GetAt(i);</span><br><span class="line">CPoint point2;</span><br><span class="line"><span class="keyword">if</span> (i == points-&gt;GetSize() - <span class="number">1</span>)<span class="comment">//最后一个点和第一点构成一条边</span></span><br><span class="line">point2 = (CPoint)points-&gt;GetAt(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">point2 = (CPoint)points-&gt;GetAt(i + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span> (point1.y == point2.y)<span class="comment">//舍弃平行于x轴</span></span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">EdgeNode* edge = <span class="keyword">new</span> EdgeNode();</span><br><span class="line">edge-&gt;next = <span class="literal">NULL</span>;<span class="comment">//初始化边表</span></span><br><span class="line">edge-&gt;fm = (<span class="keyword">double</span>)(point2.x - point1.x) / (point2.y - point1.y);</span><br><span class="line"><span class="keyword">if</span> (point1.y &gt; point2.y)</span><br><span class="line">&#123;</span><br><span class="line">edge-&gt;ymax = point1.y; </span><br><span class="line">ymin = point2.y;</span><br><span class="line">edge-&gt;xmin = point2.x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">edge-&gt;ymax = point2.y; </span><br><span class="line">ymin = point1.y;</span><br><span class="line">edge-&gt;xmin = point1.x;</span><br><span class="line">&#125;</span><br><span class="line">CPoint point3;</span><br><span class="line"><span class="keyword">int</span> j = i + <span class="number">2</span>;</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (j&lt;points-&gt;GetSize())</span><br><span class="line">point3 = (CPoint)points-&gt;GetAt(j);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">point3 = (CPoint)points-&gt;GetAt(j - points-&gt;GetSize());</span><br><span class="line">j++;</span><br><span class="line">&#125; <span class="keyword">while</span> (point2.y == point3.y);</span><br><span class="line"><span class="keyword">if</span> (point2.y &gt; point3.y) &#123;</span><br><span class="line">nymax = point2.y; </span><br><span class="line">nymin = point3.y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">nymax = point3.y; </span><br><span class="line">nymin = point2.y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ymin != nymin &amp;&amp; edge-&gt;ymax != nymax)<span class="comment">//不为局部极大或极小</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (edge-&gt;ymax &gt; nymax) &#123;</span><br><span class="line">ymin++;</span><br><span class="line">edge-&gt;xmin += edge-&gt;fm;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">edge-&gt;ymax--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//加入 ET 表</span></span><br><span class="line"><span class="keyword">if</span> (pHead == <span class="literal">NULL</span>) &#123;</span><br><span class="line">pHead = <span class="keyword">new</span> HeadNode();</span><br><span class="line">pHead-&gt;ymin = ymin;</span><br><span class="line">pHead-&gt;link = edge;</span><br><span class="line">pHead-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">AddEdge(pHead, ymin, edge);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//返回ET表头指针 EdgeTable</span></span><br><span class="line"><span class="keyword">return</span> pHead;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3-AddEdge-添加边到边表"><a href="#2-3-AddEdge-添加边到边表" class="headerlink" title="2.3 AddEdge 添加边到边表"></a>2.3 AddEdge 添加边到边表</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CCG4_2View::AddEdge</span><span class="params">(HeadNode* head, <span class="keyword">int</span> ymin, EdgeNode* edge)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HeadNode* temphead;</span><br><span class="line">temphead = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">while</span> (head != <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (head-&gt;ymin == ymin) &#123;</span><br><span class="line">EdgeNode* p = head-&gt;link;<span class="comment">//连接边表</span></span><br><span class="line"><span class="keyword">if</span> (p-&gt;xmin &gt; edge-&gt;xmin) &#123;</span><br><span class="line">head-&gt;link = edge;</span><br><span class="line">edge-&gt;next = p;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (p-&gt;next != <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (p-&gt;next-&gt;xmin &gt; edge-&gt;xmin) &#123;</span><br><span class="line">edge-&gt;next = p-&gt;next;</span><br><span class="line">p-&gt;next = edge;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">p-&gt;next = edge;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (head-&gt;ymin &gt; ymin) &#123;</span><br><span class="line">HeadNode* newhead = <span class="keyword">new</span> HeadNode();</span><br><span class="line">newhead-&gt;ymin = head-&gt;ymin;</span><br><span class="line">newhead-&gt;link = head-&gt;link;</span><br><span class="line">newhead-&gt;next = head-&gt;next;</span><br><span class="line">head-&gt;ymin = ymin;</span><br><span class="line">head-&gt;link = edge;</span><br><span class="line">head-&gt;next = newhead;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">temphead = head;</span><br><span class="line">head = head-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">HeadNode* newhead = <span class="keyword">new</span> HeadNode();</span><br><span class="line">newhead-&gt;ymin = ymin;</span><br><span class="line">newhead-&gt;link = edge;</span><br><span class="line">newhead-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">temphead-&gt;next = newhead;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-4-Polygonfill-多边形填充"><a href="#2-4-Polygonfill-多边形填充" class="headerlink" title="2.4 Polygonfill 多边形填充"></a>2.4 Polygonfill 多边形填充</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CCG4_2View::Polygonfill</span><span class="params">(CDC *pDC, CArray&lt;CPoint, CPoint&gt;* points, COLORREF color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HeadNode* pET = GetET(points);</span><br><span class="line">EdgeNode* pAET = <span class="literal">NULL</span>;<span class="comment">//初始化活动边表</span></span><br><span class="line"><span class="keyword">int</span> y = pET-&gt;ymin;</span><br><span class="line"><span class="keyword">int</span> ymax = y;</span><br><span class="line"><span class="comment">//有需要处理的扫描线</span></span><br><span class="line"><span class="keyword">while</span> (y &lt;= ymax)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (pET != <span class="literal">NULL</span> &amp;&amp; pET-&gt;ymin == y)</span><br><span class="line">&#123;</span><br><span class="line">EdgeNode* p = pET-&gt;link;</span><br><span class="line"><span class="keyword">if</span> (pAET == <span class="literal">NULL</span>) pAET = p;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">EdgeNode* q = pAET;</span><br><span class="line"><span class="keyword">while</span> (q-&gt;next != <span class="literal">NULL</span>) q = q-&gt;next;</span><br><span class="line">q-&gt;next = p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//清除已经处理过的头节点，并释放空间</span></span><br><span class="line">HeadNode* deletehead = pET;</span><br><span class="line">pET = pET-&gt;next;</span><br><span class="line"><span class="keyword">delete</span> deletehead;</span><br><span class="line"><span class="keyword">while</span> (p != <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(ymax &lt; p-&gt;ymax)</span><br><span class="line">ymax = p-&gt;ymax;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">SortAET(pAET);</span><br><span class="line">&#125;</span><br><span class="line">EdgeNode* pFill = pAET;</span><br><span class="line"><span class="keyword">while</span> (pFill != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/***********使用LineTo提高绘制效率***********/</span></span><br><span class="line"><span class="keyword">if</span>(m_Switch == <span class="number">3</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> i1 = (<span class="keyword">int</span>)pFill-&gt;xmin;</span><br><span class="line"><span class="keyword">int</span> i2 = (<span class="keyword">int</span>)pFill-&gt;next-&gt;xmin;</span><br><span class="line">pDC-&gt;MoveTo(i1, y);</span><br><span class="line">pDC-&gt;LineTo(i2, y);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">/***********使用SetPixel进行像素点绘制***********/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = (<span class="keyword">int</span>)pFill-&gt;xmin; i &lt;= (<span class="keyword">int</span>)pFill-&gt;next-&gt;xmin; i++)</span><br><span class="line">pDC-&gt;SetPixel(i, y, color);</span><br><span class="line">&#125;</span><br><span class="line">pFill = pFill-&gt;next-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pFill = pAET;</span><br><span class="line">EdgeNode* pFore = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">while</span> (pFill != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (pFill-&gt;ymax == y)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (pFore != <span class="literal">NULL</span>)</span><br><span class="line">pFore-&gt;next = pFill-&gt;next;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">pAET = pFill-&gt;next;</span><br><span class="line">EdgeNode* deleteedge = pFill;</span><br><span class="line">pFill = pFill-&gt;next;</span><br><span class="line"><span class="keyword">delete</span> deleteedge;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">pFore = pFill;</span><br><span class="line">pFill = pFill-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (pAET != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">pFill = pAET;</span><br><span class="line"><span class="keyword">while</span> (pFill != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">pFill-&gt;xmin += pFill-&gt;fm;</span><br><span class="line">pFill = pFill-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">SortAET(pAET);</span><br><span class="line">&#125;</span><br><span class="line">y++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-5-SortAET-排序"><a href="#2-5-SortAET-排序" class="headerlink" title="2.5 SortAET 排序"></a>2.5 SortAET 排序</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CCG4_2View::SortAET</span><span class="params">(EdgeNode *pEDGE)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">EdgeNode* p1 = pEDGE;</span><br><span class="line">EdgeNode* p2 = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">while</span> (p1 != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">p2 = p1-&gt;next;</span><br><span class="line"><span class="keyword">while</span> (p2 != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p1-&gt;xmin &gt; p2-&gt;xmin)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> cid; <span class="keyword">double</span> cdd;</span><br><span class="line">cid = p1-&gt;ymax; </span><br><span class="line">p1-&gt;ymax = p2-&gt;ymax; </span><br><span class="line">p2-&gt;ymax = cid;</span><br><span class="line">cdd = p1-&gt;xmin; </span><br><span class="line">p1-&gt;xmin = p2-&gt;xmin; </span><br><span class="line">p2-&gt;xmin = cdd;</span><br><span class="line">cdd = p1-&gt;fm;</span><br><span class="line">p1-&gt;fm = p2-&gt;fm;</span><br><span class="line">p2-&gt;fm = cdd;</span><br><span class="line">&#125;</span><br><span class="line">p2 = p2-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">p1 = p1-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3-测试"><a href="#3-测试" class="headerlink" title="3. 测试"></a>3. 测试</h1><h2 id="3-1-实现多边形顶点序列的绘制"><a href="#3-1-实现多边形顶点序列的绘制" class="headerlink" title="3.1 实现多边形顶点序列的绘制"></a>3.1 实现多边形顶点序列的绘制</h2><div align=center><p><img src="clip_image002.jpg" alt="顶点序列绘制"></p></div><h2 id="3-2-鼠标绘制"><a href="#3-2-鼠标绘制" class="headerlink" title="3.2 鼠标绘制"></a>3.2 鼠标绘制</h2><div align=center><p><img src="clip_image002-1585308284525.jpg" alt="鼠标绘制"></p><p><img src="clip_image002-1585308304097.jpg" alt="鼠标绘制"></p></div><h2 id="3-3-提升绘制效率"><a href="#3-3-提升绘制效率" class="headerlink" title="3.3 提升绘制效率"></a>3.3 提升绘制效率</h2><div align=center><p><img src="clip_image002-1585308335256.jpg" alt="优化"></p></div><h1 id="4-总结"><a href="#4-总结" class="headerlink" title="4. 总结"></a>4. 总结</h1><p>对已给的数据结构进行了改动，将顶点数据结构和像素点数据结构改为利用MFC一个数组模板类CArray的动态数组，并使用CPoint记录点，利用GetSize()函数获取序列中点的数目实现对点个数的统计。将活动边表的数据结构合并为边表的数据结构，AET中的xi由其下端点的x坐标加上斜率的倒数求得。</p><p>为了避免思考题中出现表头数组浪费空间的情况，将EdgeTable改为边表的头节点，利用头节点连接该ytop值的边。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;输入一个用顶点序列表示的多边形，利用 x-扫描线算法实现多边形填充；&lt;/p&gt;
&lt;p&gt;利用屏幕取点法确定多边形的顶点序列，绘制闭合多边形并用颜色填充。</summary>
    
    
    
    <category term="计算机图形学" scheme="http://www.zanple.top/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/"/>
    
    
    <category term="计算机图形学" scheme="http://www.zanple.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/"/>
    
    <category term="C" scheme="http://www.zanple.top/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Maya建模练习(2019)</title>
    <link href="http://www.zanple.top/2019/06/17/maya-ex-2019/"/>
    <id>http://www.zanple.top/2019/06/17/maya-ex-2019/</id>
    <published>2019-06-17T11:21:31.000Z</published>
    <updated>2019-06-18T07:59:41.010Z</updated>
    
    <content type="html"><![CDATA[<p>两个Maya课程大作业练习。<a id="more"></a></p><h1 id="1-M4A1模型"><a href="#1-M4A1模型" class="headerlink" title="1. M4A1模型"></a>1. M4A1模型</h1><h2 id="1-1-参考图"><a href="#1-1-参考图" class="headerlink" title="1.1 参考图"></a>1.1 参考图</h2><div align=center><p><img src="m4a1mar.jpg" alt="M4A1参考图"></p></div><h2 id="1-2-模型图"><a href="#1-2-模型图" class="headerlink" title="1.2 模型图"></a>1.2 模型图</h2><p><img src="image-20200326174149642.png" alt="模型图"></p><h1 id="2-武器铺"><a href="#2-武器铺" class="headerlink" title="2. 武器铺"></a>2. 武器铺</h1><h2 id="2-1-参考图"><a href="#2-1-参考图" class="headerlink" title="2.1 参考图"></a>2.1 参考图</h2><div align=center><p><img src="%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20190525152308.jpg" alt="参考图"></p></div><h2 id="2-2-模型图"><a href="#2-2-模型图" class="headerlink" title="2.2 模型图"></a>2.2 模型图</h2><p><img src="image-20200326173631750.png" alt="模型图"></p><h2 id="2-3-渲染图"><a href="#2-3-渲染图" class="headerlink" title="2.3 渲染图"></a>2.3 渲染图</h2><p><img src="2.jpg" alt="渲染图"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;两个Maya课程大作业练习。</summary>
    
    
    
    <category term="Maya" scheme="http://www.zanple.top/categories/Maya/"/>
    
    
    <category term="建模" scheme="http://www.zanple.top/tags/%E5%BB%BA%E6%A8%A1/"/>
    
    <category term="Maya" scheme="http://www.zanple.top/tags/Maya/"/>
    
  </entry>
  
  <entry>
    <title>Java多线程的应用</title>
    <link href="http://www.zanple.top/2019/06/13/java-runable/"/>
    <id>http://www.zanple.top/2019/06/13/java-runable/</id>
    <published>2019-06-13T08:41:52.000Z</published>
    <updated>2020-03-27T08:44:54.752Z</updated>
    
    <content type="html"><![CDATA[<p>广州火车站下面有三个火车票代售点，假如说广州到北京的火车票总共是200张，利用程序来实现三个售票点同时卖票的功能。<a id="more"></a></p><div align=center><p><img src="clip_image002.jpg" alt="售票"></p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> newpackage;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SaleTicket1412</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> ticket = <span class="number">200</span> ;<span class="comment">// 假设一共有200张票</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++)&#123;</span><br><span class="line"><span class="comment">// 要对当前对象进行同步，表示某个时间只能有一个对象操作此代码块</span></span><br><span class="line"><span class="keyword">synchronized</span>(<span class="keyword">this</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(ticket&gt;<span class="number">0</span>)&#123;<span class="comment">// 还有票</span></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">Thread.sleep(<span class="number">300</span>) ;<span class="comment">// 加入延迟</span></span><br><span class="line">&#125;<span class="keyword">catch</span>(InterruptedException e)&#123;</span><br><span class="line">e.printStackTrace() ;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(Thread.currentThread().getName()+<span class="string">"售出第"</span> + (<span class="number">201</span>-ticket--) + <span class="string">"张票"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Train</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123; </span><br><span class="line">                System.out.println(<span class="string">"销售广州往北京的火车票"</span>);</span><br><span class="line">SaleTicket1412 mt = <span class="keyword">new</span> SaleTicket1412() ;<span class="comment">// 定义线程对象</span></span><br><span class="line">Thread t1 = <span class="keyword">new</span> Thread(mt,<span class="string">"售票点1"</span>) ;<span class="comment">// 定义Thread对象</span></span><br><span class="line">Thread t2 = <span class="keyword">new</span> Thread(mt,<span class="string">"售票点2"</span>) ;<span class="comment">// 定义Thread对象</span></span><br><span class="line">Thread t3 = <span class="keyword">new</span> Thread(mt,<span class="string">"售票点3"</span>) ;<span class="comment">// 定义Thread对象</span></span><br><span class="line">t1.start() ;</span><br><span class="line">t2.start() ;</span><br><span class="line">t3.start() ;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;广州火车站下面有三个火车票代售点，假如说广州到北京的火车票总共是200张，利用程序来实现三个售票点同时卖票的功能。</summary>
    
    
    
    <category term="Java" scheme="http://www.zanple.top/categories/Java/"/>
    
    
    <category term="Java" scheme="http://www.zanple.top/tags/Java/"/>
    
    <category term="多线程" scheme="http://www.zanple.top/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>C4D动画-广州印像</title>
    <link href="http://www.zanple.top/2019/06/07/c4d-guangzhou/"/>
    <id>http://www.zanple.top/2019/06/07/c4d-guangzhou/</id>
    <published>2019-06-07T09:13:35.000Z</published>
    <updated>2020-09-05T08:16:31.789Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>三维动画的课设，和另一个同学合作的作品。<a id="more"></a></p></blockquote><div class="bilibili"><iframe src="//player.bilibili.com/player.html?aid=54719206&bvid=BV1y4411M7Do&cid=95718811&page=2" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" > </iframe></div><hr><h1 id="1-概述"><a href="#1-概述" class="headerlink" title="1. 概述"></a>1. 概述</h1><p>我们生活在广州，那么广州给我们带来的映像是什么呢？结合三维建模的特性，我们决定通过描述广州特有的建筑来阐述广州带给我们的记忆。视频主要是将广州最有名的建筑运用小动画串联起来，将广州微缩成一个个小小的建筑，展现我们主题的同时，增加了视频的趣味性，也表达了我们对广州的爱。</p><h1 id="2-脚本"><a href="#2-脚本" class="headerlink" title="2. 脚本"></a>2. 脚本</h1><table><thead><tr><th align="center">建筑</th><th align="center">镜头</th><th align="center">入画方式</th><th align="center">出画方式</th></tr></thead><tbody><tr><td align="center">中信大厦</td><td align="center">固定全景</td><td align="center">掉落入画</td><td align="center">快速旋转</td></tr><tr><td align="center">广州塔</td><td align="center">固定全景+摇</td><td align="center">高速旋转构造</td><td align="center">拆分挤压</td></tr><tr><td align="center">中山纪念堂</td><td align="center">固定全景+摇</td><td align="center">挤压构造</td><td align="center">拆分变成小球</td></tr><tr><td align="center">体育中心</td><td align="center">摇+推进</td><td align="center">碎块重组</td><td align="center">化成水融化</td></tr><tr><td align="center">圆大厦</td><td align="center">固定全景</td><td align="center">缩放构造升起</td><td align="center">移动</td></tr><tr><td align="center">琶洲展馆</td><td align="center">固定全景+摇</td><td align="center">直接入画</td><td align="center">直接出画</td></tr><tr><td align="center">珠江啤酒博物馆</td><td align="center">摇+固定全景</td><td align="center">啤酒罐掉落</td><td align="center">变形</td></tr><tr><td align="center">广东省博物馆</td><td align="center">固定全景</td><td align="center">正方体变形</td><td align="center">旋转破碎</td></tr><tr><td align="center">五羊石像</td><td align="center">固定全景</td><td align="center">破碎后出现</td><td align="center">破碎</td></tr></tbody></table><h1 id="3-设计"><a href="#3-设计" class="headerlink" title="3. 设计"></a>3. 设计</h1><div align=center><p><img src="image-20200327224021438.png" alt="配色方案图"></p><p><img src="image-20200327224033218.png" alt="材质球"></p></div><p>我们场景中每个建筑的颜色都是根据画面上的颜色做参考来进行配比的。</p><h1 id="4-灯光与场景"><a href="#4-灯光与场景" class="headerlink" title="4. 灯光与场景"></a>4. 灯光与场景</h1><div align=center><img src="Snipaste_2019-06-05_17-41-33.png" alt="灯光与场景线框图" style="zoom: 50%;" /><img src="Snipaste_2019-06-05_17-42-01.png" alt="灯光与场景光影着色图" style="zoom:50%;" /></div><p>灯光使用<code>GSG Light Kit的Softbox</code>，选用三盏灯分别从三个方向进行打光，参数进行如下设置：</p><div align=center><img src="Snipaste_2019-06-05_18-54-22.png" alt="顶部灯光" style="zoom:50%;" /><img src="Snipaste_2019-06-05_18-54-35.png" alt="左侧灯光 " style="zoom:50%;" /><img src="Snipaste_2019-06-05_18-54-44.png" alt="右侧灯光" style="zoom:50%;" /></div><p>场景使用一个L形曲面，避免面与面之间的棱角过于锋利:</p><div align=center><p><img src="image-20200327224357898.png" alt="场景的L形曲面"></p></div><h1 id="5-建模"><a href="#5-建模" class="headerlink" title="5. 建模"></a>5. 建模</h1><p>为了展现广州的建筑特色，我们选取了9个比较有代表性的广州建筑，利用网上找到的图片，在<code>3dsmax</code>里面进行建模，细化，导出<code>FBX</code>，再将模型导入到<code>c4d</code>中进行材质编辑与渲染。</p><div align=center><p><img src="image-20200327224510294.png" alt="中信大厦的模型与效果图"></p><p><img src="image-20200327224542848.png" alt="广州塔的模型与效果图"></p><p><img src="image-20200327224603641.png" alt="中山纪念堂的模型与效果图"></p><p><img src="image-20200327224617092.png" alt="广州体育中心的模型与效果图"></p><p><img src="image-20200327224639073.png" alt="圆大厦的模型与效果图"></p><p><img src="image-20200327224655343.png" alt="琶洲展馆的模型与效果图"></p><p><img src="image-20200327224712106.png" alt="珠江啤酒博物馆的模型与效果图"></p><p><img src="image-20200327224725945.png" alt="广东省博物馆的模型与效果图"></p><p><img src="image-20200327224738517.png" alt="五羊石像的模型与效果图"></p></div><p>其中五羊石像为了更好的导入<code>C4D</code>进行后续的动画编辑在<code>ZBrush</code>进行了减面操作以优化动画编辑处理，将模型由九十万多个面减少为十八万个面。</p><h1 id="6-动画特效"><a href="#6-动画特效" class="headerlink" title="6. 动画特效"></a>6. 动画特效</h1><p>每一栋建筑与建筑之间我们都会用一些动效和多面体将他们联系起来，尽量展现了更多样的形式还有奇思妙想。</p><p>特效动画部分是在<code>c4d</code>里完成，经过在<code>3dMax</code>与<code>C4D</code>效果的对比与我们的再三考虑，我们发现，利用<code>c4d</code>的效果去完成我们的作品，在渲染的画面以及基调上会更加适合，从而使我们的作品更加完善。</p><h2 id="6-1-预处理"><a href="#6-1-预处理" class="headerlink" title="6.1 预处理"></a>6.1 预处理</h2><div align=center><img src="image-20200327225149564.png" alt="连接模型" style="zoom:100%;" /></div><p>在对模型进行动画编辑前首先对需要进行<code>分裂</code>与<code>泰森分裂</code>的模型进行<code>连接（焊接）</code>处理，并将<code>平滑着色</code>模式选为最高。</p><h2 id="6-2-中信大厦"><a href="#6-2-中信大厦" class="headerlink" title="6.2 中信大厦"></a>6.2 中信大厦</h2><div align=center><img src="Snipaste_2019-06-05_19-31-42.png" alt="轨迹动画" style="zoom:50%;" /></div><p>由于对中信大厦进行模拟动力学处理无法达到预期动画效果，因此对中信大厦进行模拟动力学轨迹关键帧，实现<code>轨迹动画</code>。在变化为广州塔的过程首先使用普通关键帧动画，在关键变化过程使用分裂、推散、简易与延迟效果器实现复合效果。</p><div align=center><p><img src="image-20200327230041303.png" alt="中信大厦分裂复合效果"></p></div><h2 id="6-3-广州塔"><a href="#6-3-广州塔" class="headerlink" title="6.3 广州塔"></a>6.3 广州塔</h2><div align=center><p><img src="image-20200327230104831.png" alt="广州塔分裂复合效果"></p></div><p>广州塔的动画与变换为中山纪念堂的过程同样使用了多个效果器进行复合效果处理，其中利用<code>时间效果器</code>的特征实现独立旋转效果。</p><h2 id="6-4-中山纪念堂"><a href="#6-4-中山纪念堂" class="headerlink" title="6.4 中山纪念堂"></a>6.4 中山纪念堂</h2><div align=center><p><img src="image-20200327230134775.png" alt="中山纪念堂小球动力学标签"></p></div><p>在变为小球后启用小球的刚体动力学属性，并设置y向初速度实现小球向上抛的效果，在小球第二次落地后启用小球的<code>泰森分裂</code>效果，并另外设置刚性小球与该小球产生碰撞使小球破碎落地。</p><div align=center><p><img src="image-20200327230146837.png" alt="小球的泰森分裂"></p></div><p>在<code>泰森分裂</code>中<code>优化并关闭空洞</code>，使小球破碎后的具有实心效果，同时设置其为空心对象以减少计算量。打开小球分裂的内表面与外表面选集并使用不同材质，增强小球破碎的真实感。</p><h2 id="6-5-广州体育中心"><a href="#6-5-广州体育中心" class="headerlink" title="6.5 广州体育中心"></a>6.5 广州体育中心</h2><p>对小球碎片进行适当剪辑处理实现碎片汇聚效果，碎片变换为体育中心同样采用多个效果器的复合效果。</p><div align=center><p><img src="image-20200327230211538.png" alt="融球效果"></p></div><p>使用大小不同的两个小球实现类似流体分离的效果，提高<code>融球</code>的细分程度以优化平滑效果。设置小球的动力学初速度，实现小球向上跳动的效果。</p><div align=center><p><img src="image-20200327230223890.png" alt="衰减设置"></p></div><p>在小球再次下落融合后设置体育中心的涟漪效果，实现涟漪效果时首先尝试使用公式效果器，设置公式为<code>Sin((u+t)*2.0*PI)*0.2</code>，但是效果不是很好于是更换为简易效果器，在效果器的衰减选项中设置其形状为球体，并绘制如图所示样条曲线，将其样条动画速率设置为<code>20%</code>以达到涟漪动画效果。体育中心变换到圆大厦使用多个效果器复合与关键帧动画完成过度。</p><h2 id="6-6-广州圆大厦"><a href="#6-6-广州圆大厦" class="headerlink" title="6.6 广州圆大厦"></a>6.6 广州圆大厦</h2><div align=center><p><img src="image-20200327230349820.png" alt="简易关键帧动画"></p></div><p>对圆大厦的旋转速度分别设置不同的变化速度以达到非线性变化旋转效果，更贴合物体的真实转动。</p><div align=center><p><img src="image-20200327230404024.png" alt="圆大厦轨迹"></p></div><p>接着对圆大厦设置轨迹，实现圆大厦的出画。</p><h2 id="6-7-琶洲展馆"><a href="#6-7-琶洲展馆" class="headerlink" title="6.7 琶洲展馆"></a>6.7 琶洲展馆</h2><div align=center><p><img src="image-20200327230425791.png" alt="圆大厦轨迹"></p></div><p>利用轨迹实现金币（圆大厦）的移动，通过关键帧的形式“打开”琶洲展馆顶部，启用圆大厦的<code>动力学标签</code>实现自由落体效果。</p><h2 id="6-8-珠江啤酒博物馆"><a href="#6-8-珠江啤酒博物馆" class="headerlink" title="6.8 珠江啤酒博物馆"></a>6.8 珠江啤酒博物馆</h2><div align=center><p><img src="image-20200327230453059.png" alt="动力学外形"></p></div><p>创建基本几何体实现啤酒馆外圈的<code>动力学属性</code>，设置啤酒桶的动力学标签并对其进行<code>烘培</code>。</p><div align=center><p><img src="image-20200327230509833.png" alt="曲线轨迹"></p></div><p>调整啤酒桶的轨迹使其更符合手拿起的动作。啤酒馆变换为立方体同样采用多个效果器复合。通过<code>融球</code>效果改变立方体的颜色。</p><div align=center><p><img src="image-20200327230525134.png" alt="融球效果"></p></div><h2 id="6-9-广东省博物馆"><a href="#6-9-广东省博物馆" class="headerlink" title="6.9 广东省博物馆"></a>6.9 广东省博物馆</h2><p>利用关键帧动画实现出现纹路，旋转效果。博物馆变化为立方体同样采用多个效果器复合实现。使用<code>泰森分裂</code>破碎立方体。</p><h2 id="6-9-五羊石像"><a href="#6-9-五羊石像" class="headerlink" title="6.9 五羊石像"></a>6.9 五羊石像</h2><p>设置多个关键帧动画实现石像活动效果。</p><div align=center><p><img src="image-20200327230557438.png" alt="石像的泰森分裂"></p></div><p>对五羊石像进行泰森分裂，设置点数量为2000，同样进行<code>封闭空洞与空心处理</code>，设置内外表面选集以实现内外不同材质。</p><div align=center><p><img src="image-20200327230611707.png" alt="石像复合效果器"></p></div><p>使用多个效果器实现石像炸开碎片上升构成五羊粒子群，并消失拼凑出标题的效果。其中<code>简易效果器</code>控制碎片的移动与大小，随机产生随机位移、旋转效果避免整体效果过于单一，<code>时间效果器</code>实现碎片顺时针上旋效果，<code>推散效果器</code>实现碎片炸开效果。</p><h1 id="7-后期剪辑"><a href="#7-后期剪辑" class="headerlink" title="7. 后期剪辑"></a>7. 后期剪辑</h1><p>剪辑部分是在pr里完成，将画面更加顺畅的拼接起来，加入bgm以及效果音。手部动作是通过绿幕以及微单拍摄，通过ae叠加进去的，使我们的画面更加有微缩感。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;三维动画的课设，和另一个同学合作的作品。</summary>
    
    
    
    <category term="C4D" scheme="http://www.zanple.top/categories/C4D/"/>
    
    
    <category term="建模" scheme="http://www.zanple.top/tags/%E5%BB%BA%E6%A8%A1/"/>
    
    <category term="3ds Max" scheme="http://www.zanple.top/tags/3ds-Max/"/>
    
    <category term="C4D" scheme="http://www.zanple.top/tags/C4D/"/>
    
    <category term="ZBrush" scheme="http://www.zanple.top/tags/ZBrush/"/>
    
    <category term="动画" scheme="http://www.zanple.top/tags/%E5%8A%A8%E7%94%BB/"/>
    
    <category term="works" scheme="http://www.zanple.top/tags/works/"/>
    
  </entry>
  
</feed>
